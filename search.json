[{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"a-functional-approach-to-building-up-specs","dir":"Articles","previous_headings":"","what":"A functional approach to building up specs","title":"Design","text":"package seeks build library functions can iteratively build Vega-Lite spec. initializer function vl_chart initializes chart (can optionally take values top-level spec attributes), subsequent functions can add various component spec – take spec input well arguments relating new component return modified spec new component. thorough introduction use package, see introduction vignette. example charts see example gallery.","code":"library(vlbuildr)  vl_chart() %>%    vl_add_data(values = mtcars) %>%    vl_mark_point() %>%    vl_encode_x(\"wt\") %>%    vl_encode_y(\"mpg\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"goals-and-non-goals","dir":"Articles","previous_headings":"","what":"Goals and non-goals","title":"Design","text":"goal package enable building chart possible build Vega-Lite using package. However, goal able build possible spec valid Vega-Lite – can multiple ways build chart Vega-Lite, package might enable building one possible specs encode chart. goal make possible build common / simple plots without needing provide nested arguments. However, complex charts require amount nested list inputs – goal enable charts built without nested arguments.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"underlying-objects","dir":"Articles","previous_headings":"","what":"Underlying objects","title":"Design","text":"moment, various top-level specs S3 classes basically treated lists. internal functions take advantage classes help determine right way add component. currently classes sub-components spec, e.g. class might correspond “Axis” definition Vega-Lite spec. Rather, functions build components lists, validity checked using schema. Moving approach actual classes defined potential object possibility. motivation approach cleaner internal handing rather substantially different API, package seek primarily present users functional interface building specs. user-facing aspect likely change described following section","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"making-sub-components","dir":"Articles","previous_headings":"Underlying objects","what":"Making sub-components","title":"Design","text":"package currently offer number functions grouped list vl (e.g. vl$BinParams) make given sub-component Vega-Lite spec (map object taking Object-oriented approach). functions intended build sub-components can passed arguments functions add spec. However, intention make functions add spec granular enough general won’t need complicated nested objects taken arguments, cases vl$ functions won’t needed. part API might change, especially internal components reworked make use objects corresponding sub-components.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"correctness-of-specs-being-built","dir":"Articles","previous_headings":"","what":"Correctness of specs being built","title":"Design","text":"package may build incorrect specs given improper inputs needed components added spec. protection added adding sub-schema validation. function adds component spec, checks component correct. checking give warning invalid spec; another area improvement giving detailed error messages. validation may also still imperfect. also may possible add invalid combinations individual components spec, overall spec currently validated. Potentially validation also occur prior printing (check validity entire spec), might something add vegawdiget package, handles printing.","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"a-semi-automated-approach-to-building-an-api","dir":"Articles","previous_headings":"","what":"A semi-automated approach to building an API","title":"Design","text":"functions package build using semi-automated approach. companion package vlmetabuildr located inside ‘build’ directory used write functions ‘zzz_autogen_api.R’ file. Note process much semi-automated fully automated. vlmetabuildr made specific Vega-lite api package general purpose JSON Schema –> API package. Specific patterns building API (e.g. groups functions) identified, adding encoding via vl_encode_<channel> functions channel. function adding encoding spec generally hand-crafted built within package. vlmetabuildr package make functions (1) identifying channels need function, (2) building function channel appropriate arguments documentations pulled Vega-lite schema. summary, automated includes: Identifying general groups functions needed adding spec Mapping types functions schema pull reqiurements internal functions adding category components spec automated includes: Figuring varieties group functions, e.g. channels get encode function Adding right parameters function based requirements schema Adding documentation parameters based descriptions schema parts automated extremely tedious manually. Potentially API construction automated, however, difficulty automation increase substantially /resulting API might clunkier.","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"build-the-auto-generated-components","dir":"Articles","previous_headings":"Details","what":"Build the auto-generated components","title":"Design","text":"script ‘build/build.R’ builds auto-generated components package.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"stucture-of-adder-functions","dir":"Articles","previous_headings":"Details","what":"Stucture of ‘adder’ functions","title":"Design","text":"auto-generated functions call internal function add specified component spec. functions generally take argument least three arguments: (1) old spec, (2) new object add (list), (3) reference within schema object corresponds . Additionally, arguments needed specify component get added might also included. adder function generally validate object.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/design.html","id":"pulling-bits-from-the-schema","dir":"Articles","previous_headings":"Details","what":"Pulling bits from the schema","title":"Design","text":"Functions pulling properties available particular part Vega-Lite schema schema.R file vlmetabuildr. functions can recursively travel schema pull available enums, properties, requirements particular component schema. functions adapted similar functions javascript vega-lite-api package.","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"bar-charts","dir":"Articles","previous_headings":"Single-view plots","what":"Bar charts","title":"Example Gallery","text":"Simple Bar Chart Aggregate Bar Chart Stacked Bar Chart Normalized Stacked Bar Chart","code":"values <- tibble::tribble(   ~a, ~b,   \"A\", 28,    \"B\", 55,    \"C\",  43,   \"D\", 91,    \"E\",  81,    \"F\", 53,   \"G\",19,    \"H\", 87,    \"I\", 52 )  vl_chart(values) %>%    vl_mark_bar() %>%   vl_encode_x('a') %>%    vl_axis_x(labelAngle = 0) %>%   vl_encode_y('b') vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/population.json\") %>%   vl_filter(\"datum.year == 2000\") %>%   vl_encode_y(field = \"age\",                type = \"ordinal\") %>%   vl_encode_x(field = \"people\",                type = \"quantitative\",                aggregate = \"sum\",               axis = list(title = \"population\"),                stack = \"normalize\") %>%   vl_mark_bar() %>%   vl_sort_y_by_encoding(encoding = \"x\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/seattle-weather.csv\") %>%   vl_mark_bar() %>%   vl_encode_x(field = 'date', type = 'ordinal', timeUnit = 'month',                title = 'Month of the year') %>%   vl_encode_y(aggregate = 'count', type = 'quantitative') %>%   vl_encode_color('weather', type = 'nominal', title = 'Weather type') %>%   vl_scale_color(domain = list(\"sun\", \"fog\", \"drizzle\", \"rain\", \"snow\"),                  range = list(\"#e7ba52\", \"#c7c7c7\", \"#aec7e8\", \"#1f77b4\", \"#9467bd\")) vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/population.json\") %>%   vl_calculate(calculate = \"datum.sex == 2 ? 'Female' : 'Male'\",                 as = \"gender\") %>%   vl_filter(\"datum.year == 2000\") %>%   vl_encode_x(field = \"age\",                type = \"ordinal\") %>%   vl_encode_y(field = \"people\", type = \"quantitative\") %>%   vl_stack_y(\"normalize\") %>%   vl_aggregate_y(aggregate = \"sum\") %>%   vl_axis_y(title = \"population\") %>%   vl_encode_color(field = \"gender\", type = \"nominal\") %>%   vl_mark_bar() %>%    vl_config_axis(domainWidth = 1) %>%   vl_config_view(stroke = \"transparent\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"histograms-and-density-plots","dir":"Articles","previous_headings":"Single-view plots","what":"Histograms and Density Plots","title":"Example Gallery","text":"Histogram 2D Histogram Density Plot","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/movies.json\") %>%   vl_encode_x(field = \"IMDB_Rating\", type = \"quantitative\") %>%   vl_encode_y(type = \"quantitative\", aggregate = \"count\") %>%   vl_bin_x(maxbins=10) %>%   vl_mark_bar() vl_chart() %>%   vl_add_data(url = 'https://vega.github.io/vega-editor/app/data/movies.json') %>%   vl_filter('isDefined(datum[\"IMDB_Rating\"]) && isDefined(datum[\"Rotten_Tomatoes_Rating\"])') %>%   vl_encode_x(field = 'IMDB_Rating', type = 'quantitative') %>%   vl_encode_y(field = 'Rotten_Tomatoes_Rating', type = 'quantitative') %>%   vl_encode_color(type = 'quantitative', aggregate = 'count') %>%   vl_bin_x(maxbins=60) %>%   vl_bin_y(maxbins=40) %>%   vl_mark_rect() %>%   vl_config_view(stroke = 'transparent') vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/movies.json\") %>%   vl_density(\"IMDB_Rating\", bandwidth = 0.3) %>%   vl_encode_x(field = \"value\", type = \"quantitative\", title = \"IMDB Rating\") %>%   vl_encode_y(field = \"density\", type = \"quantitative\") %>%   vl_mark_area()"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"scatter-strip-plots","dir":"Articles","previous_headings":"Single-view plots","what":"Scatter & Strip Plots","title":"Example Gallery","text":"Scatterplot 1D Striplot Strip plot Bubble plot","code":"vl_chart() %>%    vl_add_data(values = mtcars) %>%    vl_mark_point() %>%    vl_encode_x(\"wt\") %>%    vl_encode_y(\"mpg\") %>%     vl_encode_tooltip_array(c(\"_row\",\"mpg\",\"wt\")) vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/seattle-weather.csv\") %>%   vl_encode_x(field = \"precipitation\", type = \"quantitative\") %>%   vl_mark_tick() vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_encode_y(field = \"Cylinders\", type = \"ordinal\") %>%   vl_mark_tick() vl_chart(width = 500, height = 300) %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/gapminder-health-income.csv\") %>%   vl_add_interval_selection(\"view\", bind = \"scales\") %>%   vl_mark_circle() %>%   vl_encode_x(field = 'income', type = \"quantitative\") %>%   vl_scale_x(type = 'log') %>%   vl_encode_y(field = 'health', type = \"quantitative\") %>%   vl_scale_y(zero = FALSE) %>%   vl_axis_y(minExtent = 30) %>%   vl_encode_size(field = \"population\", type = 'quantitative') %>%   vl_encode_color(value = '#000')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"line-charts","dir":"Articles","previous_headings":"Single-view plots","what":"Line Charts","title":"Example Gallery","text":"Line Chart Multi-series line chart point markers Multi-series line chart repeat operator Connected Scatterplot Slope Graph","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/stocks.csv\") %>%   vl_filter('datum.symbol===\"GOOG\"') %>%   vl_mark_line() %>%   vl_encode_x('date:T') %>%   vl_encode_y('price:Q') vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/stocks.csv\") %>%   vl_mark_line(point = TRUE) %>%   vl_encode_x('date', timeUnit = 'year') %>%   vl_encode_y('price:Q', aggregate = 'mean') %>%   vl_encode_color('symbol:N') vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/movies.json\") %>%   vl_repeat_layer('US_Gross', 'Worldwide_Gross') %>%   vl_encode_x(field = \"IMDB_Rating\", type = \"quantitative\", bin = TRUE) %>%   vl_encode_y(field = list(`repeat` = \"layer\"), type = \"quantitative\", aggregate = \"mean\",                title = \"Mean of US and Worldwide Gross\") %>%    vl_encode_color(datum = list(`repeat` = \"layer\"), type = \"nominal\") %>%   vl_mark_line() vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/driving.json\") %>%   vl_encode_x('miles:Q') %>%   vl_scale_x(zero = FALSE) %>%   vl_encode_y('gas:Q') %>%   vl_scale_y(zero = FALSE) %>%   vl_encode_order('year') %>%   vl_mark_line(point = TRUE) vl_chart(width = list(step = 50)) %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/barley.json\") %>%   vl_mark_line() %>%   vl_encode_x('year:O') %>%   vl_scale_x(padding = 0.5) %>%   vl_encode_y('yield:Q', aggregate = 'median') %>%   vl_encode_color('site:N') %>%   vl_mark_line() #> Adding additional mark by making spec layered; may limit further modification. Use vl_layer instead for more flexibility."},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"area-charts-streamgraphs","dir":"Articles","previous_headings":"Single-view plots","what":"Area charts & streamgraphs","title":"Example Gallery","text":"Area chart Stacked Area chart Normalized stacked aea chart Streamgraph","code":"vl_chart(data = 'https://vega.github.io/vega-editor/app/data/unemployment-across-industries.json', width = 300, height = 200) %>%   vl_mark_area() %>%   vl_encode_x(field = 'date', timeUnit = 'yearmonth') %>%   vl_axis_x(format = '%Y') %>%    vl_encode_y(field = 'count', aggregate = 'sum') vl_chart(data = 'https://vega.github.io/vega-editor/app/data/unemployment-across-industries.json', width = 300, height = 200) %>%   vl_mark_area() %>%   vl_encode_x(field = 'date', timeUnit = 'yearmonth') %>%   vl_axis_x(format = '%Y') %>%    vl_encode_y(field = 'count', aggregate = 'sum') %>%   vl_encode_color('series') %>%   vl_scale_color(scheme = 'category20b') vl_chart(data = 'https://vega.github.io/vega-editor/app/data/unemployment-across-industries.json', width = 300, height = 200) %>%   vl_mark_area() %>%   vl_encode_x(field = 'date', timeUnit = 'yearmonth') %>%   vl_axis_x(format = '%Y') %>%    vl_encode_y(field = 'count', aggregate = 'sum', stack = 'normalize', axis = NA) %>%   vl_encode_color('series') %>%   vl_scale_color(scheme = 'category20b') vl_chart(data = 'https://vega.github.io/vega-editor/app/data/unemployment-across-industries.json') %>%   vl_mark_area() %>%   vl_encode_x(field = 'date', timeUnit = 'yearmonth') %>%   vl_axis_x(domain = FALSE, format = '%Y', tickSize = 0) %>%    vl_encode_y(field = 'count', aggregate = 'sum', stack = 'center', axis = NULL) %>%   vl_encode_color(field = 'series') %>%   vl_scale_color(scheme = 'category20b') %>%   vl_encode_opacity(value = 0.2) %>%   vl_condition_opacity(param = 'industry', value = 1) %>%   vl_add_point_selection(name = 'industry', fields = list('series'), bind = 'legend')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"table-based-plots","dir":"Articles","previous_headings":"Single-view plots","what":"Table-based plots","title":"Example Gallery","text":"Heatmap Heatmap labels Time-series Heatmap (Lasagna Plot) Note: example good bit manual nested json still needs made get axis sub-element conditioning.","code":"vl_chart(title = \"Daily Max Temperatures (C) in Seattle, WA\") %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/seattle-weather.csv\") %>%   vl_mark_rect() %>%   vl_encode_x(field = 'date', type = 'ordinal', timeUnit = 'date',                title = 'Day') %>%   vl_axis_x(labelAngle = 0, format = '%e') %>%   vl_encode_y(field = 'date', type = 'ordinal', timeUnit = 'month', title = 'Month') %>%   vl_encode_color('temp_max', type = 'quantitative', aggregate = 'max') %>%   vl_legend_color(title = NA) color_layer <- vl_chart() %>%   vl_mark_rect() %>%   vl_encode_color('num_cars:Q', title = 'Count of Records') %>%   vl_legend_color(direction = 'horizontal')    text_layer <- vl_chart() %>%   vl_mark_text() %>%   vl_encode_text('num_cars:N') %>%   vl_encode_color(value = \"white\") %>%   vl_condition_color(test = 'datum[\"num_cars\"] < 40', value = 'black')      vl_layer(color_layer, text_layer) %>%    vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_aggregate(aggregate = list(list(op = 'count', as = 'num_cars')),                groupby= list('Origin','Cylinders')) %>%   vl_encode_y(field = \"Origin\", type = \"ordinal\") %>%   vl_encode_x(field = \"Cylinders\", type = \"ordinal\") %>%   vl_config_axis(grid = TRUE, tickBand = 'extent') vl_chart(width = 300, height = 100) %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/stocks.csv\") %>%   vl_filter('datum.symbol != \"GOOG\"') %>%   vl_mark_rect() %>%   vl_encode_x('date:O', timeUnit = 'yearmonthdate', title = 'Time') %>%   vl_axis_x(format = '%Y', labelAngle = 0, labelOverlap = FALSE,             labelColor = list(               condition = list(                  test = list(                   timeUnit = 'monthdate',                    field = 'value',                    equal = list(month = 1, date = 1)                   ),                 value = 'black'                 ),               value = NA               ),             tickColor = list(               condition = list(                  test = list(                   timeUnit = 'monthdate',                    field = 'value',                    equal = list(month = 1, date = 1)                   ),                 value = 'black'                 ),               value = NA               )             ) %>%   vl_encode_color('price:Q', aggregate = 'sum', title = 'Price') %>%   vl_encode_y('symbol:N', title = NA)"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"circular-plots","dir":"Articles","previous_headings":"Single-view plots","what":"Circular plots","title":"Example Gallery","text":"Pie chart Donut Chart Pie chart labels","code":"vl_chart(mtcars) %>%   vl_mark_arc() %>%   vl_encode_angle( aggregate = 'count') %>%   vl_encode_color('cyl:N') vl_chart(mtcars) %>%   vl_mark_arc(innerRadius = 50) %>%   vl_encode_angle( aggregate = 'count') %>%   vl_encode_color('cyl:N') pie_layer <- vl_chart() %>%    vl_mark_arc(outerRadius = 80)  %>%   vl_encode_color('cyl:N')  text_layer <- vl_chart() %>%    vl_mark_text(radius = 90) %>%   vl_encode_text('cyl:N')   vl_layer(pie_layer, text_layer) %>%   vl_add_data(mtcars) %>%   vl_encode_theta( aggregate = 'count', stack = TRUE)"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"advanced-calculations","dir":"Articles","previous_headings":"Single-view plots","what":"Advanced Calculations","title":"Example Gallery","text":"Rolling average Loess transform","code":"points <- vl_chart() %>%    vl_mark_point() %>%   vl_encode_y(field = 'temp_max',                title = 'Max Temperature')  line <- vl_chart() %>%    vl_mark_line(color = 'red', size = 3) %>%   vl_encode_y(field = 'rolling_mean',                title = 'Rolling Mean of Max Temperature')  vl_layer(points, line) %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/seattle-weather.csv\") %>%   vl_window(window = list(vl$Window(op = \"mean\", field = \"temp_max\", as = \"rolling_mean\")), frame = list(15,15)) %>%   vl_encode_x('date:T', title = 'Date') %>%   vl_encode_y(type = 'quantitative') %>%   vl_axis_y(title = 'Max Temperature and Rolling Mean') %>%   vl_add_properties(width = 400, height = 300) points <- vl_chart() %>%    vl_mark_point(filled = TRUE) %>%   vl_encode_y('IMDB_Rating:Q')   line <- vl_chart() %>%    vl_loess(loess = 'IMDB_Rating', on = 'Rotten_Tomatoes_Rating') %>%   vl_mark_line(color = 'firebrick') %>%   vl_encode_y('IMDB_Rating:Q')   vl_layer(points, line) %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/movies.json\") %>%   vl_encode_x('Rotten_Tomatoes_Rating:Q')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"composite-marks-boxplots-error-bars-and-error-bands","dir":"Articles","previous_headings":"Single-view plots","what":"Composite marks: Boxplots, error bars, and error bands","title":"Example Gallery","text":"Box plot Error bars confidence interval Error bars standard deviation Line chart confidence interval band","code":"vl_chart(data = 'https://vega.github.io/editor/data/penguins.json') %>%   vl_mark_boxplot() %>%   vl_encode_x('Species:N') %>%   vl_encode_y('Body Mass (g)', type = 'quantitative') %>%   vl_scale_y(zero = FALSE) %>%   vl_encode_color('Species:N', legend = NA) points <- vl_chart() %>%   vl_mark_point() %>%   vl_encode_x('yield:Q', aggregate = 'mean', title = 'Barley Yield') %>%    vl_scale_x(zero = FALSE) %>%   vl_encode_color(value = 'black')    ci <- vl_chart() %>%   vl_mark_errorbar(extent = 'ci') %>%   vl_encode_x('yield:Q', title = 'Barley Yield')   vl_layer(points, ci) %>%   vl_add_data(url = 'https://vega.github.io/vega-editor/app/data/barley.json') %>%   vl_encode_y('variety:O') points <- vl_chart() %>%   vl_mark_point() %>%   vl_encode_x('yield:Q', aggregate = 'mean', title = 'Barley Yield') %>%    vl_scale_x(zero = FALSE) %>%   vl_encode_color(value = 'black')    ci <- vl_chart() %>%   vl_mark_errorbar(extent = 'stdev') %>%   vl_encode_x('yield:Q', title = 'Barley Yield')   vl_layer(points, ci) %>%   vl_add_data(url = 'https://vega.github.io/vega-editor/app/data/barley.json') %>%   vl_encode_y('variety:O') line <- vl_chart() %>%   vl_mark_line() %>%   vl_encode_y('Miles_per_Gallon:Q', aggregate = 'mean')    ci <- vl_chart() %>%   vl_mark_errorband(extent = 'ci') %>%   vl_encode_y('Miles_per_Gallon:Q', title = 'Mean of Miles per Gallon (95% CIs)')  vl_layer(line, ci) %>%   vl_add_data(url = 'https://vega.github.io/vega-editor/app/data/cars.json') %>%   vl_encode_x('Year', timeUnit = 'year')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"maps-geographic-displays","dir":"Articles","previous_headings":"Single-view plots","what":"Maps & Geographic Displays","title":"Example Gallery","text":"Chloropleth Points overlayed U.S. map","code":"vl_chart(width = 500, height = 300) %>%   vl_add_data(     url = 'https://vega.github.io/vega-editor/app/data/us-10m.json',     format = list(type = 'topojson', feature = 'counties')   ) %>%   vl_lookup(     lookup = 'id',      from = list(       data = list(url = 'https://vega.github.io/vega-editor/app/data/unemployment.tsv'),       key = 'id',        fields = list('rate')     )   ) %>%   vl_add_properties(projection = list(type = 'albersUsa')) %>%   vl_mark_geoshape() %>%   vl_encode_color('rate:Q') map <- vl_chart(projection = list(type = 'albersUsa')) %>%   vl_add_data(     url = 'https://vega.github.io/vega-editor/app/data/us-10m.json',     format = list(type = 'topojson', feature = 'states')   ) %>%   vl_mark_geoshape(fill = 'lightgray', stroke = 'white')   points <- vl_chart(projection = list(type = 'albersUsa')) %>%   vl_add_data(     url = 'https://vega.github.io/vega-editor/app/data/airports.csv',   ) %>%   vl_mark_circle() %>%   vl_encode_longitude('longitude:Q') %>%   vl_encode_latitude('latitude:Q') %>%   vl_encode_size(value = 10) %>%   vl_encode_color(value = 'steelblue')  vl_layer(map,points) %>%   vl_add_properties(width = 500, height = 300)"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"interactive","dir":"Articles","previous_headings":"Single-view plots","what":"Interactive","title":"Example Gallery","text":"Brush-linked color Drop-controlled parameter Selection sliders Selection dropdown","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_add_interval_selection(name = \"brush\", value = list(x = c(55,160), y = c(13,37))) %>%   vl_mark_point() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_encode_y(field = \"Miles_per_Gallon\", type = \"quantitative\") %>%   vl_encode_color(value = \"grey\") %>%   vl_condition_color(param = \"brush\", field = \"Cylinders\", type = \"ordinal\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/movies.json\") %>%   vl_encode_x(field = \"IMDB_Rating\", type = \"quantitative\") %>%   vl_encode_y(type = \"quantitative\", aggregate = \"count\") %>%   vl_bin_x(maxbins=10) %>%   vl_mark_bar(cornerRadius = list(expr = \"cornerRadius\")) %>%   vl_add_parameter(\"cornerRadius\", value = 0) %>%    vl_bind_range_input(\"cornerRadius\", min = 0, max = 10, step = 1) vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_calculate(calculate = \"year(datum.Year)\", as = \"Year\") %>%   vl_add_point_selection(\"CylYr\",  fields = c(\"Cylinders\",\"Year\")) %>%   vl_bind_range_input(\"CylYr\", \"Cylinders\", min = 3, max = 8, step = 1) %>%   vl_bind_range_input(\"CylYr\", \"Year\", min = 1969, max = 1981, step = 1) %>%   vl_mark_circle() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_encode_y(field = \"Miles_per_Gallon\", type = \"quantitative\") %>%   vl_encode_color(value = \"grey\") %>%   vl_condition_color(param = \"CylYr\", field = \"Origin\", type = \"nominal\") %>%   vl_encode_size(value = 50) %>%   vl_condition_size(param = \"CylYr\", value = 100) vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_add_point_selection(\"org\",fields = list(\"Origin\")) %>%   vl_bind_select_input(\"org\", options = list(NA,\"Europe\",\"Japan\",\"USA\")) %>%   vl_mark_point() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_encode_y(field = \"Miles_per_Gallon\", type = \"quantitative\") %>%   vl_encode_color(value = \"grey\") %>%   vl_condition_color(param = \"org\", field = \"Cylinders\", type = \"ordinal\")"},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"faceting-small-multiple","dir":"Articles","previous_headings":"Multi-view display","what":"Faceting / Small Multiple","title":"Example Gallery","text":"Row Facet Column Facet Facet Wrap Facetted layered plot","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_bar() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_bin_x(maxbins = 15) %>%   vl_encode_y(aggregate = \"count\", type = \"quantitative\") %>%   vl_encode_row(field = \"Origin\", type = \"nominal\") vl_chart() %>%   vl_add_data(url = 'https://vega.github.io/vega-editor/app/data/barley.json') %>%   vl_mark_bar() %>%   vl_encode_y('variety:N') %>%   vl_encode_x('yield:Q', aggregate = \"sum\") %>%   vl_encode_color('site:N') %>%   vl_encode_column(\"year:N\") vl_chart() %>%   vl_add_data(url = 'https://vega.github.io/vega-editor/app/data/barley.json') %>%   vl_mark_point() %>%   vl_encode_y('variety:N', sort = '-x') %>%   vl_encode_x('yield:Q', aggregate = \"median\") %>%   vl_scale_x(zero = FALSE) %>%   vl_encode_color('year:N') %>%   vl_encode_facet(\"site:O\", columns = 2) %>%   vl_sort_facet_by_field(op = 'median', field = 'yield') heatmap <- vl_chart() %>%   vl_encode_color(aggregate = \"count\", type = \"Q\") %>%   vl_scale_color(scheme = \"darkred\") %>%   vl_encode_x(field = \"Cylinders:O\") %>%   vl_scale_x(paddingInner = 0) %>%   vl_encode_y(field = \"Year:O\") %>%   vl_scale_x(paddingInner = 0) %>%   vl_mark_rect()  text <- vl_chart() %>%   vl_encode_color(value = \"white\") %>%   vl_encode_x(field = \"Cylinders:O\") %>%   vl_encode_y(field = \"Year:O\") %>%   vl_encode_text(aggregate = \"count\", type = \"Q\") %>%   vl_mark_text(baseline = \"middle\")  vl_layer(heatmap, text) %>%   vl_add_data_url(\"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_facet_column(field = \"Origin\", type = \"nominal\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"repeat-and-concatenation","dir":"Articles","previous_headings":"Multi-view display","what":"Repeat and concatenation","title":"Example Gallery","text":"Horizontal concatenation Repeat wrap Repeat color","code":"bar_chart <- vl_chart() %>%   vl_mark_bar() %>%   vl_encode_x(field = \"date:O\", timeUnit = \"month\") %>%   vl_encode_y(field = \"precipitation:Q\", aggregate = \"mean\")  point_chart <- vl_chart() %>%   vl_mark_point() %>%   vl_encode_x(field = \"temp_min:Q\", bin = TRUE) %>%   vl_encode_y(field = \"temp_max:Q\", bin = TRUE) %>%   vl_encode_size(aggregate = \"count\", type = \"quantitative\")    vl_hconcat(bar_chart, point_chart) %>%    vl_add_data(url = \"https://vega.github.io/vega-lite/data/weather.csv\") %>%   vl_filter(\"datum.location === 'Seattle'\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_bar() %>%   vl_encode_x(field = list(`repeat` = \"repeat\"), type = \"quantitative\", bin = TRUE) %>%   vl_encode_y(aggregate = \"count\", type = \"quantitative\") %>%   vl_encode_color(field = \"Origin\", type = \"nominal\") %>%   vl_repeat_wrap(\"Horsepower\", \"Miles_per_Gallon\", \"Acceleration\", \"Displacement\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_point() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_encode_y(field = \"Miles_per_Gallon\", type = \"quantitative\") %>%   vl_encode_color(field = list(\"repeat\" = \"column\"), type = \"nominal\") %>%   vl_repeat_col(\"Origin\", \"Cylinders\") %>%   vl_resolve_scale_color(\"independent\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/example_gallery.html","id":"interactive-multiple-view","dir":"Articles","previous_headings":"Multi-view display","what":"Interactive multiple-view","title":"Example Gallery","text":"Overview detail Cross-filter scatterplot matrix Brush bottom plot zoom top plot. Select area sub-plot color points plots.","code":"detail <- vl_chart(width = 480) %>%   vl_mark_area() %>%   vl_encode_x('date:T') %>%   vl_scale_x(domain = list(param = 'brush')) %>%   vl_axis_x(title = '') %>%   vl_encode_y('price:Q')  overview <- vl_chart(width = 480, height = 60) %>%   vl_mark_area() %>%   vl_add_interval_selection(name = 'brush', encodings = list('x')) %>%   vl_encode_x('date:T') %>%   vl_encode_y('price:Q') %>%   vl_axis_y(tickCount = 3, grid = FALSE)   vl_vconcat(detail, overview) %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/sp500.csv\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_point() %>%   vl_encode_x(field = list(\"repeat\" = \"column\"), type = \"quantitative\") %>%   vl_encode_y(field = list(\"repeat\" = \"row\"), type = \"quantitative\") %>%   vl_add_interval_selection(\"brush\", resolve = \"global\") %>%   vl_encode_color(value = \"grey\") %>%   vl_condition_color(param = \"brush\", field = \"Origin\", type = \"nominal\") %>%   vl_repeat_row(\"Horsepower\", \"Acceleration\", \"Miles_per_Gallon\") %>%   vl_repeat_col(\"Miles_per_Gallon\", \"Acceleration\", \"Horsepower\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"the-basics-data-mark-encoding","dir":"Articles","previous_headings":"","what":"The basics: data + mark + encoding","title":"How to make a plot using vlbuildr","text":"plots require data, mark encodings. intialize chart use Without components empty! output can piped commands add components. components can also added directly via function call.","code":"library(vlbuildr) vl_chart()"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"data","dir":"Articles","previous_headings":"The basics: data + mark + encoding","what":"Data","title":"How to make a plot using vlbuildr","text":"Still empty! Need set mark encoding also passed data directly vl_chart: Data can also passed url using vl_add_data_url url argument vl_add_data. vl_chart also able recognize argument data url treat .","code":"vl_chart() %>%   vl_add_data(values = mtcars) vl_chart(mtcars)"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"mark","dir":"Articles","previous_headings":"The basics: data + mark + encoding","what":"Mark","title":"How to make a plot using vlbuildr","text":"‘mark’ type shape plotted, e.g. ‘point’, ‘line’, ‘bar’. Without encodings, points show top ! can passed without arguments besides input spec (often piped ), also can take arguments change properties.","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point(color = 'red')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"encoding","dir":"Articles","previous_headings":"The basics: data + mark + encoding","what":"Encoding","title":"How to make a plot using vlbuildr","text":"encoding tells plot use along x y axis, well use color, tooltips, links, aspects plot might controlled column data. Encodings can also take constant values (generally value argument). Functions add encoding format vl_encode_* * name encoding, e.g. x: Multiple encodings can added; matter order added.","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode_x(field = 'wt', type = 'quantitative') vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode_x(field = 'wt', type = 'quantitative') %>%   vl_encode_y(field = 'mpg', type = 'quantitative')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"type-shorthands","dir":"Articles","previous_headings":"The basics: data + mark + encoding > Encoding","what":"Type shorthands","title":"How to make a plot using vlbuildr","text":"shorthand can used specify type. field name can joined using colon single letter abbreviation. abbreviations :","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode_x('wt:Q') %>%   vl_encode_y('mpg:Q')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"type-inference","dir":"Articles","previous_headings":"The basics: data + mark + encoding > Encoding","what":"Type inference","title":"How to make a plot using vlbuildr","text":"data added spec already given directly R data.frame (rather URL transformation), type can also inferred need given.","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"vl_encode","dir":"Articles","previous_headings":"The basics: data + mark + encoding > Encoding","what":"vl_encode","title":"How to make a plot using vlbuildr","text":"encoding can passed separate function, single call vl_encode can used: providing additional arguments x y encoding form can succinct, specifying encoding separately can easier passing lots arguments. help constructing full encoding object vl_encode one can use functions within vl list functions.","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode(x = 'wt', y = \"mpg\") vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode(     x = vl$X(field = 'wt', title = \"weight\"),       y = \"mpg\"     )"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"view-composition","dir":"Articles","previous_headings":"","what":"View Composition","title":"How to make a plot using vlbuildr","text":"Sub-plots ‘views’ can combined number ways. Layering assembles views plot. Facetting splits views based column data encodings per view. Repeating splits views based field use one two encodings. Concatenation combines arbitrary views together.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"layering","dir":"Articles","previous_headings":"View Composition","what":"Layering","title":"How to make a plot using vlbuildr","text":"Layering assembles views plot. single view can one ‘mark’, layering plot can made multiple marks. marks can different encodings encodings.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"vl_layer","dir":"Articles","previous_headings":"View Composition > Layering","what":"vl_layer","title":"How to make a plot using vlbuildr","text":"Two charts can layered via vl_layer. Additional modifications can made resulting layered chart, although limitations kinds modifications can made layered charts versus single view charts. case data added afterwards. can help make sure data isn’t duplicated, helps keep size spec smaller. Note layers can different data, , case data get added chart first layering.","code":"points_plot <- vl_chart() %>%   vl_encode_x(field = \"IMDB_Rating\", type = \"quantitative\") %>%   vl_encode_y(type = \"quantitative\", aggregate = \"count\") %>%   vl_bin_x(maxbins=10) %>%   vl_mark_bar()    avg_plot <- vl_chart() %>%   vl_encode_x(field = \"IMDB_Rating\", type = \"quantitative\", aggregate = \"mean\") %>%   vl_encode_color(value = \"red\") %>%   vl_encode_size(value = 5) %>%   vl_mark_rule()  vl_layer(points_plot, avg_plot) %>%   vl_add_data_url(\"https://vega.github.io/vega-editor/app/data/movies.json\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"the-operator","dir":"Articles","previous_headings":"View Composition > Layering","what":"The + operator","title":"How to make a plot using vlbuildr","text":"Layering can also performed using + operator.","code":"(points_plot + avg_plot) %>%   vl_add_data_url(\"https://vega.github.io/vega-editor/app/data/movies.json\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"facet","dir":"Articles","previous_headings":"View Composition","what":"Facet","title":"How to make a plot using vlbuildr","text":"Facetting splits data different subplots based field data. can done across rows /columns. Facets can get added two ways: via vl_facet_ functions encodings, eg vl_encode_row. terms option use, slightly different options terms parameters can given, often interchangeable.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"facets-as-encoding","dir":"Articles","previous_headings":"View Composition > Facet","what":"Facets as encoding","title":"How to make a plot using vlbuildr","text":"example splits data rows based country origin.","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_bar() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_bin_x(maxbins = 15) %>%   vl_encode_y(aggregate = \"count\", type = \"quantitative\") %>%   vl_encode_row(field = \"Origin\", type = \"nominal\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"adding-facets-with-facet-functions","dir":"Articles","previous_headings":"View Composition","what":"Adding facets with facet functions","title":"How to make a plot using vlbuildr","text":"following , except via vl_facet_row function.","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_bar() %>%   vl_encode_x(field = \"Horsepower\", type = \"quantitative\") %>%   vl_bin_x(maxbins = 15) %>%   vl_encode_y(aggregate = \"count\", type = \"quantitative\") %>%   vl_facet_row(field = \"Origin\", type = \"nominal\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"repeating","dir":"Articles","previous_headings":"View Composition","what":"Repeating","title":"How to make a plot using vlbuildr","text":"Adding ‘repeat’ similar ways facetting, except data gets shown subplot. Instead, changes subplots field gets used encoding. use ‘repeat’ one needs call vl_repeat_* function (* wrap, row, column) field names use, specify field encoding repeat:* matching value *.example: Alternatively longer specification field can used:","code":"vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_bar() %>%   vl_encode_x(field = \"repeat:wrap\", type = \"quantitative\", bin = TRUE) %>%   vl_encode_y(aggregate = \"count\", type = \"quantitative\") %>%   vl_encode_color(field = \"Origin\", type = \"nominal\") %>%   vl_repeat_wrap(\"Horsepower\", \"Miles_per_Gallon\", \"Acceleration\", \"Displacement\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/cars.json\") %>%   vl_mark_bar() %>%   vl_encode_x(field = list(`repeat` = \"repeat\"), type = \"quantitative\", bin = TRUE) %>%   vl_encode_y(aggregate = \"count\", type = \"quantitative\") %>%   vl_encode_color(field = \"Origin\", type = \"nominal\") %>%   vl_repeat_wrap(\"Horsepower\", \"Miles_per_Gallon\", \"Acceleration\", \"Displacement\")"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"concatenation","dir":"Articles","previous_headings":"View Composition","what":"Concatenation","title":"How to make a plot using vlbuildr","text":"Different charts can concatenated together via vl_concat, vl_hconcat, vl_vconcat concatenate wrapping fashion (number columns set columns arguments), horizontally, vertically. Data can set individual view (can different) can set concatenated version. Concatenation can also done via | & operators, horizontal vertical concatenation respectively.","code":"bar_chart <- vl_chart() %>%   vl_mark_bar() %>%   vl_encode_x(field = \"date:O\", timeUnit = \"month\") %>%   vl_encode_y(field = \"precipitation:Q\", aggregate = \"mean\")  point_chart <- vl_chart() %>%   vl_mark_point() %>%   vl_encode_x(field = \"temp_min:Q\", bin = TRUE) %>%   vl_encode_y(field = \"temp_max:Q\", bin = TRUE) %>%   vl_encode_size(aggregate = \"count\", type = \"quantitative\")    vl_hconcat(bar_chart, point_chart) %>%    vl_add_data(url = \"https://vega.github.io/vega-lite/data/weather.csv\") %>%   vl_filter(\"datum.location === 'Seattle'\") (bar_chart | point_chart) %>%    vl_add_data(url = \"https://vega.github.io/vega-lite/data/weather.csv\") %>%   vl_filter(\"datum.location === 'Seattle'\") (bar_chart & point_chart) %>%    vl_add_data(url = \"https://vega.github.io/vega-lite/data/weather.csv\") %>%   vl_filter(\"datum.location === 'Seattle'\")"},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"tooltips","dir":"Articles","previous_headings":"Interactivity","what":"Tooltips","title":"How to make a plot using vlbuildr","text":"three ways get tooltips:","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"all-the-encodings","dir":"Articles","previous_headings":"Interactivity > Tooltips","what":"All the encodings","title":"How to make a plot using vlbuildr","text":"get tooltip shows values fields set encoding, use tooltip = TRUE call add mark plot.","code":"vl_chart(mtcars) %>%   vl_mark_point(tooltip = TRUE) %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"all-data-associated-with-point","dir":"Articles","previous_headings":"Interactivity > Tooltips","what":"All data associated with point","title":"How to make a plot using vlbuildr","text":"get data show (just used encoding) pass list(content = \"data\") tooltip argument. vlbuildr also shortcut, whereby pass “data” “encoding” tooltip argument, transform list format spec. following thing:","code":"vl_chart(mtcars) %>%   vl_mark_point(tooltip = list(content = \"data\")) %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg') vl_chart(mtcars) %>%   vl_mark_point(tooltip = \"data\") %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"to-some-constant-value","dir":"Articles","previous_headings":"Interactivity > Tooltips","what":"To some constant value","title":"How to make a plot using vlbuildr","text":"can also set tooltip constant value – e.g. get point say “Hi!”:","code":"vl_chart(mtcars) %>%   vl_mark_point(tooltip = \"Hi!\") %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"via-an-encoding-channel","dir":"Articles","previous_headings":"Interactivity > Tooltips","what":"Via an encoding channel","title":"How to make a plot using vlbuildr","text":"can also use column data passing tooltip encoding. want use row.names data.frame can use '_row' name: want pass multiple entries toolip, use vl_encode_tooltip_array instead.","code":"vl_chart(mtcars) %>%   vl_mark_point() %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg') %>%    vl_encode_tooltip('_row') vl_chart(mtcars) %>%   vl_mark_point() %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg') %>%    vl_encode_tooltip_array(c('_row','wt','mpg'))"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"parameters","dir":"Articles","previous_headings":"Interactivity","what":"Parameters","title":"How to make a plot using vlbuildr","text":"Parameters enable interactive manipulation charts. two main types parameters – variable parameters selection parameters. Variable parameters added using vl_add_parameter. selection parameters, see next section doc. parameter can simple value expression can used parts spec, can something mapped user input via binding. example adding parameter fixed: radius bar corners set fixed variable 15. bind parameter user input, use vl_bind_* family functions, example * vl_bind_range_input binding slider * vl_bind_checkbox_input binding checkbox selections * vl_bind_radio_input binding radio selections * vl_bind_select_input binding dropdown selections * vl_bind_input binding hmtl input * vl_bind_direct_input binding externally defined element example adding parameter controlled range input:","code":"vl_chart(mtcars) %>%   vl_add_parameter(\"radius\", value = 10) %>%    vl_mark_bar(cornerRadius = list(expr = 'radius')) %>%   vl_encode_x('wt', bin = TRUE) %>%   vl_encode_y( aggregate = 'count') vl_chart(mtcars) %>%   vl_add_parameter(\"radius\", value = 10) %>%    vl_bind_range_input(\"radius\", min = 0, max = 15, step = 1) %>%    vl_mark_bar(cornerRadius = list(expr = 'radius')) %>%   vl_encode_x('wt', bin = TRUE) %>%   vl_encode_y( aggregate = 'count')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"selections","dir":"Articles","previous_headings":"Interactivity","what":"Selections","title":"How to make a plot using vlbuildr","text":"complex parameters “selections” – map data queries parameter. two types selections – interval point, can added using vl_add_interval_selection vl_add_point_selection, respectively. vl_condition_* family functions can used condition encoding selection.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"interval-selections","dir":"Articles","previous_headings":"Interactivity > Selections","what":"Interval Selections","title":"How to make a plot using vlbuildr","text":"Interval selections enable selecting interval chart. shows example adding interval selection conditioning color selection. select area plot, area remain colored hp field, remainder color ‘gray’.","code":"vl_chart(mtcars) %>%   vl_mark_point() %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg') %>%    vl_add_interval_selection(name = 'brush') %>%   vl_encode_color(value = 'gray') %>%    vl_condition_color(param = 'brush', field = 'cyl')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"binding-interval-to-scales","dir":"Articles","previous_headings":"Interactivity > Selections > Interval Selections","what":"Binding interval to scales","title":"How to make a plot using vlbuildr","text":"Interval selections can controlled via scales, using bind = 'scales'. enables using view pan zoom data. example – drag plot panel shift area shown.","code":"vl_chart(mtcars) %>%   vl_mark_point() %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg') %>%    vl_add_interval_selection(name = 'grid', bind = 'scales')"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"point-selections","dir":"Articles","previous_headings":"Interactivity > Selections","what":"Point Selections","title":"How to make a plot using vlbuildr","text":"point selection enables directly interacting points (lines, areas) chart. example, clicking point cause change color red. selections can customized wheter respond hover instead click, whether select nearest point, multiple items can clicked, selections can cleared. See (Vega-Lite documentation)[https://vega.github.io/vega-lite/docs/selection.html] possible selections!","code":"vl_chart(mtcars) %>%   vl_mark_circle(size = 50) %>%   vl_encode_x('wt') %>%   vl_encode_y('mpg') %>%    vl_add_point_selection(name = 'pt', value = list()) %>%   vl_encode_color(value = 'gray') %>%    vl_condition_color(param = 'pt', value = 'red', empty = FALSE)"},{"path":"https://vegawidget.github.io/vlbuildr/articles/introduction.html","id":"binding-legend-to-selection","dir":"Articles","previous_headings":"Interactivity > Selections > Point Selections","what":"Binding legend to selection","title":"How to make a plot using vlbuildr","text":"point selection can controlled via legend, using bind = 'legend'. example:","code":"vl_chart(data = 'https://vega.github.io/vega-editor/app/data/unemployment-across-industries.json') %>%   vl_mark_area() %>%   vl_encode_x(field = 'date', timeUnit = 'yearmonth') %>%   vl_axis_x(domain = FALSE, format = '%Y', tickSize = 0) %>%    vl_encode_y(field = 'count', aggregate = 'sum', stack = 'center', axis = NULL) %>%   vl_encode_color(field = 'series') %>%   vl_scale_color(scheme = 'category20b') %>%   vl_encode_opacity(value = 0.2) %>%   vl_condition_opacity(param = 'industry', value = 1) %>%   vl_add_point_selection(name = 'industry', fields = list('series'), bind = 'legend')"},{"path":"https://vegawidget.github.io/vlbuildr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alicia Schep. Author, maintainer. Vega-Lite Developers. Author.            Vega-Lite schema used directly populate much documentation package.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schep , Vega-Lite Developers (2021). vlbuildr: Build Vega-Lite Specs R. R package version 0.4.0.9000, https://vegawidget.github.io/vlbuildr/index.html.","code":"@Manual{,   title = {vlbuildr: Build Vega-Lite Specs in R},   author = {Alicia Schep and {Vega-Lite Developers}},   year = {2021},   note = {R package version 0.4.0.9000},   url = {https://vegawidget.github.io/vlbuildr/index.html}, }"},{"path":"https://vegawidget.github.io/vlbuildr/ideas.html","id":null,"dir":"","previous_headings":"","what":"Ideas","title":"Ideas","text":"priority args (first ones), pull ones required! swap vl_add_<>config vl_config<> formatting (keep old format deprecated) specialized data functions vl_add_data_url, vl_add_data_values Sugar vl_chart data – single value passed right thing… “repeat:column” sugar encoding single field (e.g. filter) allow pass unnamed .object vl$ make object functions Roxygen consolidation – use eval tooltip sugar – able take array Add examples add_parameter Add documentation! Code cleanup – remove use $","code":""},{"path":"https://vegawidget.github.io/vlbuildr/index.html","id":"vlbuildr","dir":"","previous_headings":"","what":"Build Vega-Lite Specs in R","title":"Build Vega-Lite Specs in R","text":"goal vlbuildr provide R api building vega-lite specs. guide getting started using vlbuildr, check getting started vignette. background context package can check slides rstudio::conf talk January 2020.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/index.html","id":"current-status","dir":"","previous_headings":"","what":"Current status","title":"Build Vega-Lite Specs in R","text":"package still experimental, much public facing API built (although still subject changes). However, internals package might change substantially provide greater robustness, make harder make invalid specs, /provide better information making invalid spec. documentation also still work--progress, getting started vignette. parameter documentation functions fairly complete, however, relies descriptions pulled directly Vega-Lite schema. See also example gallery examples make different types plots.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/index.html","id":"inspiration-and-related-work","dir":"","previous_headings":"","what":"Inspiration and related work","title":"Build Vega-Lite Specs in R","text":"API package heavily inspired vegalite R package, rebuilt scratch (1) build API semi-automatically based Vega-lite schema (approach inspired Altair vega-lite-api) (2) take advantage htmlwidget infrastucture vega specs provided vegawidget package.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/index.html","id":"building","dir":"","previous_headings":"","what":"Building","title":"Build Vega-Lite Specs in R","text":"Much public API auto-generated via build.R script build directory. script makes uses another package, vlmetabuildr located within build directory. design see design vignette.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Build Vega-Lite Specs in R","text":"examples showing current capabilities; see examples vignette examples, including interactive ones.","code":"library(vlbuildr) vl_chart() %>%    vl_add_data(values = mtcars) %>%    vl_mark_point() %>%    vl_encode_x(\"wt\") %>%    vl_encode_y(\"mpg\") vl_chart() %>%   vl_add_data(url = \"https://vega.github.io/vega-editor/app/data/population.json\") %>%   vl_calculate(calculate = \"datum.sex == 2 ? 'Female' : 'Male'\",                 as = \"gender\") %>%   vl_filter(\"datum.year == 2000\") %>%   vl_encode(x = \"age:O\", y = \"people:Q\", color = \"gender:N\") %>%   vl_stack_y(\"normalize\") %>%   vl_aggregate_y(\"sum\") %>%   vl_axis_y(title = \"population\") %>%   vl_mark_bar()"},{"path":"https://vegawidget.github.io/vlbuildr/reference/aggregate_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add aggregate transform to encoding — aggregate_encoding","title":"Add aggregate transform to encoding — aggregate_encoding","text":"Add aggregate parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/aggregate_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add aggregate transform to encoding — aggregate_encoding","text":"","code":"vl_aggregate_angle(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_color(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_description(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_detail(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_fill(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_fillOpacity(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_href(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_key(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_latitude(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_latitude2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_longitude(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_longitude2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_opacity(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_order(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_radius(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_radius2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_shape(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_size(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_stroke(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_strokeDash(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_strokeOpacity(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_strokeWidth(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_text(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_theta(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_theta2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_tooltip(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_url(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_x(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_x2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_xError(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_xError2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_y(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_y2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_yError(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_yError2(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_facet(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_row(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )  vl_aggregate_column(   spec,   aggregate = c(\"argmax\", \"argmin\", \"average\", \"count\", \"distinct\", \"max\", \"mean\",     \"median\", \"min\", \"missing\", \"product\", \"q1\", \"q3\", \"ci0\", \"ci1\", \"stderr\", \"stdev\",     \"stdevp\", \"sum\", \"valid\", \"values\", \"variance\", \"variancep\", NA) )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/aggregate_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add aggregate transform to encoding — aggregate_encoding","text":"spec input vega-lite spec aggregate One 'argmax', 'argmin', 'average', 'count', 'distinct', 'max', 'mean', 'median', 'min', 'missing', 'product', 'q1', 'q3', 'ci0', 'ci1', 'stderr', 'stdev', 'stdevp', 'sum', 'valid', 'values', 'variance', 'variancep', NA","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/aggregate_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add aggregate transform to encoding — aggregate_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/as_vegaspec.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to vegaspec — as_vegaspec","title":"Coerce to vegaspec — as_vegaspec","text":"See vegawidget::as_vegaspec details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/axis_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add axis to encoding — axis_encoding","title":"Add axis to encoding — axis_encoding","text":"Add axis parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/axis_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add axis to encoding — axis_encoding","text":"","code":"vl_axis_x(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_axis_y(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_remove_axis_x(spec)  vl_remove_axis_y(spec)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/axis_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add axis to encoding — axis_encoding","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: Axis","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/axis_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add axis to encoding — axis_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/bin_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bin to encoding — bin_encoding","title":"Add bin to encoding — bin_encoding","text":"Add bin parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/bin_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bin to encoding — bin_encoding","text":"","code":"vl_bin_angle(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_color(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_description(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_detail(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_fill(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_fillOpacity(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_href(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_key(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_latitude(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_latitude2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_longitude(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_longitude2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_opacity(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_order(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_radius(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_radius2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_shape(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_size(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_stroke(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_strokeDash(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_strokeOpacity(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_strokeWidth(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_text(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_theta(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_theta2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_tooltip(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_url(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_x(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_x2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_xError(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_xError2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_y(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_y2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_yError(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_yError2(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_facet(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_row(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )  vl_bin_column(   spec,   anchor = NULL,   base = NULL,   binned = NULL,   divide = NULL,   extent = NULL,   maxbins = NULL,   minstep = NULL,   nice = NULL,   step = NULL,   steps = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/bin_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add bin to encoding — bin_encoding","text":"spec input vega-lite spec anchor value binned domain anchor bins, shifting bin boundaries necessary ensure boundary aligns anchor value. Default value: minimum bin extent value base number base use automatic bin determination (default base 10). Default value: 10 binned set true, Vega-Lite treats input data already binned. divide Scale factors indicating allowable subdivisions. default value [5, 2], indicates base 10 numbers (default base), method may consider dividing bin sizes 5 /2. example, initial step size 10, method can check bin sizes 2 (= 10/5), 5 (= 10/2), 1 (= 10/(5*2)) might also satisfy given constraints. Default value: [5, 2] extent two-element ([min, max]) array indicating range desired bin values. maxbins Maximum number bins. Default value: 6 row, column shape channels; 10 channels minstep minimum allowable step size (particularly useful integer values). nice true, attempts make bin boundaries use human-friendly boundaries, multiples ten. Default value: true step exact step size use bins. Note: provided, options maxbins ignored. steps array allowable step sizes choose . .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BinParams","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/bin_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add bin to encoding — bin_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/concat.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenation functions — concat","title":"Concatenation functions — concat","text":"Concatenation functions","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/concat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenation functions — concat","text":"","code":"vl_hconcat(...)  vl_vconcat(...)  vl_concat(..., columns = 2)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/concat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenation functions — concat","text":"... specs columns Number columns use","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/concat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenation functions — concat","text":"composite spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/condition_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add conditioning to an encoding — condition_encoding","title":"Add conditioning to an encoding — condition_encoding","text":"Add condition parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/condition_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add conditioning to an encoding — condition_encoding","text":"","code":"vl_condition_angle(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_color(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_description(   spec,   param = NULL,   test = NULL,   value = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_fill(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_fillOpacity(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_href(   spec,   param = NULL,   test = NULL,   value = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_opacity(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_order(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   .object = NULL )  vl_condition_shape(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_size(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_stroke(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_strokeDash(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_strokeOpacity(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_strokeWidth(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_text(   spec,   value = NULL,   param = NULL,   test = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   format = NULL,   formatType = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   .object = NULL )  vl_condition_tooltip(   spec,   param = NULL,   test = NULL,   value = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )  vl_condition_url(   spec,   param = NULL,   test = NULL,   value = NULL,   empty = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   field = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   type = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/condition_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add conditioning to an encoding — condition_encoding","text":"spec input vega-lite spec value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). param Filter using parameter name. test Predicate triggering condition empty selection parameters, predicate empty selections returns true default. Override behavior, setting property empty: false. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. datum ? .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ConditionalPredicate<ValueDef<(number|ExprRef)>>, ConditionalParameter<ValueDef<(number|ExprRef)>> array ConditionalValueDef<(number|ExprRef)> format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/condition_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add conditioning to an encoding — condition_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/image.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or write image — image","title":"Create or write image — image","text":"See vegawidget::image details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/impute_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add impute to encoding — impute_encoding","title":"Add impute to encoding — impute_encoding","text":"Add impute parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/impute_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add impute to encoding — impute_encoding","text":"","code":"vl_impute_x(   spec,   frame = NULL,   keyvals = NULL,   method = NULL,   value = NULL,   .object = NULL )  vl_impute_y(   spec,   frame = NULL,   keyvals = NULL,   method = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/impute_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add impute to encoding — impute_encoding","text":"spec input vega-lite spec frame frame specification two-element array used control window specified method applied. array entries either number indicating offset current data object, null indicate unbounded rows preceding following current data object. example, value [-5, 5] indicates window include five objects preceding five objects following current object. Default value:: [null, null] indicating window includes objects. keyvals Defines key values considered imputation. array key values object defining number sequence. provided, used addition key values observed within input data. provided, values derived unique values key field. impute encoding, key field x-field y-field imputed, vice versa. impute grouping, property must specified. method imputation method use field value imputed data objects. One \"value\", \"mean\", \"median\", \"max\" \"min\". Default value: \"value\" value field value use imputation method \"value\". .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ImputeParams","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/impute_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add impute to encoding — impute_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/knit_print.vegaspec.html","id":null,"dir":"Reference","previous_headings":"","what":"Knit-print method — knit_print.vegaspec","title":"Knit-print method — knit_print.vegaspec","text":"See vegawidget::knit_print.vegaspec details, particularly additional packages may installed.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Layering functions — layer","title":"Layering functions — layer","text":"Layering functions","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layering functions — layer","text":"","code":"vl_layer(...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layering functions — layer","text":"... specs","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layering functions — layer","text":"composite spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/legend_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add legend to encoding — legend_encoding","title":"Add legend to encoding — legend_encoding","text":"Add legend parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/legend_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add legend to encoding — legend_encoding","text":"","code":"vl_legend_angle(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_color(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_fill(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_fillOpacity(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_opacity(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_shape(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_size(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_stroke(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_strokeDash(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_strokeOpacity(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )  vl_legend_strokeWidth(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   fillColor = NULL,   format = NULL,   formatType = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   tickMinStep = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   type = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/legend_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add legend to encoding — legend_encoding","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing legend ARIA accessibility tree. Default value: true : ExprRef clipHeight height pixels clip symbol legend entries limit size. : ExprRef columnPadding horizontal padding pixels symbol legend entries. Default value: 10. : ExprRef columns number columns arrange symbol legend entries. value 0 lower indicates single row one column per entry. : ExprRef cornerRadius Corner radius full legend. : ExprRef description text description legend ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef direction direction legend, one \"vertical\" \"horizontal\". Default value: top-/bottom-oriented legends, \"horizontal\" left-/right-oriented legends, \"vertical\" top/bottom-left/right-oriented legends, \"horizontal\" gradient legends \"vertical\" symbol legends. fillColor Background fill color full legend. : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. gradientLength length pixels primary axis color gradient. value corresponds height vertical gradient width horizontal gradient. Default value: 200. : ExprRef gradientOpacity Opacity color gradient. : ExprRef gradientStrokeColor color gradient stroke, can hex color code regular color name. Default value: \"lightGray\". : ExprRef gradientStrokeWidth width gradient stroke, pixels. Default value: 0. : ExprRef gradientThickness thickness pixels color gradient. value corresponds width vertical gradient height horizontal gradient. Default value: 16. : ExprRef gridAlign alignment apply symbol legends rows columns. supported string values \"\", \"\" (default), none. information, see grid layout documentation. Default value: \"\". : ExprRef labelAlign alignment legend label, can left, center, right. : ExprRef labelBaseline position baseline legend label, can \"top\", \"middle\", \"bottom\", \"alphabetic\". Default value: \"middle\". : ExprRef labelColor color legend label, can hex color code regular color name. : ExprRef labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties legend's backing datum object. labelFont font legend label. : ExprRef labelFontSize font size legend label. Default value: 10. : ExprRef labelFontStyle font style legend label. : ExprRef labelFontWeight font weight legend label. : ExprRef labelLimit Maximum allowed pixel width legend tick labels. Default value: 160. : ExprRef labelOffset offset legend label. : ExprRef labelOpacity Opacity labels. : ExprRef labelOverlap strategy use resolving overlap labels gradient legends. false, overlap reduction attempted. set true (default) \"parity\", strategy removing every label used. set \"greedy\", linear scan labels performed, removing label overlaps last visible label (often works better log-scaled axes). Default value: true. : ExprRef labelPadding Padding pixels legend legend labels. : ExprRef labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef legendX Custom x-position legend orient \"none\". : ExprRef legendY Custom y-position legend orient \"none\". : ExprRef offset offset pixels displace legend data rectangle axes. Default value: 18. : ExprRef orient orientation legend, determines legend positioned within scene. One \"left\", \"right\", \"top\", \"bottom\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\", \"none\". Default value: \"right\" padding padding border content legend group. Default value: 0. : ExprRef rowPadding vertical padding pixels symbol legend entries. Default value: 2. : ExprRef strokeColor Border stroke color full legend. : ExprRef symbolDash array alternating [stroke, space] lengths dashed symbol strokes. : ExprRef symbolDashOffset pixel offset start drawing symbol stroke dash array. : ExprRef symbolFillColor color legend symbol, : ExprRef symbolLimit maximum number allowed entries symbol legend. Additional entries dropped. : ExprRef symbolOffset Horizontal pixel offset legend symbols. Default value: 0. : ExprRef symbolOpacity Opacity legend symbols. : ExprRef symbolSize size legend symbol, pixels. Default value: 100. : ExprRef symbolStrokeColor Stroke color legend symbols. : ExprRef symbolStrokeWidth width symbol's stroke. Default value: 1.5. : ExprRef symbolType symbol shape. One plotting shapes circle (default), square, cross, diamond, triangle-, triangle-, triangle-right, triangle-left, line symbol stroke, one centered directional shapes arrow, wedge, triangle. Alternatively, custom SVG path string can provided. correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions. Default value: \"circle\". : ExprRef tickCount desired number tick values quantitative legends. : ExprRef tickMinStep minimum desired step legend ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. Default value: undefined title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment legend titles. Default value: \"left\". : ExprRef titleAnchor Text anchor position placing legend titles. : ExprRef titleBaseline Vertical text baseline legend titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. Default value: \"top\". : ExprRef titleColor color legend title, can hex color code regular color name. : ExprRef titleFont font legend title. : ExprRef titleFontSize font size legend title. : ExprRef titleFontStyle font style legend title. : ExprRef titleFontWeight font weight legend title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width legend titles. Default value: 180. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity legend title. : ExprRef titleOrient Orientation legend title. : ExprRef titlePadding padding, pixels, title legend. Default value: 5. : ExprRef type type legend. Use \"symbol\" create discrete legend \"gradient\" continuous color gradient. Default value: \"gradient\" non-binned quantitative fields temporal fields; \"symbol\" otherwise. values Explicitly set visible legend values. zindex non-negative integer indicating z-index legend. zindex 0, legend drawn behind chart elements. put front, use zindex = 1. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: Legend","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/legend_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add legend to encoding — legend_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://vegawidget.github.io/vlbuildr/reference/renderVegawidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Render shiny-output for vegawidget — renderVegawidget","title":"Render shiny-output for vegawidget — renderVegawidget","text":"See vegawidget::renderVegawidget details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/resolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve axes, legends, or scales for composite charts — resolve","title":"Resolve axes, legends, or scales for composite charts — resolve","text":"faceting, layering, repeating, concatenating chart, one can choose whether axes, legends, scales shared independent using resolve specification","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/resolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve axes, legends, or scales for composite charts — resolve","text":"","code":"vl_resolve_axis_x(spec, how = c(\"independent\", \"shared\"))  vl_resolve_axis_y(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_angle(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_color(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_fill(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_fillOpacity(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_opacity(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_radius(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_shape(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_size(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_stroke(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_strokeDash(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_strokeOpacity(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_strokeWidth(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_theta(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_x(spec, how = c(\"independent\", \"shared\"))  vl_resolve_legend_y(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_angle(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_color(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_fill(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_fillOpacity(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_opacity(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_radius(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_shape(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_size(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_stroke(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_strokeDash(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_strokeOpacity(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_strokeWidth(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_theta(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_x(spec, how = c(\"independent\", \"shared\"))  vl_resolve_scale_y(spec, how = c(\"independent\", \"shared\"))"},{"path":"https://vegawidget.github.io/vlbuildr/reference/resolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve axes, legends, or scales for composite charts — resolve","text":"spec input vega-lite spec One 'independent', 'shared'","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/resolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve axes, legends, or scales for composite charts — resolve","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/scale_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scale to encoding — scale_encoding","title":"Add scale to encoding — scale_encoding","text":"Add scale parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/scale_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scale to encoding — scale_encoding","text":"","code":"vl_scale_angle(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_color(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_fill(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_fillOpacity(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_opacity(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_radius(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_shape(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_size(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_stroke(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_strokeDash(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_strokeOpacity(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_strokeWidth(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_theta(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_x(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )  vl_scale_y(   spec,   align = NULL,   base = NULL,   bins = NULL,   clamp = NULL,   constant = NULL,   domain = NULL,   domainMax = NULL,   domainMid = NULL,   domainMin = NULL,   exponent = NULL,   interpolate = NULL,   nice = NULL,   padding = NULL,   paddingInner = NULL,   paddingOuter = NULL,   range = NULL,   rangeMax = NULL,   rangeMin = NULL,   reverse = NULL,   round = NULL,   scheme = NULL,   type = NULL,   zero = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/scale_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scale to encoding — scale_encoding","text":"spec input vega-lite spec align alignment steps within scale range. value must lie range [0,1]. value 0.5 indicates steps centered within range. value 0 1 may used shift bands one side, say position adjacent axis. Default value: 0.5 base logarithm base log scale (default 10). bins Bin boundaries can provided scales either explicit array bin boundaries bin specification object. legal values : array literal bin boundary values. example, [0, 5, 10, 15, 20]. array must include starting ending boundaries. previous example uses five values indicate total four bin intervals: [0-5), [5-10), [10-15), [15-20]. Array literals may include signal references elements. bin specification object indicates bin step size, optionally start stop boundaries. array bin boundaries scale domain. provided, axes legends use bin boundaries inform choice tick marks text labels. [15-20]: R:15-20%5C [bin specification object]: R:bin%20specification%0Aobject clamp true, values exceed data domain clamped either minimum maximum range value Default value: derived scale config's clamp (true default). constant constant determining slope symlog function around zero. used symlog scales. Default value: 1 domain Customized domain values form constant values dynamic values driven parameter. Constant domain quantitative fields can take one following forms: two-element array minimum maximum values. create diverging scale, two-element array can combined domainMid property. array two entries, Piecewise quantitative scales. string value \"unaggregated\", input field aggregated, indicate domain include raw data values prior aggregation. Constant domain temporal fields can two-element array minimum maximum values, form either timestamps DateTime definition objects. Constant domain ordinal nominal fields can array lists valid input values. combine (union) specified constant domain field's values, domain can object unionWith property specify constant domain combined. example, domain: {unionWith: \\[0, 100\\]} quantitative scale means scale domain always includes [0, 100], include values fields beyond [0, 100]. Domain can also takes object defining field encoding parameter interactively determines scale domain. domainMax Sets maximum value scale domain, overriding domain property. property intended use scales continuous domains. domainMid Inserts single mid-point value two-element domain. mid-point value must lie domain minimum maximum values. property can useful setting midpoint diverging color scales. domainMid property intended use scales supporting continuous, piecewise domains. domainMin Sets minimum value scale domain, overriding domain property. property intended use scales continuous domains. exponent exponent pow scale. interpolate interpolation method range values. default, general interpolator numbers, dates, strings colors (HCL space) used. color ranges, property allows interpolation alternative color spaces. Legal values include rgb, hsl, hsl-long, lab, hcl, hcl-long, cubehelix cubehelix-long ('-long' variants use longer paths polar coordinate spaces). object-valued, property accepts object string-valued type property optional numeric gamma property applicable rgb cubehelix interpolators. , see d3-interpolate documentation. Default value: hcl nice Extending domain starts ends nice round values. method typically modifies scale’s domain, may extend bounds nearest round value. Nicing useful domain computed data may irregular. example, domain [0.201479…, 0.996679…], nice domain might [0.2, 1.0]. quantitative scales linear, nice can either boolean flag number. nice number, represent desired tick count. allows greater control step size used extend bounds, guaranteeing returned ticks exactly cover domain. temporal fields time utc scales, nice value can string indicating desired time interval. Legal values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, time utc scales can accept object-valued interval specifier form {\"interval\": \"month\", \"step\": 3}, includes desired number interval steps. , domain snap quarter (Jan, Apr, Jul, Oct) boundaries. Default value: true unbinned quantitative fields; false otherwise. padding continuous scales, expands scale domain accommodate specified number pixels scale range. scale range must represent pixels parameter function intended. Padding adjustment performed prior adjustments, including effects  zero, nice, domainMin,  domainMax properties. band scales, shortcut setting paddingInner paddingOuter value. point scales, alias paddingOuter. Default value: continuous scales, derived scale config's continuousPadding. band point scales, see paddingInner paddingOuter. default, Vega-Lite sets padding width/height = number unique values * step. paddingInner inner padding (spacing) within band step band scales, fraction step size. value must lie range [0,1]. point scale, property invalid point scales internal band widths (step sizes bands). Default value: derived scale config's bandPaddingInner. paddingOuter outer padding (spacing) ends range band point scales, fraction step size. value must lie range [0,1]. Default value: derived scale config's bandPaddingOuter band scales pointPadding point scales. default, Vega-Lite sets outer padding width/height = number unique values * step. range range scale. One : string indicating pre-defined named scale range (e.g., example, \"symbol\", \"diverging\"). continuous scales, two-element array indicating minimum maximum values, array two entries specifying piecewise scale. discrete discretizing scales, array desired output values object field property representing range values. example, field color contains CSS color names, can set range {field: \"color\"}. Notes: color scales can also specify color scheme instead range. directly specified range x y channels ignored. Range can customized via view's corresponding size (width height). rangeMax Sets maximum value scale range, overriding range property default range. property intended use scales continuous ranges. rangeMin Sets minimum value scale range, overriding range property default range. property intended use scales continuous ranges. reverse true, reverses order scale range. Default value: false. round true, rounds numeric output values integers. can helpful snapping pixel grid. Default value: false. scheme string indicating color scheme name (e.g., \"category10\" \"blues\") scheme parameter object. Discrete color schemes may used discrete discretizing scales. Continuous color schemes intended use color scales. full list supported schemes, please refer Vega Scheme reference. type type scale. Vega-Lite supports following categories scale types: Continuous Scales -- mapping continuous domains continuous output ranges (\"linear\", \"pow\", \"sqrt\", \"symlog\", \"log\", \"time\", \"utc\". Discrete Scales -- mapping discrete domains discrete (\"ordinal\") continuous (\"band\" \"point\") output ranges. Discretizing Scales -- mapping continuous domains discrete output ranges \"bin-ordinal\", \"quantile\", \"quantize\" \"threshold\". Default value: please see scale type table. zero true, ensures zero baseline value included scale domain. Default value: true x y channels quantitative field binned custom domain provided; false otherwise. Note: Log, time, utc scales support zero. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: Scale","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/scale_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add scale to encoding — scale_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"#' Add sorting to an encoding — sort_encoding","title":"#' Add sorting to an encoding — sort_encoding","text":"#' Sort encoding \"ascending\" \"descending\" order, given array","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' Add sorting to an encoding — sort_encoding","text":"","code":"vl_sort_angle(spec, value)  vl_sort_color(spec, value)  vl_sort_fill(spec, value)  vl_sort_fillOpacity(spec, value)  vl_sort_opacity(spec, value)  vl_sort_order(spec, value)  vl_sort_radius(spec, value)  vl_sort_shape(spec, value)  vl_sort_size(spec, value)  vl_sort_stroke(spec, value)  vl_sort_strokeDash(spec, value)  vl_sort_strokeOpacity(spec, value)  vl_sort_strokeWidth(spec, value)  vl_sort_theta(spec, value)  vl_sort_x(spec, value)  vl_sort_y(spec, value)  vl_sort_facet(spec, value)  vl_sort_row(spec, value)  vl_sort_column(spec, value)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' Add sorting to an encoding — sort_encoding","text":"spec input vega-lite spec value One \"ascending\", \"descending\", list custom ordering, NA specify sorting","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' Add sorting to an encoding — sort_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sort transform by encoding to encoding — sort_encoding_by_encoding","title":"Add sort transform by encoding to encoding — sort_encoding_by_encoding","text":"Add sort encoding parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sort transform by encoding to encoding — sort_encoding_by_encoding","text":"","code":"vl_sort_angle_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_color_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_fill_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_fillOpacity_by_encoding(   spec,   encoding = NULL,   order = NULL,   .object = NULL )  vl_sort_opacity_by_encoding(   spec,   encoding = NULL,   order = NULL,   .object = NULL )  vl_sort_order_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_radius_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_shape_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_size_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_stroke_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_strokeDash_by_encoding(   spec,   encoding = NULL,   order = NULL,   .object = NULL )  vl_sort_strokeOpacity_by_encoding(   spec,   encoding = NULL,   order = NULL,   .object = NULL )  vl_sort_strokeWidth_by_encoding(   spec,   encoding = NULL,   order = NULL,   .object = NULL )  vl_sort_theta_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_x_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_y_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_facet_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_row_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)  vl_sort_column_by_encoding(spec, encoding = NULL, order = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sort transform by encoding to encoding — sort_encoding_by_encoding","text":"spec input vega-lite spec encoding encoding channel sort (e.g., \"x\", \"y\") order sort order. One \"ascending\" (default), \"descending\", null (sort). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SortByEncoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sort transform by encoding to encoding — sort_encoding_by_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sort transform by field to encoding — sort_encoding_by_field","title":"Add sort transform by field to encoding — sort_encoding_by_field","text":"Add sort field parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sort transform by field to encoding — sort_encoding_by_field","text":"","code":"vl_sort_angle_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_color_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_fill_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_fillOpacity_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_opacity_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_order_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_radius_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_shape_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_size_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_stroke_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_strokeDash_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_strokeOpacity_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_strokeWidth_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_theta_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_x_by_field(spec, field = NULL, op = NULL, order = NULL, .object = NULL)  vl_sort_y_by_field(spec, field = NULL, op = NULL, order = NULL, .object = NULL)  vl_sort_facet_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_row_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )  vl_sort_column_by_field(   spec,   field = NULL,   op = NULL,   order = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sort transform by field to encoding — sort_encoding_by_field","text":"spec input vega-lite spec field data field sort . Default value: unspecified, defaults field specified outer data reference. op aggregate operation perform field prior sorting (e.g., \"count\", \"mean\" \"median\"). aggregation required multiple values sort field encoded data field. input data objects aggregated, grouped encoded data field. full list operations, please see documentation aggregate. Default value: \"sum\" stacked plots. Otherwise, \"min\". order sort order. One \"ascending\" (default), \"descending\", null (sort). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: EncodingSortField","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/sort_encoding_by_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sort transform by field to encoding — sort_encoding_by_field","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/stack_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add stack transform to encoding — stack_encoding","title":"Add stack transform to encoding — stack_encoding","text":"Add stack parameters encoding","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/stack_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add stack transform to encoding — stack_encoding","text":"","code":"vl_stack_radius(spec, stack = c(\"zero\", \"center\", \"normalize\", NA))  vl_stack_theta(spec, stack = c(\"zero\", \"center\", \"normalize\", NA))  vl_stack_x(spec, stack = c(\"zero\", \"center\", \"normalize\", NA))  vl_stack_y(spec, stack = c(\"zero\", \"center\", \"normalize\", NA))"},{"path":"https://vegawidget.github.io/vlbuildr/reference/stack_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add stack transform to encoding — stack_encoding","text":"spec input vega-lite spec stack One 'zero', 'center', 'normalize', NA","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/stack_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add stack transform to encoding — stack_encoding","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vega_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Vega embed options — vega_embed","title":"Vega embed options — vega_embed","text":"See vegawidget::vega_embed details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vegawidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Vega/Vega-Lite htmlwidget — vegawidget","title":"Create a Vega/Vega-Lite htmlwidget — vegawidget","text":"See vegawidget::vegawidget details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vegawidgetOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny-output for vegawidget — vegawidgetOutput","title":"Shiny-output for vegawidget — vegawidgetOutput","text":"See vegawidget::vegawidgetOutput details.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl.html","id":null,"dir":"Reference","previous_headings":"","what":"vl — vl","title":"vl — vl","text":"Holds functions making objects based Vega-Lite spec. example vl$X(field = 'crop', type = 'nominal') used build list X axis encoding. See online Vega-Lite documentation information parameters.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl — vl","text":"","code":"vl"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"vl — vl","text":"object class vl (inherits environment) length 88.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_data — vl_add_data","title":"vl_add_data — vl_add_data","text":"Add data vega-lite spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_data — vl_add_data","text":"","code":"vl_add_data(   spec,   values = NULL,   format = NULL,   name = NULL,   url = NULL,   graticule = NULL,   sequence = NULL,   sphere = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_data — vl_add_data","text":"spec input vega-lite spec values full data set, included inline. can array objects primitive values, object, string. Arrays primitive values ingested objects data property. Strings parsed according specified format type. format object specifies format parsing data. name Provide placeholder name bind data runtime. url URL load data set. Use format.type property ensure loaded data correctly parsed. graticule Generate graticule GeoJSON data geographic reference lines. sequence Generate sequence numbers. sphere Generate sphere GeoJSON data full globe. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: UrlData, InlineData, NamedData, SequenceGenerator, SphereGenerator GraticuleGenerator","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_data — vl_add_data","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_data_frame — vl_add_data_frame","title":"vl_add_data_frame — vl_add_data_frame","text":"Add data format R data frame","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_data_frame — vl_add_data_frame","text":"","code":"vl_add_data_frame(spec, values, ...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_data_frame — vl_add_data_frame","text":"spec input vega-lite spec values Data frame data add chart ... Additional arguments pass vl_add_data(), name format","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_data_frame — vl_add_data_frame","text":"modified Vega-Lite Spec","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vl_add_data_frame — vl_add_data_frame","text":"","code":"vl_chart() %>%   vl_add_data_frame(mtcars) %>%   vl_mark_point() %>%   vl_encode_x(\"wt\") %>%   vl_encode_y(\"mpg\")"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_url.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_data_url — vl_add_data_url","title":"vl_add_data_url — vl_add_data_url","text":"Add data form url","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_data_url — vl_add_data_url","text":"","code":"vl_add_data_url(spec, url, ...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_data_url — vl_add_data_url","text":"spec input vega-lite spec url Data frame data add chart ... Additional arguments pass vl_add_data(), name format","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_data_url — vl_add_data_url","text":"modified Vega-Lite Spec","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_data_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vl_add_data_url — vl_add_data_url","text":"","code":"vl_chart() %>%   vl_add_data_url(\"https://vega.github.io/vega-editor/app/data/movies.json\") %>%   vl_encode_x(field = \"IMDB_Rating\", type = \"quantitative\") %>%   vl_encode_y(type = \"quantitative\", aggregate = \"count\") %>%   vl_bin_x(maxbins = 10) %>%   vl_mark_bar()"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_interval_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_interval_selection — vl_add_interval_selection","title":"vl_add_interval_selection — vl_add_interval_selection","text":"Add parameter interval selection spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_interval_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_interval_selection — vl_add_interval_selection","text":"","code":"vl_add_interval_selection(   spec,   name = NULL,   select = NULL,   bind = NULL,   value = NULL,   clear = NULL,   encodings = NULL,   fields = NULL,   mark = NULL,   on = NULL,   resolve = NULL,   translate = NULL,   zoom = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_interval_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_interval_selection — vl_add_interval_selection","text":"spec input vega-lite spec name Required. unique name selection parameter. Selection names valid JavaScript identifiers: contain alphanumeric characters (\"$\", \"_\") may start digit. Reserved keywords may used parameter names \"datum\", \"event\", \"item\", \"parent\". select Determines default event processing data query selection. Vega-Lite currently supports two selection types: \"point\" -- select multiple discrete data values; first value selected click additional values toggled shift-click. \"interval\" -- select continuous range data values drag. bind set, selection populated input elements (also known dynamic query widgets) interacting corresponding legend. Direct manipulation interaction disabled default; re-enable , set selection's property. Legend bindings restricted selections specify single field encoding. Query widget binding takes form Vega's input element binding definition can mapping projected field/encodings binding definitions. See also: bind documentation. value Initialize selection mapping projected channels field names initial values. See also: init documentation. clear Clears selection, emptying values. property can Event Stream false disable clear. Default value: dblclick. See also: clear examples  documentation. encodings array encoding channels. corresponding data field values must match data tuple fall within selection. See also: projection encodings fields section documentation. fields array field names whose values must match data tuple fall within selection. See also: projection encodings fields section documentation. mark interval selection also adds rectangle mark depict extents interval. mark property can used customize appearance mark. See also: mark examples documentation. Vega event stream (object selector) triggers selection. interval selections, event stream must specify start end. See also: examples documentation. resolve layered multi-view displays, strategy determines selections' data queries resolved applied filter transform, conditional encoding rule, scale domain. One : \"global\" -- one brush exists entire SPLOM. user begins drag, previous brushes cleared, new one constructed. \"union\" -- cell contains brush, points highlighted lie within individual brushes. \"intersect\" -- cell contains brush, points highlighted fall within individual brushes. Default value: global. See also: resolve examples documentation. translate truthy, allows user interactively move interval selection back--forth. Can true, false (disable panning), Vega event stream definition must include start end event trigger continuous panning. Discrete panning (e.g., pressing left/right arrow keys) supported future versions. Default value: true, corresponds . default allows users clicks drags within interval selection reposition . See also: translate examples documentation. zoom truthy, allows user interactively resize interval selection. Can true, false (disable zooming), Vega event stream definition. Currently, wheel events supported, custom event streams can still used specify filters, debouncing, throttling. Future versions expand set events can trigger transformation. Default value: true, corresponds wheel!. default allows users use mouse wheel resize interval selection. See also: zoom examples documentation. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SelectionParameter","code":"[mousedown, window:mouseup] > window:mousemove!"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_interval_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_interval_selection — vl_add_interval_selection","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_parameter — vl_add_parameter","title":"vl_add_parameter — vl_add_parameter","text":"Add variable parameter spec.  See vl_add_point_selection() vl_add_interval_selection() adding selection parameters.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_parameter — vl_add_parameter","text":"","code":"vl_add_parameter(   spec,   name = NULL,   bind = NULL,   expr = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_parameter — vl_add_parameter","text":"spec input vega-lite spec name unique name variable parameter. Parameter names valid JavaScript identifiers: contain alphanumeric characters (\"$\", \"_\") may start digit. Reserved keywords may used parameter names \"datum\", \"event\", \"item\", \"parent\". bind Binds parameter external input element slider, selection list radio button group. expr expression value parameter. expression may include parameters, case parameter automatically update response upstream parameter changes. value initial value parameter. Default value: undefined .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: VariableParameter","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_parameter — vl_add_parameter","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_point_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_point_selection — vl_add_point_selection","title":"vl_add_point_selection — vl_add_point_selection","text":"Add parameter point selection spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_point_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_point_selection — vl_add_point_selection","text":"","code":"vl_add_point_selection(   spec,   name = NULL,   select = NULL,   bind = NULL,   value = NULL,   clear = NULL,   encodings = NULL,   fields = NULL,   nearest = NULL,   on = NULL,   resolve = NULL,   toggle = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_point_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_point_selection — vl_add_point_selection","text":"spec input vega-lite spec name Required. unique name selection parameter. Selection names valid JavaScript identifiers: contain alphanumeric characters (\"$\", \"_\") may start digit. Reserved keywords may used parameter names \"datum\", \"event\", \"item\", \"parent\". select Determines default event processing data query selection. Vega-Lite currently supports two selection types: \"point\" -- select multiple discrete data values; first value selected click additional values toggled shift-click. \"interval\" -- select continuous range data values drag. bind set, selection populated input elements (also known dynamic query widgets) interacting corresponding legend. Direct manipulation interaction disabled default; re-enable , set selection's property. Legend bindings restricted selections specify single field encoding. Query widget binding takes form Vega's input element binding definition can mapping projected field/encodings binding definitions. See also: bind documentation. value Initialize selection mapping projected channels field names initial values. See also: init documentation. clear Clears selection, emptying values. property can Event Stream false disable clear. Default value: dblclick. See also: clear examples  documentation. encodings array encoding channels. corresponding data field values must match data tuple fall within selection. See also: projection encodings fields section documentation. fields array field names whose values must match data tuple fall within selection. See also: projection encodings fields section documentation. nearest true, invisible voronoi diagram computed accelerate discrete selection. data value nearest mouse cursor added selection. Default value: false, means data values must interacted directly (e.g., clicked ) added selection. See also: nearest examples documentation. Vega event stream (object selector) triggers selection. interval selections, event stream must specify start end. See also: examples documentation. resolve layered multi-view displays, strategy determines selections' data queries resolved applied filter transform, conditional encoding rule, scale domain. One : \"global\" -- one brush exists entire SPLOM. user begins drag, previous brushes cleared, new one constructed. \"union\" -- cell contains brush, points highlighted lie within individual brushes. \"intersect\" -- cell contains brush, points highlighted fall within individual brushes. Default value: global. See also: resolve examples documentation. toggle Controls whether data values toggled (inserted removed point selection) ever inserted multi selections. One : true -- default behavior, corresponds \"event.shiftKey\". result, data values toggled user interacts shift-key pressed. false -- disables toggling behaviour; user interacts, data values inserted multi selection never removed. Vega expression re-evaluated user interacts. expression evaluates true, data value toggled multi selection. expression evaluates false, multi selection first clear, data value inserted. example, setting value Vega expression \"true\" toggle data values without user pressing shift-key. Default value: true See also: toggle examples documentation. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SelectionParameter","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_point_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_point_selection — vl_add_point_selection","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_add_properties — vl_add_properties","title":"vl_add_properties — vl_add_properties","text":"Add properties top level vega-lite spec. Allows adding properties like width,height, background specific function adding (unlike markor encoding).","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_add_properties — vl_add_properties","text":"","code":"vl_add_properties(   spec,   align = NULL,   autosize = NULL,   background = NULL,   bounds = NULL,   center = NULL,   datasets = NULL,   description = NULL,   height = NULL,   name = NULL,   padding = NULL,   params = NULL,   projection = NULL,   spacing = NULL,   title = NULL,   usermeta = NULL,   view = NULL,   width = NULL,   columns = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_add_properties — vl_add_properties","text":"spec input vega-lite spec align alignment apply grid rows columns. supported string values \"\", \"\", \"none\". \"none\", flow layout used, adjacent subviews simply placed one . \"\", subviews aligned clean grid structure, row column may variable size. \"\", subviews aligned row column sized identically based maximum observed size. String values property applied grid rows columns. Alternatively, object value form {\"row\": string, \"column\": string} can used supply different alignments rows columns. Default value: \"\". autosize visualization size determined. string, one \"pad\", \"fit\" \"none\". Object values can additionally specify parameters content sizing automatic resizing. Default value: pad background CSS color property use background entire view. Default value: \"white\" bounds bounds calculation method use determining extent sub-plot. One full (default) flush. set full, entire calculated bounds (including axes, title, legend) used. set flush, specified width height values sub-view used. flush setting can useful attempting place sub-plots without axes legends uniform grid structure. Default value: \"full\" center Boolean flag indicating subviews centered relative respective rows columns. Default value: false : Boolean flag indicating subviews centered relative respective rows columns. object value form {\"row\": boolean, \"column\": boolean} can used supply different centering values rows columns. Default value: false datasets global data store named datasets. mapping names inline datasets. can array objects primitive values string. Arrays primitive values ingested objects data property. description Description mark commenting purpose. height height visualization. plot continuous y-field, height number. plot either discrete y-field y-field, height can either number indicating fixed height object form {step: number} defining height per discrete step. (y-field equivalent one discrete step.) enable responsive sizing height, set \"container\". Default value: Based config.view.continuousHeight plot continuous y-field config.view.discreteHeight otherwise. Note: plots row column channels, represents height single view \"container\" option used. See also: height documentation. name Name visualization later reference. padding default visualization padding, pixels, edge visualization canvas data rectangle. number, specifies padding sides. object, value format {\"left\": 5, \"top\": 5, \"right\": 5, \"bottom\": 5} specify padding side visualization. Default value: 5 params array parameters may either simple variables, complex selections map user input data queries. : Dynamic variables selections parameterize visualization. projection object defining properties geographic projection, applied shape path \"geoshape\" marks latitude \"longitude\" channels marks. : object defining properties geographic projection shared underlying layers. spacing spacing pixels sub-views composition operator. object form {\"row\": number, \"column\": number} can used set different spacing values rows columns. Default value: Depends \"spacing\" property view composition configuration (20 default) : spacing pixels sub-views concat operator. Default value: 10 title Title plot. usermeta Optional metadata passed Vega. object completely ignored Vega Vega-Lite can used custom metadata. view object defining view background's fill stroke. Default value: none (transparent) width width visualization. plot continuous x-field, width number. plot either discrete x-field x-field, width can either number indicating fixed width object form {step: number} defining width per discrete step. (x-field equivalent one discrete step.) enable responsive sizing width, set \"container\". Default value: Based config.view.continuousWidth plot continuous x-field config.view.discreteWidth otherwise. Note: plots row column channels, represents width single view \"container\" option used. See also: width documentation. columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: TopLevelUnitSpec, TopLevelFacetSpec, TopLevelLayerSpec, TopLevelRepeatSpec, TopLevelConcatSpec, TopLevelVConcatSpec TopLevelHConcatSpec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_add_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_add_properties — vl_add_properties","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_aggregate — vl_aggregate","title":"vl_aggregate — vl_aggregate","text":"Add AggregateTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_aggregate — vl_aggregate","text":"","code":"vl_aggregate(spec, aggregate = NULL, groupby = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_aggregate — vl_aggregate","text":"spec input vega-lite spec aggregate Array objects define fields aggregate. groupby data fields group . specified, single group containing data objects used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AggregateTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_aggregate — vl_aggregate","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bin — vl_bin","title":"vl_bin — vl_bin","text":"Add BinTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bin — vl_bin","text":"","code":"vl_bin(spec, bin = NULL, as = NULL, field = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bin — vl_bin","text":"spec input vega-lite spec bin object indicating bin properties, simply true using default bin parameters. output fields write start end bin values. can either string array strings two elements denoting name fields bin start bin end respectively. single string (e.g., \"val\") provided, end field \"val_end\". field data field bin. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BinTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bin — vl_bin","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_checkbox_input.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bind_checkbox_input — vl_bind_checkbox_input","title":"vl_bind_checkbox_input — vl_bind_checkbox_input","text":"Add checkbox binding vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_checkbox_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bind_checkbox_input — vl_bind_checkbox_input","text":"","code":"vl_bind_checkbox_input(   spec,   parameter_name,   projection_name = NULL,   debounce = NULL,   element = NULL,   name = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_checkbox_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bind_checkbox_input — vl_bind_checkbox_input","text":"spec input vega-lite spec parameter_name Name parameter add binding projection_name Name projection (field encoding) within selection debounce defined, delays event handling specified milliseconds elapsed since last event fired. element optional CSS selector string indicating parent element input element added. default, input elements added within parent container Vega view. name default, signal name used label input elements. name property can used instead specify custom label bound signal. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BindCheckbox","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_checkbox_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bind_checkbox_input — vl_bind_checkbox_input","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_direct_input.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bind_direct_input — vl_bind_direct_input","title":"vl_bind_direct_input — vl_bind_direct_input","text":"Add direct binding vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_direct_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bind_direct_input — vl_bind_direct_input","text":"","code":"vl_bind_direct_input(   spec,   parameter_name,   projection_name = NULL,   debounce = NULL,   element = NULL,   event = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_direct_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bind_direct_input — vl_bind_direct_input","text":"spec input vega-lite spec parameter_name Name parameter add binding projection_name Name projection (field encoding) within selection debounce defined, delays event handling specified milliseconds elapsed since last event fired. element input element exposes value property supports EventTarget interface, CSS selector string element. element updates dispatches event, value property used new, bound signal value. signal updates independent element, value property set signal value new event dispatched element. event event (default \"input\") listen track changes external element. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BindDirect","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_direct_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bind_direct_input — vl_bind_direct_input","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_input.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bind_input — vl_bind_input","title":"vl_bind_input — vl_bind_input","text":"Add input binding vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bind_input — vl_bind_input","text":"","code":"vl_bind_input(   spec,   parameter_name,   projection_name = NULL,   autocomplete = NULL,   debounce = NULL,   element = NULL,   name = NULL,   placeholder = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bind_input — vl_bind_input","text":"spec input vega-lite spec parameter_name Name parameter add binding projection_name Name projection (field encoding) within selection autocomplete hint form autofill. See HTML autocomplete attribute additional information. debounce defined, delays event handling specified milliseconds elapsed since last event fired. element optional CSS selector string indicating parent element input element added. default, input elements added within parent container Vega view. name default, signal name used label input elements. name property can used instead specify custom label bound signal. placeholder Text appears form control value set. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BindInput","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bind_input — vl_bind_input","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_radio_input.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bind_radio_input — vl_bind_radio_input","title":"vl_bind_radio_input — vl_bind_radio_input","text":"Add radio binding vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_radio_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bind_radio_input — vl_bind_radio_input","text":"","code":"vl_bind_radio_input(   spec,   parameter_name,   projection_name = NULL,   debounce = NULL,   element = NULL,   labels = NULL,   name = NULL,   options = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_radio_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bind_radio_input — vl_bind_radio_input","text":"spec input vega-lite spec parameter_name Name parameter add binding projection_name Name projection (field encoding) within selection debounce defined, delays event handling specified milliseconds elapsed since last event fired. element optional CSS selector string indicating parent element input element added. default, input elements added within parent container Vega view. labels array label strings represent options values. unspecified, options value coerced string used label. name default, signal name used label input elements. name property can used instead specify custom label bound signal. options array options select . .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BindRadioSelect","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_radio_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bind_radio_input — vl_bind_radio_input","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_range_input.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bind_range_input — vl_bind_range_input","title":"vl_bind_range_input — vl_bind_range_input","text":"Add range binding vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_range_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bind_range_input — vl_bind_range_input","text":"","code":"vl_bind_range_input(   spec,   parameter_name,   projection_name = NULL,   debounce = NULL,   element = NULL,   max = NULL,   min = NULL,   name = NULL,   step = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_range_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bind_range_input — vl_bind_range_input","text":"spec input vega-lite spec parameter_name Name parameter add binding projection_name Name projection (field encoding) within selection debounce defined, delays event handling specified milliseconds elapsed since last event fired. element optional CSS selector string indicating parent element input element added. default, input elements added within parent container Vega view. max Sets maximum slider value. Defaults larger signal value 100. min Sets minimum slider value. Defaults smaller signal value 0. name default, signal name used label input elements. name property can used instead specify custom label bound signal. step Sets minimum slider increment. undefined, step size automatically determined based min max values. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BindRange","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_range_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bind_range_input — vl_bind_range_input","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_select_input.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_bind_select_input — vl_bind_select_input","title":"vl_bind_select_input — vl_bind_select_input","text":"Add select binding vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_select_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_bind_select_input — vl_bind_select_input","text":"","code":"vl_bind_select_input(   spec,   parameter_name,   projection_name = NULL,   debounce = NULL,   element = NULL,   labels = NULL,   name = NULL,   options = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_select_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_bind_select_input — vl_bind_select_input","text":"spec input vega-lite spec parameter_name Name parameter add binding projection_name Name projection (field encoding) within selection debounce defined, delays event handling specified milliseconds elapsed since last event fired. element optional CSS selector string indicating parent element input element added. default, input elements added within parent container Vega view. labels array label strings represent options values. unspecified, options value coerced string used label. name default, signal name used label input elements. name property can used instead specify custom label bound signal. options array options select . .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BindRadioSelect","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_bind_select_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_bind_select_input — vl_bind_select_input","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_calculate — vl_calculate","title":"vl_calculate — vl_calculate","text":"Add CalculateTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_calculate — vl_calculate","text":"","code":"vl_calculate(spec, calculate = NULL, as = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_calculate — vl_calculate","text":"spec input vega-lite spec calculate expression string. Use variable datum refer current data object. field storing computed formula value. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: CalculateTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_calculate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_calculate — vl_calculate","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_chart — vl_chart","title":"vl_chart — vl_chart","text":"Initialize Vega-Lite specification! Can add top level configuration parameters, simply call without arguments initialize use function (like vl_mark_point(), vl_encode_x(), etc) add various pieces chart spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_chart — vl_chart","text":"","code":"vl_chart(   data = NULL,   `$schema` = vegawidget::vega_schema(),   align = NULL,   autosize = NULL,   background = NULL,   bounds = NULL,   center = NULL,   config = NULL,   datasets = NULL,   description = NULL,   encoding = NULL,   height = NULL,   mark = NULL,   name = NULL,   padding = NULL,   params = NULL,   projection = NULL,   resolve = NULL,   spacing = NULL,   title = NULL,   transform = NULL,   usermeta = NULL,   view = NULL,   width = NULL,   columns = NULL,   facet = NULL,   spec = NULL,   layer = NULL,   `repeat` = NULL,   concat = NULL,   vconcat = NULL,   hconcat = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_chart — vl_chart","text":"data object describing data source. Set null ignore parent's data source. data set, derived parent. $schema URL JSON schema Vega-Lite specification. Unless reason change , use https://vega.github.io/schema/vega-lite/v5.json. Setting $schema property allows automatic validation autocomplete editors support JSON schema. align alignment apply grid rows columns. supported string values \"\", \"\", \"none\". \"none\", flow layout used, adjacent subviews simply placed one . \"\", subviews aligned clean grid structure, row column may variable size. \"\", subviews aligned row column sized identically based maximum observed size. String values property applied grid rows columns. Alternatively, object value form {\"row\": string, \"column\": string} can used supply different alignments rows columns. Default value: \"\". autosize visualization size determined. string, one \"pad\", \"fit\" \"none\". Object values can additionally specify parameters content sizing automatic resizing. Default value: pad background CSS color property use background entire view. Default value: \"white\" bounds bounds calculation method use determining extent sub-plot. One full (default) flush. set full, entire calculated bounds (including axes, title, legend) used. set flush, specified width height values sub-view used. flush setting can useful attempting place sub-plots without axes legends uniform grid structure. Default value: \"full\" center Boolean flag indicating subviews centered relative respective rows columns. Default value: false : Boolean flag indicating subviews centered relative respective rows columns. object value form {\"row\": boolean, \"column\": boolean} can used supply different centering values rows columns. Default value: false config Vega-Lite configuration object. property can defined top-level specification. datasets global data store named datasets. mapping names inline datasets. can array objects primitive values string. Arrays primitive values ingested objects data property. description Description mark commenting purpose. encoding key-value mapping encoding channels definition fields. : shared key-value mapping encoding channels definition fields underlying layers. height height visualization. plot continuous y-field, height number. plot either discrete y-field y-field, height can either number indicating fixed height object form {step: number} defining height per discrete step. (y-field equivalent one discrete step.) enable responsive sizing height, set \"container\". Default value: Based config.view.continuousHeight plot continuous y-field config.view.discreteHeight otherwise. Note: plots row column channels, represents height single view \"container\" option used. See also: height documentation. mark string describing mark type (one \"bar\", \"circle\", \"square\", \"tick\", \"line\", \"area\", \"point\", \"rule\", \"geoshape\", \"text\") mark definition object. name Name visualization later reference. padding default visualization padding, pixels, edge visualization canvas data rectangle. number, specifies padding sides. object, value format {\"left\": 5, \"top\": 5, \"right\": 5, \"bottom\": 5} specify padding side visualization. Default value: 5 params array parameters may either simple variables, complex selections map user input data queries. : Dynamic variables selections parameterize visualization. projection object defining properties geographic projection, applied shape path \"geoshape\" marks latitude \"longitude\" channels marks. : object defining properties geographic projection shared underlying layers. resolve Scale, axis, legend resolutions view composition specifications. spacing spacing pixels sub-views composition operator. object form {\"row\": number, \"column\": number} can used set different spacing values rows columns. Default value: Depends \"spacing\" property view composition configuration (20 default) : spacing pixels sub-views concat operator. Default value: 10 title Title plot. transform array data transformations filter new field calculation. usermeta Optional metadata passed Vega. object completely ignored Vega Vega-Lite can used custom metadata. view object defining view background's fill stroke. Default value: none (transparent) width width visualization. plot continuous x-field, width number. plot either discrete x-field x-field, width can either number indicating fixed width object form {step: number} defining width per discrete step. (x-field equivalent one discrete step.) enable responsive sizing width, set \"container\". Default value: Based config.view.continuousWidth plot continuous x-field config.view.discreteWidth otherwise. Note: plots row column channels, represents width single view \"container\" option used. See also: width documentation. columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). facet Definition facet data. One : 1) field definition faceting plot one field 2) object maps row column channels field definitions spec specification view gets faceted. : specification view gets repeated. layer Layer single view specifications layered. Note: Specifications inside layer use row column channels layering facet specifications allowed. Instead, use facet operator place layer inside facet. repeat Definition fields repeated. One : 1) array fields repeated. \"repeat\" array, field can referred {\"repeat\": \"repeat\"}. repeated views laid wrapped row. can set number columns control wrapping. 2) object maps \"row\" /\"column\" listed fields repeated along particular orientations. objects {\"repeat\": \"row\"} {\"repeat\": \"column\"} can used refer repeated field respectively. concat list views concatenated. vconcat list views concatenated put column. hconcat list views concatenated put row.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_chart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_chart — vl_chart","text":"vega-lite spec, S3 object class vegaspec_vega_lite using vegawidget::as_vegaspec()","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vl_chart — vl_chart","text":"","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode_x(\"wt\") %>%   vl_encode_y(\"mpg\")"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config — vl_config","title":"vl_config — vl_config","text":"Add top-level config vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config — vl_config","text":"","code":"vl_config(   spec,   arc = NULL,   area = NULL,   aria = NULL,   autosize = NULL,   axis = NULL,   axisBand = NULL,   axisBottom = NULL,   axisDiscrete = NULL,   axisLeft = NULL,   axisPoint = NULL,   axisQuantitative = NULL,   axisRight = NULL,   axisTemporal = NULL,   axisTop = NULL,   axisX = NULL,   axisXBand = NULL,   axisXDiscrete = NULL,   axisXPoint = NULL,   axisXQuantitative = NULL,   axisXTemporal = NULL,   axisY = NULL,   axisYBand = NULL,   axisYDiscrete = NULL,   axisYPoint = NULL,   axisYQuantitative = NULL,   axisYTemporal = NULL,   background = NULL,   bar = NULL,   boxplot = NULL,   circle = NULL,   concat = NULL,   countTitle = NULL,   customFormatTypes = NULL,   errorband = NULL,   errorbar = NULL,   facet = NULL,   fieldTitle = NULL,   font = NULL,   geoshape = NULL,   header = NULL,   headerColumn = NULL,   headerFacet = NULL,   headerRow = NULL,   image = NULL,   legend = NULL,   line = NULL,   lineBreak = NULL,   locale = NULL,   mark = NULL,   numberFormat = NULL,   padding = NULL,   params = NULL,   point = NULL,   projection = NULL,   range = NULL,   rect = NULL,   rule = NULL,   scale = NULL,   selection = NULL,   square = NULL,   style = NULL,   text = NULL,   tick = NULL,   timeFormat = NULL,   title = NULL,   trail = NULL,   view = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config — vl_config","text":"spec input vega-lite spec arc Arc-specific Config area Area-Specific Config aria boolean flag indicating ARIA default attributes included marks guides (SVG output ). false, \"aria-hidden\" attribute set guides, removing ARIA accessibility tree Vega-Lite generate default descriptions marks. Default value: true. autosize visualization size determined. string, one \"pad\", \"fit\" \"none\". Object values can additionally specify parameters content sizing automatic resizing. Default value: pad axis Axis configuration, determines default properties x y axes. full list axis configuration options, please see corresponding section axis documentation. axisBand Config axes \"band\" scales. axisBottom Config x-axis along bottom edge chart. axisDiscrete Config axes \"point\" \"band\" scales. axisLeft Config y-axis along left edge chart. axisPoint Config axes \"point\" scales. axisQuantitative Config quantitative axes. axisRight Config y-axis along right edge chart. axisTemporal Config temporal axes. axisTop Config x-axis along top edge chart. axisX X-axis specific config. axisXBand Config x-axes \"band\" scales. axisXDiscrete Config x-axes \"point\" \"band\" scales. axisXPoint Config x-axes \"point\" scales. axisXQuantitative Config x-quantitative axes. axisXTemporal Config x-temporal axes. axisY Y-axis specific config. axisYBand Config y-axes \"band\" scales. axisYDiscrete Config y-axes \"point\" \"band\" scales. axisYPoint Config y-axes \"point\" scales. axisYQuantitative Config y-quantitative axes. axisYTemporal Config y-temporal axes. background CSS color property use background entire view. Default value: \"white\" bar Bar-Specific Config boxplot Box Config circle Circle-Specific Config concat Default configuration concatenation repeat view composition operators (concat, hconcat, vconcat, repeat) countTitle Default axis legend title count fields. Default value: Count Records. customFormatTypes Allow formatType property text marks guides accept custom formatter function registered Vega expression. errorband ErrorBand Config errorbar ErrorBar Config facet Default configuration facet view composition operator fieldTitle Defines Vega-Lite generates title fields. three possible styles: \"verbal\" (Default) - displays function verbal style (e.g., \"Sum field\", \"Year-month date\", \"field (binned)\"). \"function\" - displays function using parentheses capitalized texts (e.g., \"SUM(field)\", \"YEARMONTH(date)\", \"BIN(field)\"). \"plain\" - displays field name without functions (e.g., \"field\", \"date\", \"field\"). font Default font text marks, titles, labels. geoshape Geoshape-Specific Config header Header configuration, determines default properties headers. full list header configuration options, please see corresponding section header documentation. headerColumn Header configuration, determines default properties column headers. full list header configuration options, please see corresponding section header documentation. headerFacet Header configuration, determines default properties non-row/column facet headers. full list header configuration options, please see corresponding section header documentation. headerRow Header configuration, determines default properties row headers. full list header configuration options, please see corresponding section header documentation. image Image-specific Config legend Legend configuration, determines default properties legends. full list legend configuration options, please see corresponding section legend documentation. line Line-Specific Config lineBreak delimiter, newline character, upon break text strings multiple lines. property provides global default text marks, overridden mark style config settings, lineBreak mark encoding channel. signal-valued, either string regular expression (regexp) values valid. locale Locale definitions string parsing formatting number date values. locale object contain number /time properties locale definitions. Locale definitions provided config block may overridden View constructor locale option. mark Mark Config numberFormat D3 Number format guide labels text marks. example \"s\" SI units. Use D3's number format pattern. padding default visualization padding, pixels, edge visualization canvas data rectangle. number, specifies padding sides. object, value format {\"left\": 5, \"top\": 5, \"right\": 5, \"bottom\": 5} specify padding side visualization. Default value: 5 params Dynamic variables selections parameterize visualization. point Point-Specific Config projection Projection configuration, determines default properties projections. full list projection configuration options, please see corresponding section projection documentation. range object hash defines default range arrays schemes using scales. full list scale range configuration options, please see corresponding section scale documentation. rect Rect-Specific Config rule Rule-Specific Config scale Scale configuration determines default properties scales. full list scale configuration options, please see corresponding section scale documentation. selection object hash defining default properties type selections. square Square-Specific Config style object hash defines key-value mappings determine default properties marks given style. keys represent styles names; values valid mark configuration objects. text Text-Specific Config tick Tick-Specific Config timeFormat Default time format raw time values (without time units) text marks, legend labels header labels. Default value: \"%b %d, %Y\" Note: Axes automatically determine format label automatically config affect axes. title Title configuration, determines default properties titles. full list title configuration options, please see corresponding section title documentation. trail Trail-Specific Config view Default properties single view plots. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: Config","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config — vl_config","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_arc — vl_config_arc","title":"vl_config_arc — vl_config_arc","text":"Add arc config (RectConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_arc — vl_config_arc","text":"","code":"vl_config_arc(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_arc — vl_config_arc","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: RectConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_arc — vl_config_arc","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_area.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_area — vl_config_area","title":"vl_config_area — vl_config_area","text":"Add area config (AreaConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_area — vl_config_area","text":"","code":"vl_config_area(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_area — vl_config_area","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AreaConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_area — vl_config_area","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axis — vl_config_axis","title":"vl_config_axis — vl_config_axis","text":"Add axis config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axis — vl_config_axis","text":"","code":"vl_config_axis(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axis — vl_config_axis","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axis — vl_config_axis","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBand.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisBand — vl_config_axisBand","title":"vl_config_axisBand — vl_config_axisBand","text":"Add axisBand config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisBand — vl_config_axisBand","text":"","code":"vl_config_axisBand(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisBand — vl_config_axisBand","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisBand — vl_config_axisBand","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBottom.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisBottom — vl_config_axisBottom","title":"vl_config_axisBottom — vl_config_axisBottom","text":"Add axisBottom config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBottom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisBottom — vl_config_axisBottom","text":"","code":"vl_config_axisBottom(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBottom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisBottom — vl_config_axisBottom","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisBottom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisBottom — vl_config_axisBottom","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisDiscrete.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisDiscrete — vl_config_axisDiscrete","title":"vl_config_axisDiscrete — vl_config_axisDiscrete","text":"Add axisDiscrete config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisDiscrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisDiscrete — vl_config_axisDiscrete","text":"","code":"vl_config_axisDiscrete(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisDiscrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisDiscrete — vl_config_axisDiscrete","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisDiscrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisDiscrete — vl_config_axisDiscrete","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisLeft.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisLeft — vl_config_axisLeft","title":"vl_config_axisLeft — vl_config_axisLeft","text":"Add axisLeft config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisLeft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisLeft — vl_config_axisLeft","text":"","code":"vl_config_axisLeft(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisLeft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisLeft — vl_config_axisLeft","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisLeft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisLeft — vl_config_axisLeft","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisPoint.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisPoint — vl_config_axisPoint","title":"vl_config_axisPoint — vl_config_axisPoint","text":"Add axisPoint config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisPoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisPoint — vl_config_axisPoint","text":"","code":"vl_config_axisPoint(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisPoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisPoint — vl_config_axisPoint","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisPoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisPoint — vl_config_axisPoint","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisQuantitative.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisQuantitative — vl_config_axisQuantitative","title":"vl_config_axisQuantitative — vl_config_axisQuantitative","text":"Add axisQuantitative config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisQuantitative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisQuantitative — vl_config_axisQuantitative","text":"","code":"vl_config_axisQuantitative(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisQuantitative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisQuantitative — vl_config_axisQuantitative","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisQuantitative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisQuantitative — vl_config_axisQuantitative","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisRight.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisRight — vl_config_axisRight","title":"vl_config_axisRight — vl_config_axisRight","text":"Add axisRight config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisRight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisRight — vl_config_axisRight","text":"","code":"vl_config_axisRight(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisRight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisRight — vl_config_axisRight","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisRight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisRight — vl_config_axisRight","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTemporal.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisTemporal — vl_config_axisTemporal","title":"vl_config_axisTemporal — vl_config_axisTemporal","text":"Add axisTemporal config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTemporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisTemporal — vl_config_axisTemporal","text":"","code":"vl_config_axisTemporal(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTemporal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisTemporal — vl_config_axisTemporal","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTemporal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisTemporal — vl_config_axisTemporal","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTop.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisTop — vl_config_axisTop","title":"vl_config_axisTop — vl_config_axisTop","text":"Add axisTop config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisTop — vl_config_axisTop","text":"","code":"vl_config_axisTop(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisTop — vl_config_axisTop","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisTop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisTop — vl_config_axisTop","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisX.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisX — vl_config_axisX","title":"vl_config_axisX — vl_config_axisX","text":"Add axisX config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisX — vl_config_axisX","text":"","code":"vl_config_axisX(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisX — vl_config_axisX","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisX — vl_config_axisX","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXBand.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisXBand — vl_config_axisXBand","title":"vl_config_axisXBand — vl_config_axisXBand","text":"Add axisXBand config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXBand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisXBand — vl_config_axisXBand","text":"","code":"vl_config_axisXBand(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXBand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisXBand — vl_config_axisXBand","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXBand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisXBand — vl_config_axisXBand","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXDiscrete.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisXDiscrete — vl_config_axisXDiscrete","title":"vl_config_axisXDiscrete — vl_config_axisXDiscrete","text":"Add axisXDiscrete config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXDiscrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisXDiscrete — vl_config_axisXDiscrete","text":"","code":"vl_config_axisXDiscrete(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXDiscrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisXDiscrete — vl_config_axisXDiscrete","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXDiscrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisXDiscrete — vl_config_axisXDiscrete","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXPoint.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisXPoint — vl_config_axisXPoint","title":"vl_config_axisXPoint — vl_config_axisXPoint","text":"Add axisXPoint config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXPoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisXPoint — vl_config_axisXPoint","text":"","code":"vl_config_axisXPoint(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXPoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisXPoint — vl_config_axisXPoint","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXPoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisXPoint — vl_config_axisXPoint","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXQuantitative.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisXQuantitative — vl_config_axisXQuantitative","title":"vl_config_axisXQuantitative — vl_config_axisXQuantitative","text":"Add axisXQuantitative config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXQuantitative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisXQuantitative — vl_config_axisXQuantitative","text":"","code":"vl_config_axisXQuantitative(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXQuantitative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisXQuantitative — vl_config_axisXQuantitative","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXQuantitative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisXQuantitative — vl_config_axisXQuantitative","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXTemporal.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisXTemporal — vl_config_axisXTemporal","title":"vl_config_axisXTemporal — vl_config_axisXTemporal","text":"Add axisXTemporal config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXTemporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisXTemporal — vl_config_axisXTemporal","text":"","code":"vl_config_axisXTemporal(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXTemporal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisXTemporal — vl_config_axisXTemporal","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisXTemporal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisXTemporal — vl_config_axisXTemporal","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisY.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisY — vl_config_axisY","title":"vl_config_axisY — vl_config_axisY","text":"Add axisY config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisY — vl_config_axisY","text":"","code":"vl_config_axisY(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisY — vl_config_axisY","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisY — vl_config_axisY","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYBand.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisYBand — vl_config_axisYBand","title":"vl_config_axisYBand — vl_config_axisYBand","text":"Add axisYBand config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYBand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisYBand — vl_config_axisYBand","text":"","code":"vl_config_axisYBand(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYBand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisYBand — vl_config_axisYBand","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYBand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisYBand — vl_config_axisYBand","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYDiscrete.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisYDiscrete — vl_config_axisYDiscrete","title":"vl_config_axisYDiscrete — vl_config_axisYDiscrete","text":"Add axisYDiscrete config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYDiscrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisYDiscrete — vl_config_axisYDiscrete","text":"","code":"vl_config_axisYDiscrete(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYDiscrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisYDiscrete — vl_config_axisYDiscrete","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYDiscrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisYDiscrete — vl_config_axisYDiscrete","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYPoint.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisYPoint — vl_config_axisYPoint","title":"vl_config_axisYPoint — vl_config_axisYPoint","text":"Add axisYPoint config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYPoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisYPoint — vl_config_axisYPoint","text":"","code":"vl_config_axisYPoint(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYPoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisYPoint — vl_config_axisYPoint","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYPoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisYPoint — vl_config_axisYPoint","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYQuantitative.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisYQuantitative — vl_config_axisYQuantitative","title":"vl_config_axisYQuantitative — vl_config_axisYQuantitative","text":"Add axisYQuantitative config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYQuantitative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisYQuantitative — vl_config_axisYQuantitative","text":"","code":"vl_config_axisYQuantitative(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYQuantitative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisYQuantitative — vl_config_axisYQuantitative","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYQuantitative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisYQuantitative — vl_config_axisYQuantitative","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYTemporal.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_axisYTemporal — vl_config_axisYTemporal","title":"vl_config_axisYTemporal — vl_config_axisYTemporal","text":"Add axisYTemporal config (AxisConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYTemporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_axisYTemporal — vl_config_axisYTemporal","text":"","code":"vl_config_axisYTemporal(   spec,   aria = NULL,   bandPosition = NULL,   description = NULL,   disable = NULL,   domain = NULL,   domainCap = NULL,   domainColor = NULL,   domainDash = NULL,   domainDashOffset = NULL,   domainOpacity = NULL,   domainWidth = NULL,   format = NULL,   formatType = NULL,   grid = NULL,   gridCap = NULL,   gridColor = NULL,   gridDash = NULL,   gridDashOffset = NULL,   gridOpacity = NULL,   gridWidth = NULL,   labelAlign = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelBound = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFlush = NULL,   labelFlushOffset = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   labels = NULL,   maxExtent = NULL,   minExtent = NULL,   offset = NULL,   orient = NULL,   position = NULL,   style = NULL,   tickBand = NULL,   tickCap = NULL,   tickColor = NULL,   tickCount = NULL,   tickDash = NULL,   tickDashOffset = NULL,   tickExtra = NULL,   tickMinStep = NULL,   tickOffset = NULL,   tickOpacity = NULL,   tickRound = NULL,   tickSize = NULL,   tickWidth = NULL,   ticks = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titlePadding = NULL,   titleX = NULL,   titleY = NULL,   translate = NULL,   values = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYTemporal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_axisYTemporal — vl_config_axisYTemporal","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing axis ARIA accessibility tree. Default value: true : ExprRef bandPosition interpolation fraction indicating , band scales, axis ticks positioned. value 0 places ticks left edge bands. value 0.5 places ticks middle bands. Default value: 0.5 : ExprRef description text description axis ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef disable Disable axis default. domain boolean flag indicating domain (axis baseline) included part axis. Default value: true domainCap stroke cap domain line's ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef domainColor Color axis domain line. Default value: \"gray\". : ExprRef domainDash array alternating [stroke, space] lengths dashed domain lines. : ExprRef domainDashOffset pixel offset start drawing domain dash array. : ExprRef domainOpacity Opacity axis domain line. : ExprRef domainWidth Stroke width axis domain line Default value: 1 : ExprRef format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. grid boolean flag indicating grid lines included part axis Default value: true continuous scales binned; otherwise, false. gridCap stroke cap grid lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef gridColor Color gridlines. Default value: \"lightGray\". : ExprRef : ConditionalAxisColor gridDash array alternating [stroke, space] lengths dashed grid lines. : ExprRef : ConditionalAxisNumberArray gridDashOffset pixel offset start drawing grid dash array. : ExprRef : ConditionalAxisNumber gridOpacity stroke opacity grid (value [0,1]) Default value: 1 : ExprRef : ConditionalAxisNumber gridWidth grid width, pixels. Default value: 1 : ExprRef : ConditionalAxisNumber labelAlign Horizontal text alignment axis tick labels, overriding default setting current axis orientation. : ExprRef : ConditionalAxisLabelAlign labelAngle rotation angle axis labels. Default value: -90 nominal ordinal fields; 0 otherwise. : ExprRef labelBaseline Vertical text baseline axis tick labels, overriding default setting current axis orientation. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef : ConditionalAxisLabelBaseline labelBound Indicates labels hidden exceed axis range. false (default) bounds overlap analysis performed. true, labels hidden exceed axis range 1 pixel. property number, specifies pixel tolerance: maximum amount label bounding box may exceed axis range. Default value: false. : ExprRef labelColor color tick label, can hex color code regular color name. : ExprRef : ConditionalAxisColor labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties axis's backing datum object. labelFlush Indicates first last axis labels aligned flush scale range. Flush alignment horizontal axis left-align first label right-align last label. vertical axes, bottom top text baselines applied instead. property number, also indicates number pixels offset first last labels; example, value 2 flush-align first last labels also push 2 pixels outward center axis. additional adjustment can sometimes help labels better visually group corresponding axis ticks. Default value: true axis continuous x-scale. Otherwise, false. labelFlushOffset Indicates number pixels offset flush-adjusted labels. example, value 2 push flush-adjusted labels 2 pixels outward center axis. Offsets can help labels better visually group corresponding axis ticks. Default value: 0. : ExprRef labelFont font tick label. : ExprRef : ConditionalAxisString labelFontSize font size label, pixels. : ExprRef : ConditionalAxisNumber labelFontStyle Font style title. : ExprRef : ConditionalAxisLabelFontStyle labelFontWeight Font weight axis tick labels. : ExprRef : ConditionalAxisLabelFontWeight labelLimit Maximum allowed pixel width axis tick labels. Default value: 180 : ExprRef labelLineHeight Line height pixels multi-line label text label text \"line-top\" \"line-bottom\" baseline. : ExprRef labelOffset Position offset pixels apply labels, addition tickOffset. Default value: 0 : ExprRef : ConditionalAxisNumber labelOpacity opacity labels. : ExprRef : ConditionalAxisNumber labelOverlap strategy use resolving overlap axis labels. false (default), overlap reduction attempted. set true \"parity\", strategy removing every label used (works well standard linear axes). set \"greedy\", linear scan labels performed, removing labels overlaps last visible label (often works better log-scaled axes). Default value: true non-nominal fields non-log scales; \"greedy\" log scales; otherwise false. labelPadding padding pixels labels ticks. Default value: 2 : ExprRef : ConditionalAxisNumber labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef labels boolean flag indicating labels included part axis. Default value: true. maxExtent maximum extent pixels axis ticks labels use. determines maximum offset value axis titles. Default value: undefined. : ExprRef minExtent minimum extent pixels axis ticks labels use. determines minimum offset value axis titles. Default value: 30 y-axis; undefined x-axis. : ExprRef offset offset, pixels, displace axis edge enclosing group data rectangle. Default value: derived axis config's offset (0 default) orient orientation axis. One \"top\", \"bottom\", \"left\" \"right\". orientation can used specialize axis type (e.g., y-axis oriented towards right edge chart). Default value: \"bottom\" x-axes \"left\" y-axes. position anchor position axis pixels. x-axes top bottom orientation, sets axis group x coordinate. y-axes left right orientation, sets axis group y coordinate. Default value: 0 style string array strings indicating name custom styles apply axis. style named collection axis property defined within style configuration. style array, later styles override earlier styles. Default value: (none) Note: specified style augment default style. example, x-axis mark \"style\": \"foo\" use config.axisX config.style.foo (specified style \"foo\" higher precedence). tickBand band scales, indicates ticks grid lines placed \"center\" band (default) band \"extent\"s indicate intervals : ExprRef tickCap stroke cap tick lines' ending style. One \"butt\", \"round\" \"square\". Default value: \"butt\" : ExprRef tickColor color axis's tick. Default value: \"gray\" : ExprRef : ConditionalAxisColor tickCount desired number ticks, axes visualizing quantitative scales. resulting number may different values \"nice\" (multiples 2, 5, 10) lie within underlying scale's range. scales type \"time\" \"utc\", tick count can instead time interval specifier. Legal string values \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\". Alternatively, object-valued interval specifier form {\"interval\": \"month\", \"step\": 3} includes desired number interval steps. , ticks generated quarter (Jan, Apr, Jul, Oct) boundary. Default value: Determine using formula ceil(width/40) x ceil(height/40) y. tickDash array alternating [stroke, space] lengths dashed tick mark lines. : ExprRef : ConditionalAxisNumberArray tickDashOffset pixel offset start drawing tick mark dash array. : ExprRef : ConditionalAxisNumber tickExtra Boolean flag indicating extra axis tick added initial position axis. flag useful styling axes band scales ticks placed band boundaries rather middle band. Use conjunction \"bandPosition\": 1 axis \"padding\" value 0. tickMinStep minimum desired step axis ticks, terms scale domain values. example, value 1 indicates ticks less 1 unit apart. tickMinStep specified, tickCount value adjusted, necessary, enforce minimum step value. tickOffset Position offset pixels apply ticks, labels, gridlines. : ExprRef tickOpacity Opacity ticks. : ExprRef : ConditionalAxisNumber tickRound Boolean flag indicating pixel position values rounded nearest integer. Default value: true tickSize size pixels axis ticks. Default value: 5 : ExprRef : ConditionalAxisNumber tickWidth width, pixels, ticks. Default value: 1 : ExprRef : ConditionalAxisNumber ticks Boolean value determines whether axis include ticks. Default value: true title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. titleAlign Horizontal text alignment axis titles. : ExprRef titleAnchor Text anchor position placing axis titles. : ExprRef titleAngle Angle degrees axis titles. : ExprRef titleBaseline Vertical text baseline axis titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. : ExprRef titleColor Color title, can hex color code regular color name. : ExprRef titleFont Font title. (e.g., \"Helvetica Neue\"). : ExprRef titleFontSize Font size title. : ExprRef titleFontStyle Font style title. : ExprRef titleFontWeight Font weight title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width axis titles. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity axis title. : ExprRef titlePadding padding, pixels, title axis. : ExprRef titleX X-coordinate axis title relative axis group. : ExprRef titleY Y-coordinate axis title relative axis group. : ExprRef translate Coordinate space translation offset axis layout. default, axes translated 0.5 pixel offset x y coordinates order align stroked lines pixel grid. However, vector graphics output pixel-specific adjustments may undesirable, case translate can changed (example, zero). Default value: 0.5 : ExprRef values Explicitly set visible axis tick values. zindex non-negative integer indicating z-index axis. zindex 0, axes drawn behind chart elements. put front, set zindex 1 . Default value: 0 (behind marks). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: AxisConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_axisYTemporal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_axisYTemporal — vl_config_axisYTemporal","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_bar — vl_config_bar","title":"vl_config_bar — vl_config_bar","text":"Add bar config (BarConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_bar — vl_config_bar","text":"","code":"vl_config_bar(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_bar — vl_config_bar","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BarConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_bar — vl_config_bar","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_boxplot — vl_config_boxplot","title":"vl_config_boxplot — vl_config_boxplot","text":"Add boxplot config (BoxPlotConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_boxplot — vl_config_boxplot","text":"","code":"vl_config_boxplot(   spec,   box = NULL,   extent = NULL,   median = NULL,   outliers = NULL,   rule = NULL,   size = NULL,   ticks = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_boxplot — vl_config_boxplot","text":"spec input vega-lite spec box boolean : MarkConfig extent extent whiskers. Available options include: \"min-max\": min max lower upper whiskers respectively. number representing multiple interquartile range. number multiplied IQR determine whisker boundary, spans smallest data largest data within range [Q1 - k * IQR, Q3 + k * IQR] Q1 Q3 first third quartiles IQR interquartile range (Q3-Q1). Default value: 1.5. median boolean : MarkConfig outliers boolean : MarkConfig rule boolean : MarkConfig size Size box median tick box plot ticks boolean : MarkConfig .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BoxPlotConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_boxplot — vl_config_boxplot","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_circle — vl_config_circle","title":"vl_config_circle — vl_config_circle","text":"Add circle config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_circle — vl_config_circle","text":"","code":"vl_config_circle(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_circle — vl_config_circle","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_circle — vl_config_circle","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_concat.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_concat — vl_config_concat","title":"vl_config_concat — vl_config_concat","text":"Add concat config (CompositionConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_concat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_concat — vl_config_concat","text":"","code":"vl_config_concat(spec, columns = NULL, spacing = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_concat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_concat — vl_config_concat","text":"spec input vega-lite spec columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). spacing default spacing pixels composed sub-views. Default value: 20 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: CompositionConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_concat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_concat — vl_config_concat","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorband.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_errorband — vl_config_errorband","title":"vl_config_errorband — vl_config_errorband","text":"Add errorband config (ErrorBandConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_errorband — vl_config_errorband","text":"","code":"vl_config_errorband(   spec,   band = NULL,   borders = NULL,   extent = NULL,   interpolate = NULL,   tension = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_errorband — vl_config_errorband","text":"spec input vega-lite spec band boolean : MarkConfig borders boolean : MarkConfig extent extent band. Available options include: \"ci\": Extend band confidence interval mean. \"stderr\": size band set value standard error, extending mean. \"stdev\": size band set value standard deviation, extending mean. \"iqr\": Extend band q1 q3. Default value: \"stderr\". interpolate line interpolation method error band. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": piecewise constant function (step function) consisting alternating horizontal vertical lines. y-value changes midpoint pair adjacent x-values. \"step-\": piecewise constant function (step function) consisting alternating horizontal vertical lines. y-value changes x-value. \"step-\": piecewise constant function (step function) consisting alternating horizontal vertical lines. y-value changes x-value. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. tension tension parameter interpolation type error band. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ErrorBandConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorband.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_errorband — vl_config_errorband","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorbar.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_errorbar — vl_config_errorbar","title":"vl_config_errorbar — vl_config_errorbar","text":"Add errorbar config (ErrorBarConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_errorbar — vl_config_errorbar","text":"","code":"vl_config_errorbar(   spec,   extent = NULL,   rule = NULL,   size = NULL,   thickness = NULL,   ticks = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_errorbar — vl_config_errorbar","text":"spec input vega-lite spec extent extent rule. Available options include: \"ci\": Extend rule confidence interval mean. \"stderr\": size rule set value standard error, extending mean. \"stdev\": size rule set value standard deviation, extending mean. \"iqr\": Extend rule q1 q3. Default value: \"stderr\". rule boolean : MarkConfig size Size ticks error bar thickness Thickness ticks bar error bar ticks boolean : MarkConfig .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ErrorBarConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_errorbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_errorbar — vl_config_errorbar","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_facet.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_facet — vl_config_facet","title":"vl_config_facet — vl_config_facet","text":"Add facet config (CompositionConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_facet — vl_config_facet","text":"","code":"vl_config_facet(spec, columns = NULL, spacing = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_facet — vl_config_facet","text":"spec input vega-lite spec columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). spacing default spacing pixels composed sub-views. Default value: 20 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: CompositionConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_facet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_facet — vl_config_facet","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_geoshape.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_geoshape — vl_config_geoshape","title":"vl_config_geoshape — vl_config_geoshape","text":"Add geoshape config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_geoshape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_geoshape — vl_config_geoshape","text":"","code":"vl_config_geoshape(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_geoshape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_geoshape — vl_config_geoshape","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_geoshape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_geoshape — vl_config_geoshape","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_header.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_header — vl_config_header","title":"vl_config_header — vl_config_header","text":"Add header config (HeaderConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_header — vl_config_header","text":"","code":"vl_config_header(   spec,   format = NULL,   formatType = NULL,   labelAlign = NULL,   labelAnchor = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOrient = NULL,   labelPadding = NULL,   labels = NULL,   orient = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOrient = NULL,   titlePadding = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_header — vl_config_header","text":"spec input vega-lite spec format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. labelAlign Horizontal text alignment header labels. One \"left\", \"center\", \"right\". labelAnchor anchor position placing labels. One \"start\", \"middle\", \"end\". example, label orientation top anchor positions map left-, center-, right-aligned label. labelAngle rotation angle header labels. Default value: 0 column header, -90 row header. labelBaseline vertical text baseline header labels. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. labelColor color header label, can hex color code regular color name. labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties header's backing datum object. labelFont font header label. labelFontSize font size header label, pixels. labelFontStyle font style header label. labelFontWeight font weight header label. labelLimit maximum length header label pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit labelLineHeight Line height pixels multi-line header labels title text \"line-top\" \"line-bottom\" baseline. labelOrient orientation header label. One \"top\", \"bottom\", \"left\" \"right\". labelPadding padding, pixel, facet header's label plot. Default value: 10 labels boolean flag indicating labels included part header. Default value: true. orient Shortcut setting labelOrient titleOrient. title Set null disable title axis, legend, header. titleAlign Horizontal text alignment (anchor) header titles. titleAnchor anchor position placing title. One \"start\", \"middle\", \"end\". example, orientation top anchor positions map left-, center-, right-aligned title. titleAngle rotation angle header title. Default value: 0. titleBaseline vertical text baseline header title. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. Default value: \"middle\" titleColor Color header title, can hex color code regular color name. titleFont Font header title. (e.g., \"Helvetica Neue\"). titleFontSize Font size header title. titleFontStyle font style header title. titleFontWeight Font weight header title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). titleLimit maximum length header title pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit titleLineHeight Line height pixels multi-line header title text title text \"line-top\" \"line-bottom\" baseline. titleOrient orientation header title. One \"top\", \"bottom\", \"left\" \"right\". titlePadding padding, pixel, facet header's title label. Default value: 10 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: HeaderConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_header — vl_config_header","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_headerColumn — vl_config_headerColumn","title":"vl_config_headerColumn — vl_config_headerColumn","text":"Add headerColumn config (HeaderConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_headerColumn — vl_config_headerColumn","text":"","code":"vl_config_headerColumn(   spec,   format = NULL,   formatType = NULL,   labelAlign = NULL,   labelAnchor = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOrient = NULL,   labelPadding = NULL,   labels = NULL,   orient = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOrient = NULL,   titlePadding = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_headerColumn — vl_config_headerColumn","text":"spec input vega-lite spec format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. labelAlign Horizontal text alignment header labels. One \"left\", \"center\", \"right\". labelAnchor anchor position placing labels. One \"start\", \"middle\", \"end\". example, label orientation top anchor positions map left-, center-, right-aligned label. labelAngle rotation angle header labels. Default value: 0 column header, -90 row header. labelBaseline vertical text baseline header labels. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. labelColor color header label, can hex color code regular color name. labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties header's backing datum object. labelFont font header label. labelFontSize font size header label, pixels. labelFontStyle font style header label. labelFontWeight font weight header label. labelLimit maximum length header label pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit labelLineHeight Line height pixels multi-line header labels title text \"line-top\" \"line-bottom\" baseline. labelOrient orientation header label. One \"top\", \"bottom\", \"left\" \"right\". labelPadding padding, pixel, facet header's label plot. Default value: 10 labels boolean flag indicating labels included part header. Default value: true. orient Shortcut setting labelOrient titleOrient. title Set null disable title axis, legend, header. titleAlign Horizontal text alignment (anchor) header titles. titleAnchor anchor position placing title. One \"start\", \"middle\", \"end\". example, orientation top anchor positions map left-, center-, right-aligned title. titleAngle rotation angle header title. Default value: 0. titleBaseline vertical text baseline header title. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. Default value: \"middle\" titleColor Color header title, can hex color code regular color name. titleFont Font header title. (e.g., \"Helvetica Neue\"). titleFontSize Font size header title. titleFontStyle font style header title. titleFontWeight Font weight header title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). titleLimit maximum length header title pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit titleLineHeight Line height pixels multi-line header title text title text \"line-top\" \"line-bottom\" baseline. titleOrient orientation header title. One \"top\", \"bottom\", \"left\" \"right\". titlePadding padding, pixel, facet header's title label. Default value: 10 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: HeaderConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_headerColumn — vl_config_headerColumn","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerFacet.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_headerFacet — vl_config_headerFacet","title":"vl_config_headerFacet — vl_config_headerFacet","text":"Add headerFacet config (HeaderConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerFacet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_headerFacet — vl_config_headerFacet","text":"","code":"vl_config_headerFacet(   spec,   format = NULL,   formatType = NULL,   labelAlign = NULL,   labelAnchor = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOrient = NULL,   labelPadding = NULL,   labels = NULL,   orient = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOrient = NULL,   titlePadding = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerFacet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_headerFacet — vl_config_headerFacet","text":"spec input vega-lite spec format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. labelAlign Horizontal text alignment header labels. One \"left\", \"center\", \"right\". labelAnchor anchor position placing labels. One \"start\", \"middle\", \"end\". example, label orientation top anchor positions map left-, center-, right-aligned label. labelAngle rotation angle header labels. Default value: 0 column header, -90 row header. labelBaseline vertical text baseline header labels. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. labelColor color header label, can hex color code regular color name. labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties header's backing datum object. labelFont font header label. labelFontSize font size header label, pixels. labelFontStyle font style header label. labelFontWeight font weight header label. labelLimit maximum length header label pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit labelLineHeight Line height pixels multi-line header labels title text \"line-top\" \"line-bottom\" baseline. labelOrient orientation header label. One \"top\", \"bottom\", \"left\" \"right\". labelPadding padding, pixel, facet header's label plot. Default value: 10 labels boolean flag indicating labels included part header. Default value: true. orient Shortcut setting labelOrient titleOrient. title Set null disable title axis, legend, header. titleAlign Horizontal text alignment (anchor) header titles. titleAnchor anchor position placing title. One \"start\", \"middle\", \"end\". example, orientation top anchor positions map left-, center-, right-aligned title. titleAngle rotation angle header title. Default value: 0. titleBaseline vertical text baseline header title. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. Default value: \"middle\" titleColor Color header title, can hex color code regular color name. titleFont Font header title. (e.g., \"Helvetica Neue\"). titleFontSize Font size header title. titleFontStyle font style header title. titleFontWeight Font weight header title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). titleLimit maximum length header title pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit titleLineHeight Line height pixels multi-line header title text title text \"line-top\" \"line-bottom\" baseline. titleOrient orientation header title. One \"top\", \"bottom\", \"left\" \"right\". titlePadding padding, pixel, facet header's title label. Default value: 10 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: HeaderConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerFacet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_headerFacet — vl_config_headerFacet","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerRow.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_headerRow — vl_config_headerRow","title":"vl_config_headerRow — vl_config_headerRow","text":"Add headerRow config (HeaderConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_headerRow — vl_config_headerRow","text":"","code":"vl_config_headerRow(   spec,   format = NULL,   formatType = NULL,   labelAlign = NULL,   labelAnchor = NULL,   labelAngle = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelExpr = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelLineHeight = NULL,   labelOrient = NULL,   labelPadding = NULL,   labels = NULL,   orient = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleAngle = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOrient = NULL,   titlePadding = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_headerRow — vl_config_headerRow","text":"spec input vega-lite spec format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. labelAlign Horizontal text alignment header labels. One \"left\", \"center\", \"right\". labelAnchor anchor position placing labels. One \"start\", \"middle\", \"end\". example, label orientation top anchor positions map left-, center-, right-aligned label. labelAngle rotation angle header labels. Default value: 0 column header, -90 row header. labelBaseline vertical text baseline header labels. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. labelColor color header label, can hex color code regular color name. labelExpr Vega expression customizing labels. Note: label text value can assessed via label value properties header's backing datum object. labelFont font header label. labelFontSize font size header label, pixels. labelFontStyle font style header label. labelFontWeight font weight header label. labelLimit maximum length header label pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit labelLineHeight Line height pixels multi-line header labels title text \"line-top\" \"line-bottom\" baseline. labelOrient orientation header label. One \"top\", \"bottom\", \"left\" \"right\". labelPadding padding, pixel, facet header's label plot. Default value: 10 labels boolean flag indicating labels included part header. Default value: true. orient Shortcut setting labelOrient titleOrient. title Set null disable title axis, legend, header. titleAlign Horizontal text alignment (anchor) header titles. titleAnchor anchor position placing title. One \"start\", \"middle\", \"end\". example, orientation top anchor positions map left-, center-, right-aligned title. titleAngle rotation angle header title. Default value: 0. titleBaseline vertical text baseline header title. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative titleLineHeight rather titleFontSize alone. Default value: \"middle\" titleColor Color header title, can hex color code regular color name. titleFont Font header title. (e.g., \"Helvetica Neue\"). titleFontSize Font size header title. titleFontStyle font style header title. titleFontWeight Font weight header title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). titleLimit maximum length header title pixels. text value automatically truncated rendered size exceeds limit. Default value: 0, indicating limit titleLineHeight Line height pixels multi-line header title text title text \"line-top\" \"line-bottom\" baseline. titleOrient orientation header title. One \"top\", \"bottom\", \"left\" \"right\". titlePadding padding, pixel, facet header's title label. Default value: 10 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: HeaderConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_headerRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_headerRow — vl_config_headerRow","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_image.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_image — vl_config_image","title":"vl_config_image — vl_config_image","text":"Add image config (RectConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_image — vl_config_image","text":"","code":"vl_config_image(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_image — vl_config_image","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: RectConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_image — vl_config_image","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_legend — vl_config_legend","title":"vl_config_legend — vl_config_legend","text":"Add legend config (LegendConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_legend — vl_config_legend","text":"","code":"vl_config_legend(   spec,   aria = NULL,   clipHeight = NULL,   columnPadding = NULL,   columns = NULL,   cornerRadius = NULL,   description = NULL,   direction = NULL,   disable = NULL,   fillColor = NULL,   gradientDirection = NULL,   gradientHorizontalMaxLength = NULL,   gradientHorizontalMinLength = NULL,   gradientLabelLimit = NULL,   gradientLabelOffset = NULL,   gradientLength = NULL,   gradientOpacity = NULL,   gradientStrokeColor = NULL,   gradientStrokeWidth = NULL,   gradientThickness = NULL,   gradientVerticalMaxLength = NULL,   gradientVerticalMinLength = NULL,   gridAlign = NULL,   labelAlign = NULL,   labelBaseline = NULL,   labelColor = NULL,   labelFont = NULL,   labelFontSize = NULL,   labelFontStyle = NULL,   labelFontWeight = NULL,   labelLimit = NULL,   labelOffset = NULL,   labelOpacity = NULL,   labelOverlap = NULL,   labelPadding = NULL,   labelSeparation = NULL,   layout = NULL,   legendX = NULL,   legendY = NULL,   offset = NULL,   orient = NULL,   padding = NULL,   rowPadding = NULL,   strokeColor = NULL,   strokeDash = NULL,   strokeWidth = NULL,   symbolBaseFillColor = NULL,   symbolBaseStrokeColor = NULL,   symbolDash = NULL,   symbolDashOffset = NULL,   symbolDirection = NULL,   symbolFillColor = NULL,   symbolLimit = NULL,   symbolOffset = NULL,   symbolOpacity = NULL,   symbolSize = NULL,   symbolStrokeColor = NULL,   symbolStrokeWidth = NULL,   symbolType = NULL,   tickCount = NULL,   title = NULL,   titleAlign = NULL,   titleAnchor = NULL,   titleBaseline = NULL,   titleColor = NULL,   titleFont = NULL,   titleFontSize = NULL,   titleFontStyle = NULL,   titleFontWeight = NULL,   titleLimit = NULL,   titleLineHeight = NULL,   titleOpacity = NULL,   titleOrient = NULL,   titlePadding = NULL,   unselectedOpacity = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_legend — vl_config_legend","text":"spec input vega-lite spec aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing legend ARIA accessibility tree. Default value: true : ExprRef clipHeight height pixels clip symbol legend entries limit size. : ExprRef columnPadding horizontal padding pixels symbol legend entries. Default value: 10. : ExprRef columns number columns arrange symbol legend entries. value 0 lower indicates single row one column per entry. : ExprRef cornerRadius Corner radius full legend. : ExprRef description text description legend ARIA accessibility (SVG output ). aria property true, SVG output \"aria-label\" attribute set description. description unspecified automatically generated. : ExprRef direction direction legend, one \"vertical\" \"horizontal\". Default value: top-/bottom-oriented legends, \"horizontal\" left-/right-oriented legends, \"vertical\" top/bottom-left/right-oriented legends, \"horizontal\" gradient legends \"vertical\" symbol legends. disable Disable legend default fillColor Background fill color full legend. : ExprRef gradientDirection default direction (\"horizontal\" \"vertical\") gradient legends. Default value: \"vertical\". : ExprRef gradientHorizontalMaxLength Max legend length horizontal gradient config.legend.gradientLength undefined. Default value: 200 gradientHorizontalMinLength Min legend length horizontal gradient config.legend.gradientLength undefined. Default value: 100 gradientLabelLimit maximum allowed length pixels color ramp gradient labels. : ExprRef gradientLabelOffset Vertical offset pixels color ramp gradient labels. Default value: 2. : ExprRef gradientLength length pixels primary axis color gradient. value corresponds height vertical gradient width horizontal gradient. Default value: 200. : ExprRef gradientOpacity Opacity color gradient. : ExprRef gradientStrokeColor color gradient stroke, can hex color code regular color name. Default value: \"lightGray\". : ExprRef gradientStrokeWidth width gradient stroke, pixels. Default value: 0. : ExprRef gradientThickness thickness pixels color gradient. value corresponds width vertical gradient height horizontal gradient. Default value: 16. : ExprRef gradientVerticalMaxLength Max legend length vertical gradient config.legend.gradientLength undefined. Default value: 200 gradientVerticalMinLength Min legend length vertical gradient config.legend.gradientLength undefined. Default value: 100 gridAlign alignment apply symbol legends rows columns. supported string values \"\", \"\" (default), none. information, see grid layout documentation. Default value: \"\". : ExprRef labelAlign alignment legend label, can left, center, right. : ExprRef labelBaseline position baseline legend label, can \"top\", \"middle\", \"bottom\", \"alphabetic\". Default value: \"middle\". : ExprRef labelColor color legend label, can hex color code regular color name. : ExprRef labelFont font legend label. : ExprRef labelFontSize font size legend label. Default value: 10. : ExprRef labelFontStyle font style legend label. : ExprRef labelFontWeight font weight legend label. : ExprRef labelLimit Maximum allowed pixel width legend tick labels. Default value: 160. : ExprRef labelOffset offset legend label. : ExprRef labelOpacity Opacity labels. : ExprRef labelOverlap strategy use resolving overlap labels gradient legends. false, overlap reduction attempted. set true \"parity\", strategy removing every label used. set \"greedy\", linear scan labels performed, removing label overlaps last visible label (often works better log-scaled axes). Default value: \"greedy\" log scales otherwise true`. labelPadding Padding pixels legend legend labels. : ExprRef labelSeparation minimum separation must label bounding boxes considered non-overlapping (default 0). property ignored labelOverlap resolution enabled. : ExprRef layout ExprRef legendX Custom x-position legend orient \"none\". : ExprRef legendY Custom y-position legend orient \"none\". : ExprRef offset offset pixels displace legend data rectangle axes. Default value: 18. : ExprRef orient orientation legend, determines legend positioned within scene. One \"left\", \"right\", \"top\", \"bottom\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\", \"none\". Default value: \"right\" padding padding border content legend group. Default value: 0. : ExprRef rowPadding vertical padding pixels symbol legend entries. Default value: 2. : ExprRef strokeColor Border stroke color full legend. : ExprRef strokeDash Border stroke dash pattern full legend. : ExprRef strokeWidth Border stroke width full legend. : ExprRef symbolBaseFillColor Default fill color legend symbols. applied \"fill\" scale color encoding legend. Default value: \"transparent\". : ExprRef symbolBaseStrokeColor Default stroke color legend symbols. applied \"fill\" scale color encoding legend. Default value: \"gray\". : ExprRef symbolDash array alternating [stroke, space] lengths dashed symbol strokes. : ExprRef symbolDashOffset pixel offset start drawing symbol stroke dash array. : ExprRef symbolDirection default direction (\"horizontal\" \"vertical\") symbol legends. Default value: \"vertical\". : ExprRef symbolFillColor color legend symbol, : ExprRef symbolLimit maximum number allowed entries symbol legend. Additional entries dropped. : ExprRef symbolOffset Horizontal pixel offset legend symbols. Default value: 0. : ExprRef symbolOpacity Opacity legend symbols. : ExprRef symbolSize size legend symbol, pixels. Default value: 100. : ExprRef symbolStrokeColor Stroke color legend symbols. : ExprRef symbolStrokeWidth width symbol's stroke. Default value: 1.5. : ExprRef symbolType symbol shape. One plotting shapes circle (default), square, cross, diamond, triangle-, triangle-, triangle-right, triangle-left, line symbol stroke, one centered directional shapes arrow, wedge, triangle. Alternatively, custom SVG path string can provided. correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions. Default value: \"circle\". : ExprRef tickCount desired number tick values quantitative legends. : ExprRef title Set null disable title axis, legend, header. titleAlign Horizontal text alignment legend titles. Default value: \"left\". : ExprRef titleAnchor Text anchor position placing legend titles. : ExprRef titleBaseline Vertical text baseline legend titles. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. Default value: \"top\". : ExprRef titleColor color legend title, can hex color code regular color name. : ExprRef titleFont font legend title. : ExprRef titleFontSize font size legend title. : ExprRef titleFontStyle font style legend title. : ExprRef titleFontWeight font weight legend title. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef titleLimit Maximum allowed pixel width legend titles. Default value: 180. : ExprRef titleLineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef titleOpacity Opacity legend title. : ExprRef titleOrient Orientation legend title. : ExprRef titlePadding padding, pixels, title legend. Default value: 5. : ExprRef unselectedOpacity opacity unselected legend entries. Default value: 0.35. zindex integer z-index indicating layering legend group relative axis, mark, legend groups. : ExprRef .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LegendConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_legend — vl_config_legend","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_line.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_line — vl_config_line","title":"vl_config_line — vl_config_line","text":"Add line config (LineConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_line — vl_config_line","text":"","code":"vl_config_line(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_line — vl_config_line","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LineConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_line — vl_config_line","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_mark — vl_config_mark","title":"vl_config_mark — vl_config_mark","text":"Add mark config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_mark — vl_config_mark","text":"","code":"vl_config_mark(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_mark — vl_config_mark","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_mark — vl_config_mark","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_point.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_point — vl_config_point","title":"vl_config_point — vl_config_point","text":"Add point config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_point — vl_config_point","text":"","code":"vl_config_point(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_point — vl_config_point","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_point — vl_config_point","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_projection — vl_config_projection","title":"vl_config_projection — vl_config_projection","text":"Add projection config (ProjectionConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_projection — vl_config_projection","text":"","code":"vl_config_projection(   spec,   center = NULL,   clipAngle = NULL,   clipExtent = NULL,   coefficient = NULL,   distance = NULL,   extent = NULL,   fit = NULL,   fraction = NULL,   lobes = NULL,   parallel = NULL,   parallels = NULL,   pointRadius = NULL,   precision = NULL,   radius = NULL,   ratio = NULL,   reflectX = NULL,   reflectY = NULL,   rotate = NULL,   scale = NULL,   size = NULL,   spacing = NULL,   tilt = NULL,   translate = NULL,   type = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_projection — vl_config_projection","text":"spec input vega-lite spec center projection's center, two-element array longitude latitude degrees. Default value: [0, 0] : ExprRef clipAngle projection's clipping circle radius specified angle degrees. null, switches antimeridian cutting rather small-circle clipping. : ExprRef clipExtent projection's viewport clip extent specified bounds pixels. extent bounds specified array [\\[x0, y0\\], \\[x1, y1\\]], x0 left-side viewport, y0 top, x1 right y1 bottom. null, viewport clipping performed. : ExprRef coefficient coefficient parameter hammer projection. Default value: 2 : ExprRef distance satellite projection, distance center sphere point view, proportion sphere’s radius. recommended maximum clip angle given distance acos(1 / distance) converted degrees. tilt also applied, conservative clipping may necessary. Default value: 2.0 : ExprRef extent Vector2<Vector2<number>> : ExprRef fit array : ExprRef fraction fraction parameter bottomley projection. Default value: 0.5, corresponding sin(ψ) ψ = π/6. : ExprRef lobes number lobes projections support multi-lobe views: berghaus, gingery, healpix. default value varies based projection type. : ExprRef parallel parallel parameter projections support : armadillo, bonne, craig, cylindricalEqualArea, cylindricalStereographic, hammerRetroazimuthal, loximuthal, rectangularPolyconic. default value varies based projection type. : ExprRef parallels conic projections, two standard parallels define map layout. default depends specific conic projection used. : ExprRef pointRadius default radius (pixels) use drawing GeoJSON Point MultiPoint geometries. parameter sets constant default value. modify point radius response data, see corresponding parameter GeoPath GeoShape transforms. Default value: 4.5 : ExprRef precision threshold projection's adaptive resampling specified value pixels. value corresponds Douglas–Peucker distance. precision specified, returns projection's current resampling precision defaults √0.5 ≅ 0.70710…. : ExprRef radius radius parameter airy gingery projection. default value varies based projection type. : ExprRef ratio ratio parameter hill, hufnagel, wagner projections. default value varies based projection type. : ExprRef reflectX Sets whether x-dimension reflected (negated) output. : ExprRef reflectY Sets whether y-dimension reflected (negated) output. : ExprRef rotate projection's three-axis rotation specified angles, must two- three-element array numbers [lambda, phi, gamma] specifying rotation angles degrees spherical axis. (correspond yaw, pitch roll.) Default value: [0, 0, 0] : ExprRef scale projection’s scale (zoom) factor, overriding automatic fitting. default scale projection-specific. scale factor corresponds linearly distance projected points; however, scale factor values equivalent across projections. size Used conjunction fit, provides width height pixels area projection automatically fit. : ExprRef spacing spacing parameter lagrange projection. Default value: 0.5 : ExprRef tilt tilt angle (degrees) satellite projection. Default value: 0. : ExprRef translate projection’s translation offset two-element array [tx, ty]. type cartographic projection use. value case-insensitive, example \"albers\" \"Albers\" indicate projection type. can find valid projection types documentation. Default value: equalEarth .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: Projection","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_projection — vl_config_projection","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_range.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_range — vl_config_range","title":"vl_config_range — vl_config_range","text":"Add range config (RangeConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_range — vl_config_range","text":"","code":"vl_config_range(   spec,   category = NULL,   diverging = NULL,   heatmap = NULL,   ordinal = NULL,   ramp = NULL,   symbol = NULL,   .object = NULL,   ... )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_range — vl_config_range","text":"spec input vega-lite spec category Default color scheme categorical data. diverging Default color scheme diverging quantitative ramps. heatmap Default color scheme quantitative heatmaps. ordinal Default color scheme rank-ordered data. ramp Default color scheme sequential quantitative ramps. symbol Array symbol names paths default shape palette. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: RangeConfig ... Additional elements constructing object.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_range — vl_config_range","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_rect — vl_config_rect","title":"vl_config_rect — vl_config_rect","text":"Add rect config (RectConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_rect — vl_config_rect","text":"","code":"vl_config_rect(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_rect — vl_config_rect","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: RectConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_rect — vl_config_rect","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_rule — vl_config_rule","title":"vl_config_rule — vl_config_rule","text":"Add rule config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_rule — vl_config_rule","text":"","code":"vl_config_rule(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_rule — vl_config_rule","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_rule — vl_config_rule","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_scale — vl_config_scale","title":"vl_config_scale — vl_config_scale","text":"Add scale config (ScaleConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_scale — vl_config_scale","text":"","code":"vl_config_scale(   spec,   bandPaddingInner = NULL,   bandPaddingOuter = NULL,   barBandPaddingInner = NULL,   clamp = NULL,   continuousPadding = NULL,   maxBandSize = NULL,   maxFontSize = NULL,   maxOpacity = NULL,   maxSize = NULL,   maxStrokeWidth = NULL,   minBandSize = NULL,   minFontSize = NULL,   minOpacity = NULL,   minSize = NULL,   minStrokeWidth = NULL,   pointPadding = NULL,   quantileCount = NULL,   quantizeCount = NULL,   rectBandPaddingInner = NULL,   round = NULL,   useUnaggregatedDomain = NULL,   xReverse = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_scale — vl_config_scale","text":"spec input vega-lite spec bandPaddingInner Default inner padding x y band-ordinal scales. Default value: barBandPaddingInner bar marks (0.1 default) rectBandPaddingInner rect marks (0 default) bandPaddingOuter Default outer padding x y band-ordinal scales. Default value: paddingInner/2 (makes width/height = number unique values * step) barBandPaddingInner Default inner padding x y band-ordinal scales \"bar\" marks. Default value: 0.1 clamp true, values exceed data domain clamped either minimum maximum range value continuousPadding Default padding continuous scales. Default: 5 continuous x-scale vertical bar continuous y-scale horizontal bar.; 0 otherwise. maxBandSize default max value mapping quantitative fields bar's size/bandSize. undefined (default), use axis's size (width height) - 1. maxFontSize default max value mapping quantitative fields text's size/fontSize. Default value: 40 maxOpacity Default max opacity mapping field opacity. Default value: 0.8 maxSize Default max value point size scale. maxStrokeWidth Default max strokeWidth scale strokeWidth rule line marks size trail marks. Default value: 4 minBandSize default min value mapping quantitative fields bar tick's size/bandSize scale zero=false. Default value: 2 minFontSize default min value mapping quantitative fields tick's size/fontSize scale zero=false Default value: 8 minOpacity Default minimum opacity mapping field opacity. Default value: 0.3 minSize Default minimum value point size scale zero=false. Default value: 9 minStrokeWidth Default minimum strokeWidth scale strokeWidth rule line marks size trail marks zero=false. Default value: 1 pointPadding Default outer padding x y point-ordinal scales. Default value: 0.5 (makes width/height = number unique values * step) quantileCount Default range cardinality quantile scale. Default value: 4 quantizeCount Default range cardinality quantize scale. Default value: 4 rectBandPaddingInner Default inner padding x y band-ordinal scales \"rect\" marks. Default value: 0 round true, rounds numeric output values integers. can helpful snapping pixel grid. (available x, y, size scales.) useUnaggregatedDomain Use source data range aggregation scale domain instead aggregated data aggregate axis. equivalent setting domain \"unaggregate\" aggregated quantitative fields default. property works aggregate functions produce values within raw data domain (\"mean\", \"average\", \"median\", \"q1\", \"q3\", \"min\", \"max\"). aggregations produce values outside raw data domain (e.g. \"count\", \"sum\"), property ignored. Default value: false xReverse Reverse x-scale default (useful right--left charts). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ScaleConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_scale — vl_config_scale","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_selection — vl_config_selection","title":"vl_config_selection — vl_config_selection","text":"Add selection config (SelectionConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_selection — vl_config_selection","text":"","code":"vl_config_selection(spec, interval = NULL, point = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_selection — vl_config_selection","text":"spec input vega-lite spec interval default definition interval selection. properties transformations interval selection definition (except type) may specified . instance, setting interval {\"translate\": false} disables ability move interval selections default. point default definition point selection. properties transformations point selection definition (except type) may specified . instance, setting point {\"\": \"dblclick\"} populates point selections double-click default. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SelectionConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_selection — vl_config_selection","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_square.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_square — vl_config_square","title":"vl_config_square — vl_config_square","text":"Add square config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_square — vl_config_square","text":"","code":"vl_config_square(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_square — vl_config_square","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_square.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_square — vl_config_square","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_text.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_text — vl_config_text","title":"vl_config_text — vl_config_text","text":"Add text config (MarkConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_text — vl_config_text","text":"","code":"vl_config_text(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_text — vl_config_text","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_text — vl_config_text","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_tick.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_tick — vl_config_tick","title":"vl_config_tick — vl_config_tick","text":"Add tick config (TickConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_tick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_tick — vl_config_tick","text":"","code":"vl_config_tick(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_tick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_tick — vl_config_tick","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: TickConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_tick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_tick — vl_config_tick","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_title.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_title — vl_config_title","title":"vl_config_title — vl_config_title","text":"Add title config (TitleConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_title — vl_config_title","text":"","code":"vl_config_title(   spec,   align = NULL,   anchor = NULL,   angle = NULL,   aria = NULL,   baseline = NULL,   color = NULL,   dx = NULL,   dy = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   frame = NULL,   limit = NULL,   lineHeight = NULL,   offset = NULL,   orient = NULL,   subtitleColor = NULL,   subtitleFont = NULL,   subtitleFontSize = NULL,   subtitleFontStyle = NULL,   subtitleFontWeight = NULL,   subtitleLineHeight = NULL,   subtitlePadding = NULL,   zindex = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_title — vl_config_title","text":"spec input vega-lite spec align Horizontal text alignment title text. One \"left\", \"center\", \"right\". anchor anchor position placing title subtitle text. One \"start\", \"middle\", \"end\". example, orientation top anchor positions map left-, center-, right-aligned title. : ExprRef angle Angle degrees title subtitle text. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG group, removing title ARIA accessibility tree. Default value: true : ExprRef baseline Vertical text baseline title subtitle text. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\". \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. color Text color title text. : ExprRef dx Delta offset title subtitle text x-coordinate. : ExprRef dy Delta offset title subtitle text y-coordinate. : ExprRef font Font name title text. : ExprRef fontSize Font size pixels title text. : ExprRef fontStyle Font style title text. : ExprRef fontWeight Font weight title text. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef frame reference frame anchor position, one \"bounds\" (anchor relative full bounding box) \"group\" (anchor relative group width height). : ExprRef limit maximum allowed length pixels title subtitle text. : ExprRef lineHeight Line height pixels multi-line title text title text \"line-top\" \"line-bottom\" baseline. : ExprRef offset orthogonal offset pixels displace title group position along edge chart. : ExprRef orient Default title orientation (\"top\", \"bottom\", \"left\", \"right\") : ExprRef subtitleColor Text color subtitle text. : ExprRef subtitleFont Font name subtitle text. : ExprRef subtitleFontSize Font size pixels subtitle text. : ExprRef subtitleFontStyle Font style subtitle text. : ExprRef subtitleFontWeight Font weight subtitle text. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef subtitleLineHeight Line height pixels multi-line subtitle text. : ExprRef subtitlePadding padding pixels title subtitle text. : ExprRef zindex integer z-index indicating layering title group relative axis, mark, legend groups. Default value: 0. : ExprRef .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BaseTitleNoValueRefs","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_title — vl_config_title","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_trail.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_trail — vl_config_trail","title":"vl_config_trail — vl_config_trail","text":"Add trail config (LineConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_trail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_trail — vl_config_trail","text":"","code":"vl_config_trail(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   baseline = NULL,   blend = NULL,   color = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   endAngle = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   startAngle = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   y = NULL,   y2 = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_trail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_trail — vl_config_trail","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef endAngle end angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. : ExprRef href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef startAngle start angle radians arc marks. value 0 indicates (north), increasing values proceed clockwise. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. : ExprRef x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LineConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_trail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_trail — vl_config_trail","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_view.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_config_view — vl_config_view","title":"vl_config_view — vl_config_view","text":"Add view config (ViewConfig) vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_config_view — vl_config_view","text":"","code":"vl_config_view(   spec,   clip = NULL,   continuousHeight = NULL,   continuousWidth = NULL,   cornerRadius = NULL,   cursor = NULL,   discreteHeight = NULL,   discreteWidth = NULL,   fill = NULL,   fillOpacity = NULL,   opacity = NULL,   step = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_config_view — vl_config_view","text":"spec input vega-lite spec clip Whether view clipped. continuousHeight default height plot continuous y-field x latitude, arc marks. Default value: 200 continuousWidth default width plot continuous field x longitude, arc marks. Default value: 200 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cursor mouse cursor used view. valid CSS cursor type can used. discreteHeight default height plot non arc marks either discrete y-field y-field. height can either number indicating fixed height object form {step: number} defining height per discrete step. Default value: step size based config.view.step. discreteWidth default width plot non-arc marks either discrete x-field x-field. width can either number indicating fixed width object form {step: number} defining width per discrete step. Default value: step size based config.view.step. fill fill color. Default value: undefined fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. step Default step size x-/y- discrete fields. stroke stroke color. Default value: \"#ddd\" strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ViewConfig","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_config_view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_config_view — vl_config_view","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_density.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_density — vl_density","title":"vl_density — vl_density","text":"Add DensityTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_density — vl_density","text":"","code":"vl_density(   spec,   density = NULL,   as = NULL,   bandwidth = NULL,   counts = NULL,   cumulative = NULL,   extent = NULL,   groupby = NULL,   maxsteps = NULL,   minsteps = NULL,   steps = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_density — vl_density","text":"spec input vega-lite spec density data field perform density estimation. output fields sample value corresponding density estimate. Default value: [\"value\", \"density\"] bandwidth bandwidth (standard deviation) Gaussian kernel. unspecified set zero, bandwidth value automatically estimated input data using Scott’s rule. counts boolean flag indicating output values probability estimates (false) smoothed counts (true). Default value: false cumulative boolean flag indicating whether produce density estimates (false) cumulative density estimates (true). Default value: false extent [min, max] domain sample distribution. unspecified, extent determined observed minimum maximum values density value field. groupby data fields group . specified, single group containing data objects used. maxsteps maximum number samples take along extent domain plotting density. Default value: 200 minsteps minimum number samples take along extent domain plotting density. Default value: 25 steps exact number samples take along extent domain plotting density. specified, overrides minsteps maxsteps set exact number uniform samples. Potentially useful conjunction fixed extent ensure consistent sample points stacked densities. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: DensityTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_density — vl_density","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode — vl_encode","title":"vl_encode — vl_encode","text":"Add encodings spec. one way add encodings... encoding can also added using vl_encode_<name> <name> name encoding.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode — vl_encode","text":"","code":"vl_encode(spec, ...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode — vl_encode","text":"spec vegalite spec ... encodings add. encoding list. See example.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode — vl_encode","text":"modified vegalite spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vl_encode — vl_encode","text":"","code":"vl_chart() %>%   vl_add_data(values = mtcars) %>%   vl_mark_point() %>%   vl_encode(     x = \"wt:Q\",     y = \"mpg:Q\"   )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_angle — vl_encode_angle","title":"vl_encode_angle — vl_encode_angle","text":"Add encoding angle vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_angle — vl_encode_angle","text":"","code":"vl_encode_angle(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_angle — vl_encode_angle","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number>, FieldOrDatumDefWithCondition<DatumDef,number> ValueDefWithCondition<MarkPropFieldOrDatumDef,number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_angle — vl_encode_angle","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_color.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_color — vl_encode_color","title":"vl_encode_color — vl_encode_color","text":"Add encoding color vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_color — vl_encode_color","text":"","code":"vl_encode_color(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_color — vl_encode_color","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,(Gradient|string|null)>, FieldOrDatumDefWithCondition<DatumDef,(Gradient|string|null)> ValueDefWithCondition<MarkPropFieldOrDatumDef,(Gradient|string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_color — vl_encode_color","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_column.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_column — vl_encode_column","title":"vl_encode_column — vl_encode_column","text":"Add faceting column vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_column — vl_encode_column","text":"","code":"vl_encode_column(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   align = NULL,   bandPosition = NULL,   bin = NULL,   bounds = NULL,   center = NULL,   columns = NULL,   header = NULL,   sort = NULL,   spacing = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_column — vl_encode_column","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. align alignment apply grid rows columns. supported string values \"\", \"\", \"none\". \"none\", flow layout used, adjacent subviews simply placed one . \"\", subviews aligned clean grid structure, row column may variable size. \"\", subviews aligned row column sized identically based maximum observed size. String values property applied grid rows columns. Alternatively, object value form {\"row\": string, \"column\": string} can used supply different alignments rows columns. Default value: \"\". bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. bounds bounds calculation method use determining extent sub-plot. One full (default) flush. set full, entire calculated bounds (including axes, title, legend) used. set flush, specified width height values sub-view used. flush setting can useful attempting place sub-plots without axes legends uniform grid structure. Default value: \"full\" center Boolean flag indicating subviews centered relative respective rows columns. object value form {\"row\": boolean, \"column\": boolean} can used supply different centering values rows columns. Default value: false columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). header object defining properties facet's header. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null supported row column. spacing spacing pixels sub-views composition operator. object form {\"row\": number, \"column\": number} can used set different spacing values rows columns. Default value: Depends \"spacing\" property view composition configuration (20 default) timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FacetEncodingFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_column — vl_encode_column","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_description.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_description — vl_encode_description","title":"vl_encode_description — vl_encode_description","text":"Add encoding description vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_description — vl_encode_description","text":"","code":"vl_encode_description(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   format = NULL,   formatType = NULL,   timeUnit = NULL,   title = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_description — vl_encode_description","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<StringFieldDef,string> ValueDefWithCondition<MarkPropFieldOrDatumDef,(string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_description — vl_encode_description","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_detail — vl_encode_detail","title":"vl_encode_detail — vl_encode_detail","text":"Add encoding detail vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_detail — vl_encode_detail","text":"","code":"vl_encode_detail(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_detail — vl_encode_detail","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: TypedFieldDef array FieldDefWithoutScale","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_detail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_detail — vl_encode_detail","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_facet.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_facet — vl_encode_facet","title":"vl_encode_facet — vl_encode_facet","text":"Add faceting facet vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_facet — vl_encode_facet","text":"","code":"vl_encode_facet(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   align = NULL,   bandPosition = NULL,   bin = NULL,   bounds = NULL,   center = NULL,   columns = NULL,   header = NULL,   sort = NULL,   spacing = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_facet — vl_encode_facet","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. align alignment apply grid rows columns. supported string values \"\", \"\", \"none\". \"none\", flow layout used, adjacent subviews simply placed one . \"\", subviews aligned clean grid structure, row column may variable size. \"\", subviews aligned row column sized identically based maximum observed size. String values property applied grid rows columns. Alternatively, object value form {\"row\": string, \"column\": string} can used supply different alignments rows columns. Default value: \"\". bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. bounds bounds calculation method use determining extent sub-plot. One full (default) flush. set full, entire calculated bounds (including axes, title, legend) used. set flush, specified width height values sub-view used. flush setting can useful attempting place sub-plots without axes legends uniform grid structure. Default value: \"full\" center Boolean flag indicating subviews centered relative respective rows columns. object value form {\"row\": boolean, \"column\": boolean} can used supply different centering values rows columns. Default value: false columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). header object defining properties facet's header. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null supported row column. spacing spacing pixels sub-views composition operator. object form {\"row\": number, \"column\": number} can used set different spacing values rows columns. Default value: Depends \"spacing\" property view composition configuration (20 default) timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FacetEncodingFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_facet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_facet — vl_encode_facet","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_fill — vl_encode_fill","title":"vl_encode_fill — vl_encode_fill","text":"Add encoding fill vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_fill — vl_encode_fill","text":"","code":"vl_encode_fill(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_fill — vl_encode_fill","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,(Gradient|string|null)>, FieldOrDatumDefWithCondition<DatumDef,(Gradient|string|null)> ValueDefWithCondition<MarkPropFieldOrDatumDef,(Gradient|string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_fill — vl_encode_fill","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fillOpacity.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_fillOpacity — vl_encode_fillOpacity","title":"vl_encode_fillOpacity — vl_encode_fillOpacity","text":"Add encoding fillOpacity vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fillOpacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_fillOpacity — vl_encode_fillOpacity","text":"","code":"vl_encode_fillOpacity(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fillOpacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_fillOpacity — vl_encode_fillOpacity","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number>, FieldOrDatumDefWithCondition<DatumDef,number> ValueDefWithCondition<MarkPropFieldOrDatumDef,number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_fillOpacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_fillOpacity — vl_encode_fillOpacity","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_href.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_href — vl_encode_href","title":"vl_encode_href — vl_encode_href","text":"Add encoding href vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_href.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_href — vl_encode_href","text":"","code":"vl_encode_href(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   format = NULL,   formatType = NULL,   timeUnit = NULL,   title = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_href.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_href — vl_encode_href","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<StringFieldDef,string> ValueDefWithCondition<MarkPropFieldOrDatumDef,(string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_href.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_href — vl_encode_href","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_key.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_key — vl_encode_key","title":"vl_encode_key — vl_encode_key","text":"Add encoding key vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_key — vl_encode_key","text":"","code":"vl_encode_key(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_key — vl_encode_key","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: TypedFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_key — vl_encode_key","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_latitude — vl_encode_latitude","title":"vl_encode_latitude — vl_encode_latitude","text":"Add encoding latitude vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_latitude — vl_encode_latitude","text":"","code":"vl_encode_latitude(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_latitude — vl_encode_latitude","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LatLongFieldDef DatumDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_latitude — vl_encode_latitude","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_latitude2 — vl_encode_latitude2","title":"vl_encode_latitude2 — vl_encode_latitude2","text":"Add encoding latitude2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_latitude2 — vl_encode_latitude2","text":"","code":"vl_encode_latitude2(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_latitude2 — vl_encode_latitude2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef, DatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_latitude2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_latitude2 — vl_encode_latitude2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_longitude — vl_encode_longitude","title":"vl_encode_longitude — vl_encode_longitude","text":"Add encoding longitude vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_longitude — vl_encode_longitude","text":"","code":"vl_encode_longitude(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_longitude — vl_encode_longitude","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LatLongFieldDef DatumDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_longitude — vl_encode_longitude","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_longitude2 — vl_encode_longitude2","title":"vl_encode_longitude2 — vl_encode_longitude2","text":"Add encoding longitude2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_longitude2 — vl_encode_longitude2","text":"","code":"vl_encode_longitude2(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_longitude2 — vl_encode_longitude2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef, DatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_longitude2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_longitude2 — vl_encode_longitude2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_opacity.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_opacity — vl_encode_opacity","title":"vl_encode_opacity — vl_encode_opacity","text":"Add encoding opacity vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_opacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_opacity — vl_encode_opacity","text":"","code":"vl_encode_opacity(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_opacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_opacity — vl_encode_opacity","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number>, FieldOrDatumDefWithCondition<DatumDef,number> ValueDefWithCondition<MarkPropFieldOrDatumDef,number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_opacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_opacity — vl_encode_opacity","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_order.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_order — vl_encode_order","title":"vl_encode_order — vl_encode_order","text":"Add encoding order vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_order — vl_encode_order","text":"","code":"vl_encode_order(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   condition = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_order — vl_encode_order","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. sort sort order. One \"ascending\" (default) \"descending\". timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. condition One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: OrderFieldDef, array OrderFieldDef OrderValueDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_order — vl_encode_order","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_radius — vl_encode_radius","title":"vl_encode_radius — vl_encode_radius","text":"Add encoding radius vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_radius — vl_encode_radius","text":"","code":"vl_encode_radius(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   scale = NULL,   sort = NULL,   stack = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_radius — vl_encode_radius","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. stack Type stacking offset field stacked. stack applicable x, y, theta, radius channels continuous domains. example, stack y can used customize stacking vertical bar chart. stack can one following values: \"zero\" true: stacking baseline offset zero value scale (creating typical stacked bar area chart). \"normalize\" - stacking normalized domain (creating normalized stacked bar area charts. <br/> -\"center\" - stacking center baseline (streamgraph). null false - -stacking. produce layered bar area chart. Default value: zero plots following conditions true: (1) mark bar, area, arc; (2) stacked measure channel (x y) linear scale; (3) least one non-position channels mapped unaggregated field different x y. Otherwise, null default. See also: stack documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: PositionFieldDefBase, PositionDatumDefBase ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_radius — vl_encode_radius","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_radius2 — vl_encode_radius2","title":"vl_encode_radius2 — vl_encode_radius2","text":"Add encoding radius2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_radius2 — vl_encode_radius2","text":"","code":"vl_encode_radius2(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_radius2 — vl_encode_radius2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef, DatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_radius2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_radius2 — vl_encode_radius2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_row.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_row — vl_encode_row","title":"vl_encode_row — vl_encode_row","text":"Add faceting row vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_row — vl_encode_row","text":"","code":"vl_encode_row(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   align = NULL,   bandPosition = NULL,   bin = NULL,   bounds = NULL,   center = NULL,   columns = NULL,   header = NULL,   sort = NULL,   spacing = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_row — vl_encode_row","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. align alignment apply grid rows columns. supported string values \"\", \"\", \"none\". \"none\", flow layout used, adjacent subviews simply placed one . \"\", subviews aligned clean grid structure, row column may variable size. \"\", subviews aligned row column sized identically based maximum observed size. String values property applied grid rows columns. Alternatively, object value form {\"row\": string, \"column\": string} can used supply different alignments rows columns. Default value: \"\". bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. bounds bounds calculation method use determining extent sub-plot. One full (default) flush. set full, entire calculated bounds (including axes, title, legend) used. set flush, specified width height values sub-view used. flush setting can useful attempting place sub-plots without axes legends uniform grid structure. Default value: \"full\" center Boolean flag indicating subviews centered relative respective rows columns. object value form {\"row\": boolean, \"column\": boolean} can used supply different centering values rows columns. Default value: false columns number columns include view composition layout. Default value: undefined -- infinite number columns (single row) assumed. equivalent hconcat (concat) using column channel (facet repeat). Note: property : general (wrappable) concat operator (hconcat/vconcat) facet repeat operator one field/repetition definition (without row/column nesting) Setting columns 1 equivalent vconcat (concat) using row channel (facet repeat). header object defining properties facet's header. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null supported row column. spacing spacing pixels sub-views composition operator. object form {\"row\": number, \"column\": number} can used set different spacing values rows columns. Default value: Depends \"spacing\" property view composition configuration (20 default) timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FacetEncodingFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_row — vl_encode_row","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_shape — vl_encode_shape","title":"vl_encode_shape — vl_encode_shape","text":"Add encoding shape vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_shape — vl_encode_shape","text":"","code":"vl_encode_shape(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_shape — vl_encode_shape","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef<TypeForShape>,(string|null)>, FieldOrDatumDefWithCondition<DatumDef,(string|null)> ValueDefWithCondition<MarkPropFieldOrDatumDef<TypeForShape>,(string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_shape — vl_encode_shape","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_size.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_size — vl_encode_size","title":"vl_encode_size — vl_encode_size","text":"Add encoding size vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_size — vl_encode_size","text":"","code":"vl_encode_size(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_size — vl_encode_size","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number>, FieldOrDatumDefWithCondition<DatumDef,number> ValueDefWithCondition<MarkPropFieldOrDatumDef,number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_size — vl_encode_size","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_stroke.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_stroke — vl_encode_stroke","title":"vl_encode_stroke — vl_encode_stroke","text":"Add encoding stroke vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_stroke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_stroke — vl_encode_stroke","text":"","code":"vl_encode_stroke(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_stroke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_stroke — vl_encode_stroke","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,(Gradient|string|null)>, FieldOrDatumDefWithCondition<DatumDef,(Gradient|string|null)> ValueDefWithCondition<MarkPropFieldOrDatumDef,(Gradient|string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_stroke.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_stroke — vl_encode_stroke","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeDash.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_strokeDash — vl_encode_strokeDash","title":"vl_encode_strokeDash — vl_encode_strokeDash","text":"Add encoding strokeDash vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeDash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_strokeDash — vl_encode_strokeDash","text":"","code":"vl_encode_strokeDash(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeDash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_strokeDash — vl_encode_strokeDash","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number[]>, FieldOrDatumDefWithCondition<DatumDef,number[]> ValueDefWithCondition<MarkPropFieldOrDatumDef,number[]>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeDash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_strokeDash — vl_encode_strokeDash","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeOpacity.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_strokeOpacity — vl_encode_strokeOpacity","title":"vl_encode_strokeOpacity — vl_encode_strokeOpacity","text":"Add encoding strokeOpacity vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeOpacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_strokeOpacity — vl_encode_strokeOpacity","text":"","code":"vl_encode_strokeOpacity(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeOpacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_strokeOpacity — vl_encode_strokeOpacity","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number>, FieldOrDatumDefWithCondition<DatumDef,number> ValueDefWithCondition<MarkPropFieldOrDatumDef,number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeOpacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_strokeOpacity — vl_encode_strokeOpacity","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeWidth.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_strokeWidth — vl_encode_strokeWidth","title":"vl_encode_strokeWidth — vl_encode_strokeWidth","text":"Add encoding strokeWidth vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeWidth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_strokeWidth — vl_encode_strokeWidth","text":"","code":"vl_encode_strokeWidth(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   legend = NULL,   scale = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeWidth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_strokeWidth — vl_encode_strokeWidth","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. legend object defining properties legend. null, legend encoding channel removed. Default value: undefined, default legend properties applied. See also: legend documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<MarkPropFieldDef,number>, FieldOrDatumDefWithCondition<DatumDef,number> ValueDefWithCondition<MarkPropFieldOrDatumDef,number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_strokeWidth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_strokeWidth — vl_encode_strokeWidth","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_text.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_text — vl_encode_text","title":"vl_encode_text — vl_encode_text","text":"Add encoding text vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_text — vl_encode_text","text":"","code":"vl_encode_text(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   format = NULL,   formatType = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_text — vl_encode_text","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<StringFieldDef,Text>, FieldOrDatumDefWithCondition<StringDatumDef,Text> ValueDefWithCondition<StringFieldDef,Text>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_text — vl_encode_text","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_theta — vl_encode_theta","title":"vl_encode_theta — vl_encode_theta","text":"Add encoding theta vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_theta — vl_encode_theta","text":"","code":"vl_encode_theta(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   scale = NULL,   sort = NULL,   stack = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_theta — vl_encode_theta","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. stack Type stacking offset field stacked. stack applicable x, y, theta, radius channels continuous domains. example, stack y can used customize stacking vertical bar chart. stack can one following values: \"zero\" true: stacking baseline offset zero value scale (creating typical stacked bar area chart). \"normalize\" - stacking normalized domain (creating normalized stacked bar area charts. <br/> -\"center\" - stacking center baseline (streamgraph). null false - -stacking. produce layered bar area chart. Default value: zero plots following conditions true: (1) mark bar, area, arc; (2) stacked measure channel (x y) linear scale; (3) least one non-position channels mapped unaggregated field different x y. Otherwise, null default. See also: stack documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: PositionFieldDefBase, PositionDatumDefBase ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_theta — vl_encode_theta","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_theta2 — vl_encode_theta2","title":"vl_encode_theta2 — vl_encode_theta2","text":"Add encoding theta2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_theta2 — vl_encode_theta2","text":"","code":"vl_encode_theta2(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_theta2 — vl_encode_theta2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef, DatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_theta2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_theta2 — vl_encode_theta2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_tooltip — vl_encode_tooltip","title":"vl_encode_tooltip — vl_encode_tooltip","text":"Add encoding tooltip vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_tooltip — vl_encode_tooltip","text":"","code":"vl_encode_tooltip(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   format = NULL,   formatType = NULL,   timeUnit = NULL,   title = NULL,   value = NULL,   .object = NULL )  vl_encode_tooltip_array(spec, array)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_tooltip — vl_encode_tooltip","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<StringFieldDef,string>, ValueDefWithCondition<MarkPropFieldOrDatumDef,(string|null)>, array StringFieldDef null array Array inputs tooltip","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_tooltip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_tooltip — vl_encode_tooltip","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_url.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_url — vl_encode_url","title":"vl_encode_url — vl_encode_url","text":"Add encoding url vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_url — vl_encode_url","text":"","code":"vl_encode_url(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   condition = NULL,   format = NULL,   formatType = NULL,   timeUnit = NULL,   title = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_url — vl_encode_url","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. condition field definition one value definition(s) parameter predicate. : One value definition(s) parameter test predicate. Note: field definition's condition property can contain conditional value definitions since Vega-Lite allows one encoded field per encoding channel. format used default \"number\" \"time\" format type, text formatting pattern labels guides (axes, legends, headers) text marks. format type \"number\" (e.g., quantitative fields), D3's number format pattern. format type \"time\" (e.g., temporal fields), D3's time format pattern. See format documentation examples. used custom formatType, value passed format alongside datum.value registered function. Default value: Derived numberFormat config number format timeFormat config time format. formatType format type labels. One \"number\", \"time\", registered custom format type. Default value: \"time\" temporal fields ordinal nominal fields timeUnit. \"number\" quantitative fields well ordinal nominal fields without timeUnit. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FieldOrDatumDefWithCondition<StringFieldDef,string> ValueDefWithCondition<MarkPropFieldOrDatumDef,(string|null)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_url — vl_encode_url","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_x — vl_encode_x","title":"vl_encode_x — vl_encode_x","text":"Add encoding x vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_x — vl_encode_x","text":"","code":"vl_encode_x(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   axis = NULL,   bandPosition = NULL,   bin = NULL,   impute = NULL,   scale = NULL,   sort = NULL,   stack = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_x — vl_encode_x","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. axis object defining properties axis's gridlines, ticks labels. null, axis encoding channel removed. Default value: undefined, default axis properties applied. See also: axis documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. impute object defining properties Impute Operation applied. field value positional channel taken key Impute Operation. field color channel specified used groupby Impute Operation. See also: impute documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. stack Type stacking offset field stacked. stack applicable x, y, theta, radius channels continuous domains. example, stack y can used customize stacking vertical bar chart. stack can one following values: \"zero\" true: stacking baseline offset zero value scale (creating typical stacked bar area chart). \"normalize\" - stacking normalized domain (creating normalized stacked bar area charts. <br/> -\"center\" - stacking center baseline (streamgraph). null false - -stacking. produce layered bar area chart. Default value: zero plots following conditions true: (1) mark bar, area, arc; (2) stacked measure channel (x y) linear scale; (3) least one non-position channels mapped unaggregated field different x y. Otherwise, null default. See also: stack documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: PositionFieldDef, PositionDatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_x — vl_encode_x","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_x2 — vl_encode_x2","title":"vl_encode_x2 — vl_encode_x2","text":"Add encoding x2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_x2 — vl_encode_x2","text":"","code":"vl_encode_x2(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_x2 — vl_encode_x2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef, DatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_x2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_x2 — vl_encode_x2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_xError — vl_encode_xError","title":"vl_encode_xError — vl_encode_xError","text":"Add encoding xError vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_xError — vl_encode_xError","text":"","code":"vl_encode_xError(   spec,   field = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_xError — vl_encode_xError","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef ValueDef<number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_xError — vl_encode_xError","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_xError2 — vl_encode_xError2","title":"vl_encode_xError2 — vl_encode_xError2","text":"Add encoding xError2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_xError2 — vl_encode_xError2","text":"","code":"vl_encode_xError2(   spec,   field = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_xError2 — vl_encode_xError2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef ValueDef<number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_xError2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_xError2 — vl_encode_xError2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_y — vl_encode_y","title":"vl_encode_y — vl_encode_y","text":"Add encoding y vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_y — vl_encode_y","text":"","code":"vl_encode_y(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   axis = NULL,   bandPosition = NULL,   bin = NULL,   impute = NULL,   scale = NULL,   sort = NULL,   stack = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_y — vl_encode_y","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. axis object defining properties axis's gridlines, ticks labels. null, axis encoding channel removed. Default value: undefined, default axis properties applied. See also: axis documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. impute object defining properties Impute Operation applied. field value positional channel taken key Impute Operation. field color channel specified used groupby Impute Operation. See also: impute documentation. scale object defining properties channel's scale, function transforms values data domain (numbers, dates, strings, etc) visual values (pixels, colors, sizes) encoding channels. null, scale disabled data value directly encoded. Default value: undefined, default scale properties applied. See also: scale documentation. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. string indicating encoding channel name sort (e.g., \"x\" \"y\") optional minus prefix descending sort (e.g., \"-x\" sort x-field, descending). channel string short-form sort--encoding definition. example, \"sort\": \"-x\" equivalent \"sort\": {\"encoding\": \"x\", \"order\": \"descending\"}. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null sorting another channel supported row column. See also: sort documentation. stack Type stacking offset field stacked. stack applicable x, y, theta, radius channels continuous domains. example, stack y can used customize stacking vertical bar chart. stack can one following values: \"zero\" true: stacking baseline offset zero value scale (creating typical stacked bar area chart). \"normalize\" - stacking normalized domain (creating normalized stacked bar area charts. <br/> -\"center\" - stacking center baseline (streamgraph). null false - -stacking. produce layered bar area chart. Default value: zero plots following conditions true: (1) mark bar, area, arc; (2) stacked measure channel (x y) linear scale; (3) least one non-position channels mapped unaggregated field different x y. Otherwise, null default. See also: stack documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: PositionFieldDef, PositionDatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_y — vl_encode_y","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_y2 — vl_encode_y2","title":"vl_encode_y2 — vl_encode_y2","text":"Add encoding y2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_y2 — vl_encode_y2","text":"","code":"vl_encode_y2(   spec,   field = NULL,   type = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   datum = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_y2 — vl_encode_y2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. datum constant value data domain. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef, DatumDef ValueDef<(number|\"width\"|\"height\"|ExprRef)>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_y2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_y2 — vl_encode_y2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_yError — vl_encode_yError","title":"vl_encode_yError — vl_encode_yError","text":"Add encoding yError vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_yError — vl_encode_yError","text":"","code":"vl_encode_yError(   spec,   field = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_yError — vl_encode_yError","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef ValueDef<number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_yError — vl_encode_yError","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError2.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_encode_yError2 — vl_encode_yError2","title":"vl_encode_yError2 — vl_encode_yError2","text":"Add encoding yError2 vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_encode_yError2 — vl_encode_yError2","text":"","code":"vl_encode_yError2(   spec,   field = NULL,   value = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_encode_yError2 — vl_encode_yError2","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. value constant value visual domain (e.g., \"red\" / \"#0099ff\" / gradient definition color, values 0 1 opacity). aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SecondaryFieldDef ValueDef<number>","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_encode_yError2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_encode_yError2 — vl_encode_yError2","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_facet — vl_facet","title":"vl_facet — vl_facet","text":"Add wrapped facetting vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_facet — vl_facet","text":"","code":"vl_facet(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   header = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   columns = 2,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_facet — vl_facet","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. header object defining properties facet's header. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null supported row column. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. columns number columns add .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FacetFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_facet — vl_facet","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_column.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_facet_column — vl_facet_column","title":"vl_facet_column — vl_facet_column","text":"Add faceting column vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_facet_column — vl_facet_column","text":"","code":"vl_facet_column(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   header = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_facet_column — vl_facet_column","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. header object defining properties facet's header. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null supported row column. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FacetFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_facet_column — vl_facet_column","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_row.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_facet_row — vl_facet_row","title":"vl_facet_row — vl_facet_row","text":"Add faceting row vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_facet_row — vl_facet_row","text":"","code":"vl_facet_row(   spec,   field = NULL,   type = NULL,   aggregate = NULL,   bandPosition = NULL,   bin = NULL,   header = NULL,   sort = NULL,   timeUnit = NULL,   title = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_facet_row — vl_facet_row","text":"spec input vega-lite spec field Required. string defining name field pull data value object defining iterated values repeat operator. See also: field documentation. Notes: 1) Dots (.) brackets ([ ]) can used access nested objects (e.g., \"field\": \"foo.bar\" \"field\": \"foo\\['bar'\\]\"). field names contain dots brackets nested, can use \\\\ escape dots brackets (e.g., \"\\\\.b\" \"\\\\\\[0\\\\\\]\"). See details escaping field documentation. 2) field required aggregate count. type type measurement (\"quantitative\", \"temporal\", \"ordinal\", \"nominal\") encoded field constant value (datum). can also \"geojson\" type encoding 'geoshape'. Vega-Lite automatically infers data types many cases discussed . However, type required field : (1) field nominal field encoding specified aggregate (except argmin argmax), bin, scale type, custom sort order, timeUnit (2) wish use ordinal scale field bin timeUnit. Default value: data field, \"nominal\" default data type unless field encoding aggregate, channel, bin, scale type, sort, timeUnit satisfies following criteria: \"quantitative\" default type (1) encoded field contains bin aggregate except \"argmin\" \"argmax\", (2) encoding channel latitude longitude channel (3) specified scale type quantitative scale. \"temporal\" default type (1) encoded field contains timeUnit (2) specified scale type time utc scale ordinal\"\" default type (1) encoded field contains custom sort order, (2) specified scale type ordinal/point/band scale, (3) encoding channel order. constant value data domain (datum): \"quantitative\" datum number \"nominal\" datum string \"temporal\" datum date time object Note: Data type describes semantics data rather primitive data types (number, string, etc.). primitive data type can different types measurement. example, numeric data can represent quantitative, ordinal, nominal data. Data values temporal field can either date-time string (e.g., \"2015-03-07 12:32:17\", \"17:01\", \"2015-03-16\". \"2015\") timestamp number (e.g., 1552199579097). using bin, type property can either \"quantitative\" (using linear bin scale) \"ordinal\" (using ordinal bin scale). using timeUnit, type property can either \"temporal\" (default, using temporal scale) \"ordinal\" (using ordinal scale). using aggregate, type property refers post-aggregation data type. example, can calculate count distinct categorical field \"cat\" using {\"aggregate\": \"distinct\", \"field\": \"cat\"}. \"type\" aggregate output \"quantitative\". Secondary channels (e.g., x2, y2, xError, yError) type must exactly type primary channels (e.g., x, y). See also: type documentation. aggregate Aggregation function field (e.g., \"mean\", \"sum\", \"median\", \"min\", \"max\", \"count\"). Default value: undefined (None) See also: aggregate documentation. bandPosition Relative position band stacked, binned, time unit, band scale. example, marks positioned beginning band set 0, middle band set 0.5. bin flag binning quantitative field, object defining binning parameters, indicating data x y channel binned imported Vega-Lite (\"binned\"). true, default binning parameters applied. \"binned\", indicates data x (y) channel already binned. can map bin-start field x (y) bin-end field x2 (y2). scale axis formatted similar binning Vega-Lite. adjust axis ticks based bin step, can also set axis's tickMinStep property. Default value: false See also: bin documentation. header object defining properties facet's header. sort Sort order encoded field. continuous fields (quantitative temporal), sort can either \"ascending\" \"descending\". discrete fields, sort can one following: \"ascending\" \"descending\" -- sorting values' natural order JavaScript. sort field definition sorting another field. array specifying field values preferred order. case, sort order obey values array, followed unspecified values original order. discrete time field, values sort array can date-time definition objects. addition, time units \"month\" \"day\", values can month day names (case insensitive) 3-letter initials (e.g., \"Mon\", \"Tue\"). null indicating sort. Default value: \"ascending\" Note: null supported row column. timeUnit Time unit (e.g., year, yearmonth, month, hours) temporal field. temporal field gets casted ordinal. Default value: undefined (None) See also: timeUnit documentation. title title field. null, title removed. Default value: derived field's name transformation function (aggregate, bin timeUnit). field aggregate function, function displayed part title (e.g., \"Sum Profit\"). field binned time unit applied, applied function shown parentheses (e.g., \"Profit (binned)\", \"Transaction Date (year-month)\"). Otherwise, title simply field name. Notes: can customize default field title format providing fieldTitle property config fieldTitle function via compile function's options. field definition's title axis, header, legend title defined, axis/header/legend title used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FacetFieldDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_facet_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_facet_row — vl_facet_row","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_filter — vl_filter","title":"vl_filter — vl_filter","text":"Add FilterTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_filter — vl_filter","text":"","code":"vl_filter(spec, filter = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_filter — vl_filter","text":"spec input vega-lite spec filter filter property must predication definition, can take one following forms: expression string, datum can used refer current data object. example, {filter: \"datum.b2 > 60\"} make output data includes items values field b2 60. one field predicates: equal, lt, lte, gt, gte, range, oneOf, valid, selection predicate, define names selection data point belong (logical composition selections). logical composition (1), (2), (3). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FilterTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_filter — vl_filter","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_flatten — vl_flatten","title":"vl_flatten — vl_flatten","text":"Add FlattenTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_flatten — vl_flatten","text":"","code":"vl_flatten(spec, flatten = NULL, as = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_flatten — vl_flatten","text":"spec input vega-lite spec flatten array one data fields containing arrays flatten. multiple fields specified, array values parallel structure, ideally length. lengths parallel arrays match, longest array used null values added missing entries. output field names extracted array values. Default value: field name corresponding array field .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FlattenTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_flatten — vl_flatten","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_fold.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_fold — vl_fold","title":"vl_fold — vl_fold","text":"Add FoldTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_fold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_fold — vl_fold","text":"","code":"vl_fold(spec, fold = NULL, as = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_fold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_fold — vl_fold","text":"spec input vega-lite spec fold array data fields indicating properties fold. output field names key value properties produced fold transform. Default value: [\"key\", \"value\"] .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: FoldTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_fold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_fold — vl_fold","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_impute — vl_impute","title":"vl_impute — vl_impute","text":"Add ImputeTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_impute — vl_impute","text":"","code":"vl_impute(   spec,   impute = NULL,   key = NULL,   frame = NULL,   groupby = NULL,   keyvals = NULL,   method = NULL,   value = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_impute — vl_impute","text":"spec input vega-lite spec impute data field missing values imputed. key key field uniquely identifies data objects within group. Missing key values (occurring data current group) imputed. frame frame specification two-element array used control window specified method applied. array entries either number indicating offset current data object, null indicate unbounded rows preceding following current data object. example, value [-5, 5] indicates window include five objects preceding five objects following current object. Default value:: [null, null] indicating window includes objects. groupby optional array fields group values. Imputation performed per-group basis. keyvals Defines key values considered imputation. array key values object defining number sequence. provided, used addition key values observed within input data. provided, values derived unique values key field. impute encoding, key field x-field y-field imputed, vice versa. impute grouping, property must specified. method imputation method use field value imputed data objects. One \"value\", \"mean\", \"median\", \"max\" \"min\". Default value: \"value\" value field value use imputation method \"value\". .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ImputeTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_impute — vl_impute","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_joinaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_joinaggregate — vl_joinaggregate","title":"vl_joinaggregate — vl_joinaggregate","text":"Add JoinAggregateTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_joinaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_joinaggregate — vl_joinaggregate","text":"","code":"vl_joinaggregate(spec, joinaggregate = NULL, groupby = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_joinaggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_joinaggregate — vl_joinaggregate","text":"spec input vega-lite spec joinaggregate definition fields join aggregate, calculations use. groupby data fields partitioning data objects separate groups. unspecified, data points single group. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: JoinAggregateTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_joinaggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_joinaggregate — vl_joinaggregate","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_loess — vl_loess","title":"vl_loess — vl_loess","text":"Add LoessTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_loess — vl_loess","text":"","code":"vl_loess(   spec,   loess = NULL,   on = NULL,   as = NULL,   bandwidth = NULL,   groupby = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_loess — vl_loess","text":"spec input vega-lite spec loess data field dependent variable smooth. data field independent variable use predictor. output field names smoothed points generated loess transform. Default value: field names input x y values. bandwidth bandwidth parameter range [0, 1] determines amount smoothing. Default value: 0.3 groupby data fields group . specified, single group containing data objects used. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LoessTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_loess — vl_loess","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_lookup — vl_lookup","title":"vl_lookup — vl_lookup","text":"Add LookupTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_lookup — vl_lookup","text":"","code":"vl_lookup(   spec,   lookup = NULL,   from = NULL,   as = NULL,   default = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_lookup — vl_lookup","text":"spec input vega-lite spec lookup Key primary data source. Data source selection secondary data reference. output fields store looked data values. data lookups, property may left blank .fields specified (field names used); .fields specified, must string. selection lookups, property optional: unspecified, looked values stored property named selection; specified, must correspond .fields. default default value use lookup fails. Default value: null .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: LookupTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_lookup — vl_lookup","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_arc — vl_mark_arc","title":"vl_mark_arc — vl_mark_arc","text":"vl_mark_arc","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_arc — vl_mark_arc","text":"","code":"vl_mark_arc(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_arc — vl_mark_arc","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_arc — vl_mark_arc","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_area.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_area — vl_mark_area","title":"vl_mark_area — vl_mark_area","text":"vl_mark_area","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_area — vl_mark_area","text":"","code":"vl_mark_area(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_area — vl_mark_area","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_area — vl_mark_area","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_bar — vl_mark_bar","title":"vl_mark_bar — vl_mark_bar","text":"vl_mark_bar","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_bar — vl_mark_bar","text":"","code":"vl_mark_bar(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_bar — vl_mark_bar","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_bar — vl_mark_bar","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_boxplot — vl_mark_boxplot","title":"vl_mark_boxplot — vl_mark_boxplot","text":"vl_mark_boxplot","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_boxplot — vl_mark_boxplot","text":"","code":"vl_mark_boxplot(   spec,   box = NULL,   clip = NULL,   color = NULL,   extent = NULL,   median = NULL,   opacity = NULL,   orient = NULL,   outliers = NULL,   rule = NULL,   size = NULL,   ticks = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_boxplot — vl_mark_boxplot","text":"spec input vega-lite spec box boolean : MarkConfig clip Whether composite mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. extent extent whiskers. Available options include: \"min-max\": min max lower upper whiskers respectively. number representing multiple interquartile range. number multiplied IQR determine whisker boundary, spans smallest data largest data within range [Q1 - k * IQR, Q3 + k * IQR] Q1 Q3 first third quartiles IQR interquartile range (Q3-Q1). Default value: 1.5. median boolean : MarkConfig opacity opacity (value [0,1]) mark. orient Orientation box plot. normally automatically determined based types fields x y channels. However, explicit orient specified orientation ambiguous. Default value: \"vertical\". outliers boolean : MarkConfig rule boolean : MarkConfig size Size box median tick box plot ticks boolean : MarkConfig .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: BoxPlotDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_boxplot — vl_mark_boxplot","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_circle — vl_mark_circle","title":"vl_mark_circle — vl_mark_circle","text":"vl_mark_circle","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_circle — vl_mark_circle","text":"","code":"vl_mark_circle(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_circle — vl_mark_circle","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_circle — vl_mark_circle","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorband.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_errorband — vl_mark_errorband","title":"vl_mark_errorband — vl_mark_errorband","text":"vl_mark_errorband","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_errorband — vl_mark_errorband","text":"","code":"vl_mark_errorband(   spec,   band = NULL,   borders = NULL,   clip = NULL,   color = NULL,   extent = NULL,   interpolate = NULL,   opacity = NULL,   orient = NULL,   tension = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_errorband — vl_mark_errorband","text":"spec input vega-lite spec band boolean : MarkConfig borders boolean : MarkConfig clip Whether composite mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. extent extent band. Available options include: \"ci\": Extend band confidence interval mean. \"stderr\": size band set value standard error, extending mean. \"stdev\": size band set value standard deviation, extending mean. \"iqr\": Extend band q1 q3. Default value: \"stderr\". interpolate line interpolation method error band. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": piecewise constant function (step function) consisting alternating horizontal vertical lines. y-value changes midpoint pair adjacent x-values. \"step-\": piecewise constant function (step function) consisting alternating horizontal vertical lines. y-value changes x-value. \"step-\": piecewise constant function (step function) consisting alternating horizontal vertical lines. y-value changes x-value. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. opacity opacity (value [0,1]) mark. orient Orientation error band. normally automatically determined, can specified orientation ambiguous automatically determined. tension tension parameter interpolation type error band. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ErrorBandDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorband.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_errorband — vl_mark_errorband","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorbar.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_errorbar — vl_mark_errorbar","title":"vl_mark_errorbar — vl_mark_errorbar","text":"vl_mark_errorbar","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_errorbar — vl_mark_errorbar","text":"","code":"vl_mark_errorbar(   spec,   clip = NULL,   color = NULL,   extent = NULL,   opacity = NULL,   orient = NULL,   rule = NULL,   size = NULL,   thickness = NULL,   ticks = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_errorbar — vl_mark_errorbar","text":"spec input vega-lite spec clip Whether composite mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. extent extent rule. Available options include: \"ci\": Extend rule confidence interval mean. \"stderr\": size rule set value standard error, extending mean. \"stdev\": size rule set value standard deviation, extending mean. \"iqr\": Extend rule q1 q3. Default value: \"stderr\". opacity opacity (value [0,1]) mark. orient Orientation error bar. normally automatically determined, can specified orientation ambiguous automatically determined. rule boolean : MarkConfig size Size ticks error bar thickness Thickness ticks bar error bar ticks boolean : MarkConfig .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: ErrorBarDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_errorbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_errorbar — vl_mark_errorbar","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_geoshape.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_geoshape — vl_mark_geoshape","title":"vl_mark_geoshape — vl_mark_geoshape","text":"vl_mark_geoshape","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_geoshape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_geoshape — vl_mark_geoshape","text":"","code":"vl_mark_geoshape(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_geoshape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_geoshape — vl_mark_geoshape","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_geoshape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_geoshape — vl_mark_geoshape","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_image.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_image — vl_mark_image","title":"vl_mark_image — vl_mark_image","text":"vl_mark_image","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_image — vl_mark_image","text":"","code":"vl_mark_image(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_image — vl_mark_image","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_image — vl_mark_image","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_line.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_line — vl_mark_line","title":"vl_mark_line — vl_mark_line","text":"vl_mark_line","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_line — vl_mark_line","text":"","code":"vl_mark_line(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_line — vl_mark_line","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_line — vl_mark_line","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_point.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_point — vl_mark_point","title":"vl_mark_point — vl_mark_point","text":"vl_mark_point","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_point — vl_mark_point","text":"","code":"vl_mark_point(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_point — vl_mark_point","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_point — vl_mark_point","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_rect — vl_mark_rect","title":"vl_mark_rect — vl_mark_rect","text":"vl_mark_rect","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_rect — vl_mark_rect","text":"","code":"vl_mark_rect(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_rect — vl_mark_rect","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_rect — vl_mark_rect","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_rule — vl_mark_rule","title":"vl_mark_rule — vl_mark_rule","text":"vl_mark_rule","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_rule — vl_mark_rule","text":"","code":"vl_mark_rule(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_rule — vl_mark_rule","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_rule — vl_mark_rule","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_square.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_square — vl_mark_square","title":"vl_mark_square — vl_mark_square","text":"vl_mark_square","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_square — vl_mark_square","text":"","code":"vl_mark_square(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_square — vl_mark_square","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_square.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_square — vl_mark_square","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_text.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_text — vl_mark_text","title":"vl_mark_text — vl_mark_text","text":"vl_mark_text","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_text — vl_mark_text","text":"","code":"vl_mark_text(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_text — vl_mark_text","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_text — vl_mark_text","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_tick.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_tick — vl_mark_tick","title":"vl_mark_tick — vl_mark_tick","text":"vl_mark_tick","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_tick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_tick — vl_mark_tick","text":"","code":"vl_mark_tick(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_tick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_tick — vl_mark_tick","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_tick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_tick — vl_mark_tick","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_trail.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_mark_trail — vl_mark_trail","title":"vl_mark_trail — vl_mark_trail","text":"vl_mark_trail","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_trail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_mark_trail — vl_mark_trail","text":"","code":"vl_mark_trail(   spec,   align = NULL,   angle = NULL,   aria = NULL,   ariaRole = NULL,   ariaRoleDescription = NULL,   aspect = NULL,   bandSize = NULL,   baseline = NULL,   binSpacing = NULL,   blend = NULL,   clip = NULL,   color = NULL,   continuousBandSize = NULL,   cornerRadius = NULL,   cornerRadiusBottomLeft = NULL,   cornerRadiusBottomRight = NULL,   cornerRadiusEnd = NULL,   cornerRadiusTopLeft = NULL,   cornerRadiusTopRight = NULL,   cursor = NULL,   description = NULL,   dir = NULL,   discreteBandSize = NULL,   dx = NULL,   dy = NULL,   ellipsis = NULL,   fill = NULL,   fillOpacity = NULL,   filled = NULL,   font = NULL,   fontSize = NULL,   fontStyle = NULL,   fontWeight = NULL,   height = NULL,   href = NULL,   innerRadius = NULL,   interpolate = NULL,   invalid = NULL,   limit = NULL,   line = NULL,   lineBreak = NULL,   lineHeight = NULL,   opacity = NULL,   order = NULL,   orient = NULL,   outerRadius = NULL,   padAngle = NULL,   point = NULL,   radius = NULL,   radius2 = NULL,   radius2Offset = NULL,   radiusOffset = NULL,   shape = NULL,   size = NULL,   smooth = NULL,   stroke = NULL,   strokeCap = NULL,   strokeDash = NULL,   strokeDashOffset = NULL,   strokeJoin = NULL,   strokeMiterLimit = NULL,   strokeOffset = NULL,   strokeOpacity = NULL,   strokeWidth = NULL,   style = NULL,   tension = NULL,   text = NULL,   theta = NULL,   theta2 = NULL,   theta2Offset = NULL,   thetaOffset = NULL,   thickness = NULL,   timeUnitBandPosition = NULL,   timeUnitBandSize = NULL,   tooltip = NULL,   url = NULL,   width = NULL,   x = NULL,   x2 = NULL,   x2Offset = NULL,   xOffset = NULL,   y = NULL,   y2 = NULL,   y2Offset = NULL,   yOffset = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_trail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_mark_trail — vl_mark_trail","text":"spec input vega-lite spec align horizontal alignment text ranged marks (area, bar, image, rect, rule). One \"left\", \"right\", \"center\". Note: Expression reference supported range marks. angle rotation angle text, degrees. : ExprRef aria boolean flag indicating ARIA attributes included (SVG output ). false, \"aria-hidden\" attribute set output SVG element, removing mark item ARIA accessibility tree. : ExprRef ariaRole Sets type user interface element mark item ARIA accessibility (SVG output ). specified, property determines \"role\" attribute. Warning: property experimental may changed future. : ExprRef ariaRoleDescription human-readable, author-localized description role mark item ARIA accessibility (SVG output ). specified, property determines \"aria-roledescription\" attribute. Warning: property experimental may changed future. : ExprRef aspect Whether keep aspect ratio image marks. : ExprRef bandSize width ticks. Default value: 3/4 step (width step horizontal ticks height step vertical ticks). baseline text marks, vertical text baseline. One \"alphabetic\" (default), \"top\", \"middle\", \"bottom\", \"line-top\", \"line-bottom\", expression reference provides one valid values. \"line-top\" \"line-bottom\" values operate similarly \"top\" \"bottom\", calculated relative lineHeight rather fontSize alone. range marks, vertical alignment marks. One \"top\", \"middle\", \"bottom\". Note: Expression reference supported range marks. binSpacing Offset bars binned field. ideal value either 0 (preferred statisticians) 1 (Vega-Lite default, D3 example style). Default value: 1 blend color blend mode drawing item current background. valid CSS mix-blend-mode value can used. __Default value: \"source-\" : ExprRef clip Whether mark clipped enclosing group’s width height. color Default color. Default value: <span style=\"color: #4682b4;\">■<\/span> \"#4682b4\" Note: property used style config. fill stroke properties higher precedence color override color. continuousBandSize default size bars continuous scales. Default value: 5 cornerRadius radius pixels rounded rectangles arcs' corners. Default value: 0 : ExprRef cornerRadiusBottomLeft radius pixels rounded rectangles' bottom left corner. Default value: 0 : ExprRef cornerRadiusBottomRight radius pixels rounded rectangles' bottom right corner. Default value: 0 : ExprRef cornerRadiusEnd vertical bars, top-left top-right corner radius. horizontal bars, top-right bottom-right corner radius. cornerRadiusTopLeft radius pixels rounded rectangles' top right corner. Default value: 0 : ExprRef cornerRadiusTopRight radius pixels rounded rectangles' top left corner. Default value: 0 : ExprRef cursor mouse cursor used mark. valid CSS cursor type can used. : ExprRef description text description mark item ARIA accessibility (SVG output ). specified, property determines \"aria-label\" attribute. : ExprRef dir direction text. One \"ltr\" (left--right) \"rtl\" (right--left). property determines side truncated response limit parameter. Default value: \"ltr\" : ExprRef discreteBandSize default size bars discrete dimensions. unspecified, default size step-2, provides 2 pixel offset bars. dx horizontal offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef dy vertical offset, pixels, text label anchor point. offset applied rotation angle property. : ExprRef ellipsis ellipsis string text truncated response limit parameter. Default value: \"…\" : ExprRef fill Default fill color. property higher precedence config.color. Set null remove fill. Default value: (None) fillOpacity fill opacity (value [0,1]). Default value: 1 : ExprRef filled Whether mark's color used fill color instead stroke color. Default value: false point, line, rule marks well geoshape marks graticule data sources; otherwise, true. Note: property used style config. font typeface set text (e.g., \"Helvetica Neue\"). : ExprRef fontSize font size, pixels. Default value: 11 : ExprRef fontStyle font style (e.g., \"italic\"). : ExprRef fontWeight font weight. can either string (e.g \"bold\", \"normal\") number (100, 200, 300, ..., 900 \"normal\" = 400 \"bold\" = 700). : ExprRef height Height marks. One : number representing fixed pixel height. relative band size definition. example, {band: 0.5} represents half band href URL load upon mouse click. defined, mark acts hyperlink. : ExprRef innerRadius inner radius pixels arc marks. innerRadius alias radius2. interpolate line interpolation method use line area marks. One following: \"linear\": piecewise linear segments, polyline. \"linear-closed\": close linear segments form polygon. \"step\": alternate horizontal vertical segments, step function. \"step-\": alternate vertical horizontal segments, step function. \"step-\": alternate horizontal vertical segments, step function. \"basis\": B-spline, control point duplication ends. \"basis-open\": open B-spline; may intersect start end. \"basis-closed\": closed B-spline, loop. \"cardinal\": Cardinal spline, control point duplication ends. \"cardinal-open\": open Cardinal spline; may intersect start end, intersect control points. \"cardinal-closed\": closed Cardinal spline, loop. \"bundle\": equivalent basis, except tension parameter used straighten spline. \"monotone\": cubic interpolation preserves monotonicity y. : ExprRef invalid Defines Vega-Lite handle marks invalid values (null NaN). set \"filter\" (default), data items null values skipped (line, trail, area marks) filtered (marks). null, data items included. case, invalid values interpreted zeroes. limit maximum length text mark pixels. text value automatically truncated rendered size exceeds limit. Default value: 0 -- indicating limit : ExprRef line flag overlaying line top area marks, object defining properties overlayed lines. value empty object ({}) true, lines default properties used. value false, lines automatically added area marks. Default value: false. lineBreak delimiter, newline character, upon break text strings multiple lines. property ignored text array-valued. : ExprRef lineHeight line height pixels (spacing subsequent lines text) multi-line text marks. : ExprRef opacity overall opacity (value [0,1]). Default value: 0.7 non-aggregate plots point, tick, circle, square marks layered bar charts 1 otherwise. order line trail marks, order property can set null false make lines use original order data sources. orient orientation non-stacked bar, tick, area, line charts. value either horizontal (default) vertical. bar, rule tick, determines whether size bar tick applied x y dimension. area, property determines orient property Vega output. line trail marks, property determines sort order points line config.sortLineBy specified. stacked charts, always determined orientation stack; therefore explicitly specified value ignored. outerRadius outer radius pixels arc marks. outerRadius alias radius. padAngle angular padding applied sides arc, radians. : ExprRef point flag overlaying points top line area marks, object defining properties overlayed points. property \"transparent\", transparent points used (enhancing tooltips selections). property empty object ({}) true, filled points default properties used. property false, points automatically added line area marks. Default value: false. radius arc mark, primary (outer) radius pixels. text marks, polar coordinate radial offset, pixels, text origin determined x y properties. radius2 secondary (inner) radius pixels arc marks. radius2Offset Offset radius2. radiusOffset Offset radius. shape Shape point marks. Supported values include: plotting shapes: \"circle\", \"square\", \"cross\", \"diamond\", \"triangle-\", \"triangle-\", \"triangle-right\", \"triangle-left\". line symbol \"stroke\" centered directional shapes \"arrow\", \"wedge\", \"triangle\" custom SVG path string (correct sizing, custom shape paths defined within square bounding box coordinates ranging -1 1 along x y dimensions.) Default value: \"circle\" : ExprRef size Default size marks. point/circle/square, represents pixel area marks. Note value sets area symbol; side lengths increase square root value. bar, represents band size bar, pixels. text, represents font size, pixels. Default value: 30 point, circle, square marks; width/height's step 2 bar marks discrete dimensions; 5 bar marks continuous dimensions; 11 text marks. smooth boolean flag (default true) indicating image smoothed resized. false, individual pixels scaled directly rather interpolated smoothing. SVG rendering, option may work browsers due lack standardization. : ExprRef stroke Default stroke color. property higher precedence config.color. Set null remove stroke. Default value: (None) strokeCap stroke cap line ending style. One \"butt\", \"round\", \"square\". Default value: \"butt\" : ExprRef strokeDash array alternating stroke, space lengths creating dashed dotted lines. : ExprRef strokeDashOffset offset (pixels) begin drawing stroke dash array. : ExprRef strokeJoin stroke line join method. One \"miter\", \"round\" \"bevel\". Default value: \"miter\" : ExprRef strokeMiterLimit miter limit bevel line join. : ExprRef strokeOffset offset pixels draw group stroke fill. unspecified, default behavior dynamically offset stroked groups 1 pixel stroke widths align pixel grid. : ExprRef strokeOpacity stroke opacity (value [0,1]). Default value: 1 : ExprRef strokeWidth stroke width, pixels. : ExprRef style string array strings indicating name custom styles apply mark. style named collection mark property defaults defined within style configuration. style array, later styles override earlier styles. mark properties explicitly defined within encoding override style default. Default value: mark's name. example, bar mark style \"bar\" default. Note: specified style augment default style. example, bar mark \"style\": \"foo\" receive config.style.bar config.style.foo (specified style \"foo\" higher precedence). tension Depending interpolation type, sets tension parameter (line area marks). : ExprRef text Placeholder text text channel specified : ExprRef theta arc marks, arc length radians theta2 specified, otherwise start arc angle. (value 0 indicates “north”, increasing values proceed clockwise.) text marks, polar coordinate angle radians. theta2 end angle arc marks radians. value 0 indicates “north”, increasing values proceed clockwise. theta2Offset Offset theta2. thetaOffset Offset theta. thickness Thickness tick mark. Default value: 1 timeUnitBandPosition Default relative band position time unit. set 0, marks positioned beginning time unit band step. set 0.5, marks positioned middle time unit band step. timeUnitBandSize Default relative band size time unit. set 1, bandwidth marks equal time unit band step. set 0.5, bandwidth marks half time unit band step. tooltip tooltip text string show upon mouse hover object defining fields tooltip derived . tooltip true {\"content\": \"encoding\"}, fields encoding used. tooltip {\"content\": \"data\"}, fields appear highlighted data point used. set null false, tooltip used. See tooltip documentation detailed discussion tooltip Vega-Lite. Default value: null url URL image file image marks. : ExprRef width Width marks. One : number representing fixed pixel width. relative band size definition. example, {band: 0.5} represents half band. x X coordinates marks, width horizontal \"bar\" \"area\" without specified x2 width. value channel can number string \"width\" width plot. x2 X2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"width\" width plot. x2Offset Offset x2-position. xOffset Offset x-position. y Y coordinates marks, height vertical \"bar\" \"area\" without specified y2 height. value channel can number string \"height\" height plot. y2 Y2 coordinates ranged \"area\", \"bar\", \"rect\", \"rule\". value channel can number string \"height\" height plot. y2Offset Offset y2-position. yOffset Offset y-position. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: MarkDef","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_mark_trail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_mark_trail — vl_mark_trail","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_pivot.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_pivot — vl_pivot","title":"vl_pivot — vl_pivot","text":"Add PivotTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_pivot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_pivot — vl_pivot","text":"","code":"vl_pivot(   spec,   pivot = NULL,   value = NULL,   groupby = NULL,   limit = NULL,   op = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_pivot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_pivot — vl_pivot","text":"spec input vega-lite spec pivot data field pivot . unique values field become new field names output stream. value data field populate pivoted fields. aggregate values field become values new pivoted fields. groupby optional data fields group . specified, single group containing data objects used. limit optional parameter indicating maximum number pivoted fields generate. default (0) applies limit. pivoted pivot names sorted ascending order prior enforcing limit. Default value: 0 op aggregation operation apply grouped value field values. Default value: sum .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: PivotTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_pivot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_pivot — vl_pivot","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_quantile — vl_quantile","title":"vl_quantile — vl_quantile","text":"Add QuantileTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_quantile — vl_quantile","text":"","code":"vl_quantile(   spec,   quantile = NULL,   as = NULL,   groupby = NULL,   probs = NULL,   step = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_quantile — vl_quantile","text":"spec input vega-lite spec quantile data field perform quantile estimation. output field names probability quantile values. Default value: [\"prob\", \"value\"] groupby data fields group . specified, single group containing data objects used. probs array probabilities range (0, 1) compute quantile values. specified, step parameter used. step probability step size (default 0.01) sampling quantile values. values one-half step size 1 (exclusive) sampled. parameter used probs parameter provided. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: QuantileTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_quantile — vl_quantile","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_regression — vl_regression","title":"vl_regression — vl_regression","text":"Add RegressionTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_regression — vl_regression","text":"","code":"vl_regression(   spec,   regression = NULL,   on = NULL,   as = NULL,   extent = NULL,   groupby = NULL,   method = NULL,   order = NULL,   params = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_regression — vl_regression","text":"spec input vega-lite spec regression data field dependent variable predict. data field independent variable use predictor. output field names smoothed points generated regression transform. Default value: field names input x y values. extent [min, max] domain independent (x) field starting ending points generated trend line. groupby data fields group . specified, single group containing data objects used. method functional form regression model. One \"linear\", \"log\", \"exp\", \"pow\", \"quad\", \"poly\". Default value: \"linear\" order polynomial order (number coefficients) 'poly' method. Default value: 3 params boolean flag indicating transform return regression model parameters (one object per group), rather trend line points. resulting objects include coef array fitted coefficient values (starting intercept term including terms increasing order) rSquared value (indicating total variance explained model). Default value: false .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: RegressionTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_regression — vl_regression","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_col.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_repeat_col — vl_repeat_col","title":"vl_repeat_col — vl_repeat_col","text":"Add repeat vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_repeat_col — vl_repeat_col","text":"","code":"vl_repeat_col(spec, ...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_repeat_col — vl_repeat_col","text":"spec input vega-lite spec ... fields use repeat (strings)","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_repeat_col — vl_repeat_col","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_repeat_layer — vl_repeat_layer","title":"vl_repeat_layer — vl_repeat_layer","text":"Add repeat vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_repeat_layer — vl_repeat_layer","text":"","code":"vl_repeat_layer(spec, ...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_repeat_layer — vl_repeat_layer","text":"spec input vega-lite spec ... fields use repeat (strings)","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_repeat_layer — vl_repeat_layer","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_row.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_repeat_row — vl_repeat_row","title":"vl_repeat_row — vl_repeat_row","text":"Add repeat vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_repeat_row — vl_repeat_row","text":"","code":"vl_repeat_row(spec, ...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_repeat_row — vl_repeat_row","text":"spec input vega-lite spec ... fields use repeat (strings)","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_repeat_row — vl_repeat_row","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_repeat_wrap — vl_repeat_wrap","title":"vl_repeat_wrap — vl_repeat_wrap","text":"Add repeat vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_repeat_wrap — vl_repeat_wrap","text":"","code":"vl_repeat_wrap(spec, ..., columns = 2)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_repeat_wrap — vl_repeat_wrap","text":"spec input vega-lite spec ... fields use repeat (strings) columns number columns add","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_repeat_wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_repeat_wrap — vl_repeat_wrap","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_sample — vl_sample","title":"vl_sample — vl_sample","text":"Add SampleTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_sample — vl_sample","text":"","code":"vl_sample(spec, sample = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_sample — vl_sample","text":"spec input vega-lite spec sample maximum number data objects include sample. Default value: 1000 .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: SampleTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_sample — vl_sample","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_stack — vl_stack","title":"vl_stack — vl_stack","text":"Add StackTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_stack — vl_stack","text":"","code":"vl_stack(   spec,   stack = NULL,   as = NULL,   groupby = NULL,   offset = NULL,   sort = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_stack — vl_stack","text":"spec input vega-lite spec stack field stacked. Output field names. can either string array strings two elements denoting name fields stack start stack end respectively. single string(e.g., \"val\") provided, end field \"val_end\". groupby data fields group . offset Mode stacking marks. One \"zero\" (default), \"center\", \"normalize\". \"zero\" offset stack starting 0. \"center\" offset center stacks. \"normalize\" offset compute percentage values stack point, output values range [0,1]. Default value: \"zero\" sort Field determines order leaves stacked charts. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: StackTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_stack — vl_stack","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_timeunit.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_timeunit — vl_timeunit","title":"vl_timeunit — vl_timeunit","text":"Add TimeUnitTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_timeunit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_timeunit — vl_timeunit","text":"","code":"vl_timeunit(spec, as = NULL, field = NULL, timeUnit = NULL, .object = NULL)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_timeunit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_timeunit — vl_timeunit","text":"spec input vega-lite spec output field write timeUnit value. field data field apply time unit. timeUnit timeUnit. .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: TimeUnitTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_timeunit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_timeunit — vl_timeunit","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_window.html","id":null,"dir":"Reference","previous_headings":"","what":"vl_window — vl_window","title":"vl_window — vl_window","text":"Add WindowTransform vega-lite spec.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vl_window — vl_window","text":"","code":"vl_window(   spec,   window = NULL,   frame = NULL,   groupby = NULL,   ignorePeers = NULL,   sort = NULL,   .object = NULL )"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vl_window — vl_window","text":"spec input vega-lite spec window definition fields window, calculations use. frame frame specification two-element array indicating sliding window proceed. array entries either number indicating offset current data object, null indicate unbounded rows preceding following current data object. default value [null, 0], indicating sliding window includes current object preceding objects. value [-5, 5] indicates window include five objects preceding five objects following current object. Finally, [null, null] indicates window frame always include data objects. frame want assign value add objects, can use simpler join aggregate transform. operators affected aggregation operations first_value, last_value, nth_value window operations. window operations affected . Default value:: [null, 0] (includes current object preceding objects) groupby data fields partitioning data objects separate windows. unspecified, data points single window. ignorePeers Indicates sliding window frame ignore peer values (data considered identical sort criteria). default false, causing window frame expand include peer values. set true, window frame defined offset values . setting affects operations depend window frame, namely aggregation operations first_value, last_value, nth_value window operations. Default value: false sort sort field definition sorting data objects within window. two data objects considered equal comparator, considered \"peer\" values equal rank. sort specified, order undefined: data objects processed order observed none considered peers (ignorePeers parameter ignored treated set true). .object Directly input object, rather creating one via arguments. used conjunction arguments spec. Objects can type: WindowTransform","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vl_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vl_window — vl_window","text":"modified Vega-Lite Spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions from vlbuildr — vlbuildr-deprecated","title":"Deprecated functions from vlbuildr — vlbuildr-deprecated","text":"functions deprecated favor different naming convention.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions from vlbuildr — vlbuildr-deprecated","text":"","code":"vl_facet_wrap(...)  vl_encode_wrap(...)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions from vlbuildr — vlbuildr-deprecated","text":"... argument pass new function","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vlbuildr: Build Vega-Lite Specs in R — vlbuildr-package","title":"vlbuildr: Build Vega-Lite Specs in R — vlbuildr-package","text":"Build vegalite specs R. Inspired vegalite package well vega-lite-api altair. Dependent vegawidget actually rendering specs!","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr-package.html","id":"types-of-functions","dir":"Reference","previous_headings":"","what":"Types of functions","title":"vlbuildr: Build Vega-Lite Specs in R — vlbuildr-package","text":"package three main types functions: vl_chart initializes new Vega-Lite specification can build upon. vl_ functions build object component spec add input spec. functions enable iteratively building different parts spec. Functions grouped vl list accessible via vl$. functions make object representing sub-component spec. can used build object gets passed vl_ function argument cases argument object . objects can also made simple lists, helpers can used clarity benefit seeing fields available. goal package add sufficient functions common use cases require using vl$ functions, can helpful complex charts.","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vlbuildr: Build Vega-Lite Specs in R — vlbuildr-package","text":"Maintainer: Alicia Schep aschep@gmail.com Authors: Vega-Lite Developers (Vega-Lite schema used directly populate much documentation package.)","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr_operators.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenation operators — vlbuildr_operators","title":"Concatenation operators — vlbuildr_operators","text":"Use + layering, | horizontal concatenation, & vertical concatenation.","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr_operators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenation operators — vlbuildr_operators","text":"","code":"# S3 method for vegaspec_vega_lite |(e1, e2)  # S3 method for vegaspec_vega_lite +(e1, e2)  # S3 method for vegaspec_vega_lite &amp;(e1, e2)"},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr_operators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenation operators — vlbuildr_operators","text":"e1 vegalite spec e2 vegalite spec","code":""},{"path":"https://vegawidget.github.io/vlbuildr/reference/vlbuildr_operators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenation operators — vlbuildr_operators","text":"new vegalite spec","code":""},{"path":[]},{"path":"https://vegawidget.github.io/vlbuildr/reference/vw_as_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce vegaspec to JSON — vw_as_json","title":"Coerce vegaspec to JSON — vw_as_json","text":"See vegawidget::vw_as_json details.","code":""}]
